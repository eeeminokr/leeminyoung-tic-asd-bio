<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Target">
	<resultMap id="targetList" type="TargetVO" >
		<result property="rownum"                                   column="ROWNUM"/>
		<result property="targetId"                                 column="TARGET_ID"/>
		<result property="targetDisId"                              column="TARGET_DIS_ID"/>         
		<result property="rndId"                                    column="RND_ID"/>                  
		<result property="disClassDtl"                              column="DIS_CLASS_DTL"/>           
		<result property="sex"                                      column="SEX"/>                     
		<result property="birthYm"                                  column="BIRTH_YM"/>                
		<result property="protocol"                                 column="PROTOCOL"/>
		<result property="drugKind"                                 column="DRUG_KIND"/>                  
		<result property="performCntNm"                             column="PERFORM_CNT_NM"/>
		<result property="performCnt"                               column="PERFORM_CNT"/>               
		<result property="age"                                      column="AGE"/>                     
		<result property="cxtDiag"                                  column="CXT_DIAG"/>
		<result property="cxtDetail"                                column="CXT_DETAIL"/>                   
		<result property="visitDate"                                column="VISIT_DATE"/>              
		<result property="nextVisitDate"                            column="NEXT_VISIT_DATE"/>
		<result property="remainVisitDate"                          column="REMAIN_VISIT_DATE"/>           
		<result property="researchInterview"                        column="RESEARCH_INTERVIEW"/>      
		<result property="psychology"                               column="PSYCHOLOGY"/>              
		<result property="development"                              column="DEVELOPMENT"/>  
		<result property="bloodF"                                   column="BLOOD_F"/>                 
		<result property="bloodM"                                   column="BLOOD_M"/>                 
		<result property="bloodC"                                   column="BLOOD_C"/>                 
		<result property="paxGene"                                  column="PAX_GENE"/>  
		<result property="urine"                                    column="URINE"/>    
		<result property="feces"                                    column="FECES"/>  
		               
		<result property="remainsAgreeP"                            column="REMAINS_AGREE_P"/>         
		<result property="remainsAgreeC"                            column="REMAINS_AGREE_C"/>         
		<result property="agreeGuardian"                            column="AGREE_GUARDIAN"/>          
		<result property="agreeTarget"                              column="AGREE_TARGET"/>            
		<result property="agreeRpF"                              	column="AGREE_RP_F"/>
		<result property="agreeRpM"                              	column="AGREE_RP_M"/>
		<result property="agreeRhbmF"                              	column="AGREE_R_HBM_F"/>
		<result property="agreeRhbmM"                              	column="AGREE_R_HBM_M"/>
		<result property="agreeRhbmC"                              	column="AGREE_R_HBM_C"/>
		
		<result property="surveyDistrib"                            column="SURVEY_DISTRIB"/>          
		<result property="surveyReclam"                             column="SURVEY_RECLAM"/>           
		<result property="sendResult"                               column="SEND_RESULT"/>             
		<result property="interviewDate"                            column="INTERVIEW_DATE"/>          
		<result property="interviewer"                              column="INTERVIEWER"/>             
		<result property="interviewMethod"                          column="INTERVIEW_METHOD"/>        
		<result property="targetRemarks"                            column="TARGET_REMARKS"/> 
		<result property="status"		                            column="STATUS"/>          
		<result property="termCntMax"		                        column="TERM_CNT_MAX"/>    
	</resultMap>


	<select id="selectTargetList" parameterType="map" resultMap="targetList">
		SELECT 
			ROWNUM,
			TARGET_ID,
			TARGET_DIS_ID,
			RND_ID,
			DIS_CLASS_DTL,
			SEX,
			BIRTH_YM,
			PROTOCOL,
			DRUG_KIND,
			PERFORM_CNT,
			PERFORM_CNT_NM,
			AGE,
			CXT_DIAG,
			CXT_DETAIL,
			VISIT_DATE,
			NEXT_VISIT_DATE,
			STATUS,  
			RESEARCH_INTERVIEW,
			PSYCHOLOGY,
			DEVELOPMENT,
			BLOOD_F,
			BLOOD_M,
			BLOOD_C,
			PAX_GENE,
			URINE,
			FECES,
			AGREE_GUARDIAN,
			AGREE_TARGET,
			AGREE_RP_F,
			AGREE_RP_M,
			AGREE_R_HBM_F,
			AGREE_R_HBM_M,
			AGREE_R_HBM_C,
			SURVEY_DISTRIB,
			SURVEY_RECLAM,
			SEND_RESULT,
			INTERVIEW_DATE,  
			INTERVIEWER,
			INTERVIEW_METHOD,
			TARGET_REMARKS
	 FROM (
			SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
				SELECT
					TM.TARGET_ID,
					TM.TARGET_DIS_ID,
					TM.RND_ID,
					DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					CASE WHEN LENGTH(TM.BIRTH_YM)=8 THEN CONCAT(SUBSTR(TM.BIRTH_YM,1,4) ,'-',SUBSTR(TM.BIRTH_YM,5,2),'-',SUBSTR(TM.BIRTH_YM,7,2)) 
						 ELSE TM.BIRTH_YM END BIRTH_YM,
					PTC.CLASS_CD_DTL_NM PROTOCOL,
					TM.DRUG_KIND,
					PM.PERFORM_CNT,
					PT.PERFORM_NM PERFORM_CNT_NM,
					FN_CAL_AGE(TM.BIRTH_YM, VISIT_DATE) AGE,
					CXT_DIAG,
					CXT_DETAIL,
					CASE WHEN LENGTH(VISIT_DATE)=8 THEN  CONCAT(SUBSTR(VISIT_DATE,1,4) ,'-',SUBSTR(VISIT_DATE,5,2),'-',SUBSTR(VISIT_DATE,7,2)) 
						 ELSE VISIT_DATE END VISIT_DATE, 
					NEXT_VISIT_DATE, 
					STCD.CLASS_CD_DTL_NM STATUS,  
					RESEARCH_INTERVIEW,
					PSYCHOLOGY,
					DEVELOPMENT,
					BLOOD_F,
					BLOOD_M,
					BLOOD_C,
					PAX_GENE,
					URINE,
					FECES,
					AGREE_GUARDIAN,
					AGREE_TARGET,
					AGREE_RP_F,
					AGREE_RP_M,
					AGREE_R_HBM_F,
					AGREE_R_HBM_M,
					AGREE_R_HBM_C,
					SURVEY_DISTRIB,
					SURVEY_RECLAM,
					SEND_RESULT,
					CASE WHEN LENGTH(INTERVIEW_DATE)=8 THEN  CONCAT(SUBSTR(INTERVIEW_DATE,1,4) ,'-',SUBSTR(INTERVIEW_DATE,5,2),'-',SUBSTR(INTERVIEW_DATE,7,2)) 
					 	 ELSE INTERVIEW_DATE END INTERVIEW_DATE,  
					INTERVIEWER,
					INTERVIEW_METHOD,
					TARGET_REMARKS
				FROM T_TARGET_MST TM 
				LEFT JOIN T_TARGET_DIS_MST TDM
                ON TM.TARGET_DIS_ID = TDM.TARGET_ID
				AND TM.TARGET_ID = TDM.TARGET_ORG_ID
				LEFT JOIN T_PERFORM_MST PM
				ON TM.TARGET_ID = PM.TARGET_ID
				AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				AND TM.RND_ID = PM.RND_ID
				LEFT JOIN T_PERFORM_TERM PT
				ON TM.RND_ID = PT.RND_ID
				AND PM.PERFORM_CNT = PT.PERFORM_CNT
				LEFT JOIN T_CODE_DTL DISE1
		        ON DISE1.CLASS_CD = 'DISE1'
		        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		        LEFT JOIN T_CODE_DTL PTC
		        ON PTC.CLASS_CD = 'PT001'
		        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		        JOIN (SELECT @ROWNUM:=0) AS R
		        LEFT JOIN T_CODE_DTL STCD
        		ON STCD.CLASS_CD =  'STS01'
        		AND STCD.CLASS_CD_DTL = PM.STATUS
		        WHERE 1=1
		        <if test="disClassDtl != null and disClassDtl != ''">		        
		        AND DISE1.CLASS_CD_DTL = #{disClassDtl}
		        </if>
			    <if test="status == null or status == ''">
			         AND NOT PM.STATUS = '0004'
			    </if>
			        
		        	<if test="schKeyWord !='schTargetId' ">
			        	<if test="targetId !=null and targetId != '' ">
							AND TM.TARGET_ID = #{targetId}
						</if>
						<if test="targetDisId !=null and targetDisId != '' ">
							AND TM.TARGET_DIS_ID = #{targetDisId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM, VISIT_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM, VISIT_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND TM.SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND PM.PERFORM_CNT = ${performCnt}
						</if>
						<if test="status !=null and status != '' ">
							AND STCD.CLASS_CD_DTL IN (${status})
						</if>
						<if test="cxtDiag !=null and cxtDiag != '' ">
							AND (${cxtDiag})
						</if>
						<if test='researchInterview =="Y"'>
							AND RESEARCH_INTERVIEW  IS NOT NULL
						</if>
						<if test='psychology =="Y"'>
							AND PSYCHOLOGY IS NOT NULL
						</if>
						<if test='development =="Y"'>
							AND DEVELOPMENT IS NOT NULL
						</if>
						<if test='feces =="Y"'>
							AND UPPER(FECES) = 'O'
						</if>
						<if test='urine =="Y"'>
							AND UPPER(URINE) = 'O'
						</if>
						<if test='remainsAgree =="Y"'>
							AND (UPPER(REMAINS_AGREE_P) = 'O' AND UPPER(REMAINS_AGREE_C) = 'O')
						</if>
						<if test='agreeRp =="Y"'>
							AND (UPPER(AGREE_RP_F) = 'O' AND UPPER(AGREE_RP_M) = 'O')
						</if>
						<if test='agreeRhbm =="Y"'>
							AND (UPPER(AGREE_R_HBM_F) = 'O' AND UPPER(AGREE_R_HBM_M) = 'O' AND UPPER(AGREE_R_HBM_C) = 'O')
						</if>
						<if test='surveyDistrib =="Y"'>
							AND UPPER(SURVEY_DISTRIB) = 'O'
						</if>
						<if test='sendResult =="Y"'>
							AND UPPER(SEND_RESULT) = 'O'
						</if>
						<if test='interviewDate =="Y"'>
							AND LENGTH(INTERVIEW_DATE)=8
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (TM.TARGET_ID, TM.DIS_CLASS_DTL, PM.PERFORM_CNT, TM.RND_ID)
								IN (${schKeyWord})
						</if>
					</if>
				ORDER BY TM.TARGET_ID, PM.PERFORM_CNT
			) A
		)X
		WHERE 1=1
			<if test="schKeyWord == 'schTargetId' ">
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = ${performCnt}
			</if> 
		<if test='limit != 0'>
		LIMIT #{start}, #{limit}
		</if>

	</select>
	
	<select id="selectTargetListTotal" parameterType="map" resultType="int">
	
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				TM.TARGET_ID
			FROM T_TARGET_MST TM 
			LEFT JOIN T_TARGET_DIS_MST TDM
            ON TM.TARGET_DIS_ID = TDM.TARGET_ID
			AND TM.TARGET_ID = TDM.TARGET_ORG_ID
			LEFT JOIN T_PERFORM_MST PM
			ON TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND TM.RND_ID = PM.RND_ID
			LEFT JOIN T_PERFORM_TERM PT
			ON TM.RND_ID = PT.RND_ID
			AND PM.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_CODE_DTL STCD
            ON STCD.CLASS_CD =  'STS01'
       	    AND STCD.CLASS_CD_DTL = PM.STATUS
	        WHERE 1=1
	        <if test="disClassDtl != null and disClassDtl != ''">		        
		        AND DISE1.CLASS_CD_DTL = #{disClassDtl}
		    </if>
	        <if test="status ==null or status == ''">
			    AND NOT PM.STATUS = '0004'
			</if>
        	<if test="targetId !=null and targetId != '' ">
				AND TM.TARGET_ID = #{targetId}
			</if>
			<if test="targetDisId !=null and targetDisId != '' ">
				AND TM.TARGET_DIS_ID = #{targetDisId}
			</if>
			<if test="startAge !=null and startAge != '' ">
				AND  (SELECT TRUNCATE((TO_DAYS(NOW()) - TO_DAYS(TM.BIRTH_YM))/365, 0)) &gt;= #{startAge}
			</if>
			<if test="endAge !=null and endAge != '' ">
				AND  (SELECT TRUNCATE((TO_DAYS(NOW()) - TO_DAYS(TM.BIRTH_YM))/365, 0)) &lt;= #{endAge}
			</if>
			<if test="sex !=null and sex != '' ">
				AND TM.SEX = #{sex}
			</if>
			<if test="protocol !=null and protocol != '' ">
				AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
			</if>
			<if test="performCnt !=null and performCnt != '' ">
				AND PM.PERFORM_CNT = ${performCnt}
			</if>
			<if test="status !=null and status != '' ">
				AND STCD.CLASS_CD_DTL IN (${status})
			</if>
			<if test="cxtDiag !=null and cxtDiag != '' ">
				AND (${cxtDiag})
			</if>
			<if test='researchInterview =="Y"'>
				AND RESEARCH_INTERVIEW  IS NOT NULL
			</if>
			<if test='psychology =="Y"'>
				AND PSYCHOLOGY IS NOT NULL
			</if>
			<if test='development =="Y"'>
				AND DEVELOPMENT IS NOT NULL
			</if>
			<if test='feces =="Y"'>
				AND UPPER(FECES) = 'O'
			</if>
			<if test='urine =="Y"'>
				AND UPPER(URINE) = 'O'
			</if>
			<if test='remainsAgree =="Y"'>
				AND (UPPER(REMAINS_AGREE_P) = 'O' AND UPPER(REMAINS_AGREE_C) = 'O')
			</if>
			
			<if test='agreeRp =="Y"'>
				AND (UPPER(AGREE_RP_F) = 'O' AND UPPER(AGREE_RP_M) = 'O')
			</if>
			<if test='agreeRhbm =="Y"'>
				AND (UPPER(AGREE_R_HBM_F) = 'O' AND UPPER(AGREE_R_HBM_M) = 'O' AND UPPER(AGREE_R_HBM_C) = 'O')
			</if>
			<if test='surveyDistrib =="Y"'>
				AND UPPER(SURVEY_DISTRIB) = 'O'
			</if>
			<if test='sendResult =="Y"'>
				AND UPPER(SEND_RESULT) = 'O'
			</if>
			<if test='interviewDate =="Y"'>
				AND LENGTH(INTERVIEW_DATE)=8
			</if>
		) T

	</select>
	<update id="updateTargetList" parameterType="map">
			UPDATE T_PERFORM_MST PM
				SET STATUS = (SELECT CLASS_CD_DTL 
				FROM T_CODE_DTL 
       			WHERE CLASS_CD = 'STS01' AND CLASS_CD_DTL_NM = #{status}) 
  	            WHERE TARGET_ID = #{targetId}
  	            AND PERFORM_CNT = #{performCnt}
	</update>
	<update id="updateNextVisitDate" parameterType="map">
			UPDATE T_PERFORM_MST PM
				SET NEXT_VISIT_DATE = #{nextVisitDate}
                WHERE TARGET_ID = #{targetId}
                AND PERFORM_CNT = #{performCnt}
	</update>
	<update id="updateTargetRemarks" parameterType="map">
			UPDATE T_PERFORM_MST PM
				SET TARGET_REMARKS = #{targetRemarks}
                WHERE TARGET_ID = #{targetId}
                AND PERFORM_CNT = #{performCnt}		
	</update>
	<update id="insertTargetMst" parameterType="map">
		INSERT INTO T_TARGET_MST(
			TARGET_ID
			,TARGET_DIS_ID
			,RND_ID
			,DIS_CLASS_DTL
			,PROTOCOL
			,DRUG_KIND
			,SEX
			,BIRTH_YM
			,USE_YN
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			,#{targetDisId, jdbcType=VARCHAR}
			,#{rndId, jdbcType=VARCHAR}
			,#{disClassDtl, jdbcType=VARCHAR}
			,#{protocol, jdbcType=VARCHAR}
			,#{drugKind, jdbcType=VARCHAR}
			,#{sex, jdbcType=VARCHAR}
			,#{birthYm, jdbcType=VARCHAR}
			,#{useYn, jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			DIS_CLASS_DTL = #{disClassDtl, jdbcType=VARCHAR}
			,TARGET_DIS_ID = #{targetDisId, jdbcType=VARCHAR}
			,PROTOCOL = #{protocol, jdbcType=VARCHAR}
			,DRUG_KIND = #{drugKind, jdbcType=VARCHAR}
			,SEX = #{sex, jdbcType=VARCHAR}
			,BIRTH_YM = #{birthYm, jdbcType=VARCHAR}
			,USE_YN = #{useYn, jdbcType=VARCHAR}
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<update id="insertPerformMst" parameterType="map">
		INSERT INTO T_PERFORM_MST(
			TARGET_ID
			,RND_ID
			,DIS_CLASS_DTL
			,PERFORM_CNT
			,VISIT_DATE
			,CXT_DIAG
			,CXT_DETAIL
			,NEXT_VISIT_DATE
			,RESEARCH_INTERVIEW
			,PSYCHOLOGY
			,DEVELOPMENT
			,BLOOD_F
			,BLOOD_M
			,BLOOD_C
			,PAX_GENE
			,URINE
			,FECES
			,REMAINS_AGREE_P
			,REMAINS_AGREE_C
			,AGREE_GUARDIAN
			,AGREE_TARGET
			,AGREE_RP_F
			,AGREE_RP_M
			,AGREE_R_HBM_F
			,AGREE_R_HBM_M
			,AGREE_R_HBM_C
			,SURVEY_DISTRIB
			,SURVEY_RECLAM
			,SEND_RESULT
			,INTERVIEW_DATE
			,INTERVIEWER
			,INTERVIEW_METHOD
			,TARGET_REMARKS
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			,#{rndId, jdbcType=VARCHAR}
			,#{disClassDtl, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			,#{visitDate, jdbcType=VARCHAR}
			,#{cxtDiag, jdbcType=VARCHAR}
			,#{cxtDetail, jdbcType=VARCHAR}
			,#{nextVisitDate, jdbcType=VARCHAR}
			,#{researchInterview, jdbcType=VARCHAR}
			,#{psychology, jdbcType=VARCHAR}
			,#{development, jdbcType=VARCHAR}
			,#{bloodF, jdbcType=VARCHAR}
			,#{bloodM, jdbcType=VARCHAR}
			,#{bloodC, jdbcType=VARCHAR}
		    ,#{paxGene, jdbcType=VARCHAR}
			,#{urine, jdbcType=VARCHAR}
			,#{feces, jdbcType=VARCHAR}
			,#{remainsAgreeP, jdbcType=VARCHAR}
			,#{remainsAgreeC, jdbcType=VARCHAR}
			,#{agreeGuardian, jdbcType=VARCHAR}
			,#{agreeTarget, jdbcType=VARCHAR}
			,#{agreeRpF, jdbcType=VARCHAR}
			,#{agreeRpM, jdbcType=VARCHAR}
			,#{agreeRhbmF, jdbcType=VARCHAR}
			,#{agreeRhbmM, jdbcType=VARCHAR}
			,#{agreeRhbmC, jdbcType=VARCHAR}
			,#{surveyDistrib, jdbcType=VARCHAR}
			,#{surveyReclam, jdbcType=VARCHAR}
			,#{sendResult, jdbcType=VARCHAR}
			,#{interviewDate, jdbcType=VARCHAR}
			,#{interviewer, jdbcType=VARCHAR}
			,#{interviewMethod, jdbcType=VARCHAR}
			,#{targetRemarks, jdbcType=VARCHAR}
			, now()
			,#{createBy , jdbcType=VARCHAR}
			, now()
			,#{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			VISIT_DATE = #{visitDate, jdbcType=VARCHAR}
			,CXT_DIAG = #{cxtDiag, jdbcType=VARCHAR}
			,CXT_DETAIL = #{cxtDetail, jdbcType=VARCHAR}
			,NEXT_VISIT_DATE = #{nextVisitDate, jdbcType=VARCHAR}
			,RESEARCH_INTERVIEW = #{researchInterview, jdbcType=VARCHAR}
			,PSYCHOLOGY = #{psychology, jdbcType=VARCHAR}
			,DEVELOPMENT = #{development, jdbcType=VARCHAR}
			,BLOOD_F = #{bloodF, jdbcType=VARCHAR}
			,BLOOD_M = #{bloodM, jdbcType=VARCHAR}
			,BLOOD_C = #{bloodC, jdbcType=VARCHAR}
			,PAX_GENE = #{paxGene, jdbcType=VARCHAR}
			,URINE = #{urine, jdbcType=VARCHAR}
			,FECES = #{feces, jdbcType=VARCHAR}
			,REMAINS_AGREE_P = #{remainsAgreeP, jdbcType=VARCHAR}
			,REMAINS_AGREE_C = #{remainsAgreeC, jdbcType=VARCHAR}
			,AGREE_GUARDIAN = #{agreeGuardian, jdbcType=VARCHAR}
			,AGREE_TARGET = #{agreeTarget, jdbcType=VARCHAR}
			,AGREE_RP_F = #{agreeRpF, jdbcType=VARCHAR}
			,AGREE_RP_M = #{agreeRpM, jdbcType=VARCHAR}
			,AGREE_R_HBM_F = #{agreeRhbmF, jdbcType=VARCHAR}
			,AGREE_R_HBM_M = #{agreeRhbmM, jdbcType=VARCHAR}
			,AGREE_R_HBM_C = #{agreeRhbmC, jdbcType=VARCHAR} 
			,SURVEY_DISTRIB = #{surveyDistrib, jdbcType=VARCHAR}
			,SURVEY_RECLAM = #{surveyReclam, jdbcType=VARCHAR}
			,SEND_RESULT = #{sendResult, jdbcType=VARCHAR}
			,INTERVIEW_DATE = #{interviewDate, jdbcType=VARCHAR}
			,INTERVIEWER = #{interviewer, jdbcType=VARCHAR}
			,INTERVIEW_METHOD = #{interviewMethod, jdbcType=VARCHAR}
			,TARGET_REMARKS = #{targetRemarks, jdbcType=VARCHAR}
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<delete id="deletePerformMst" parameterType="map">
		
		DELETE
		FROM T_PERFORM_MST 
		WHERE 1=1
			AND TARGET_ID = #{targetId}
			AND PERFORM_CNT = #{performCnt}
			AND RND_ID = #{rndId}
			AND DIS_CLASS_DTL = #{disClassDtl} 
				
	</delete>
	
	<select id="selectPerformMstCnt" parameterType="map" resultType="int">
		
		SELECT COUNT(TARGET_ID)
		FROM T_PERFORM_MST
		WHERE TARGET_ID = #{targetId}
			  AND RND_ID = #{rndId}
			  
	</select>
	
	<delete id="deleteTargetMst" parameterType="map">
		
		DELETE
		FROM T_TARGET_MST 
		WHERE TARGET_ID = #{targetId}
			AND RND_ID = #{rndId}
			<if test="disClassDtl !=null and disClassDtl != '' ">
			AND DIS_CLASS_DTL = #{disClassDtl}
			</if>
			
	</delete>
	
	<select id="selectTargetFollowUpList" parameterType="map" resultMap="targetList">
		SELECT 
			TM.TARGET_ID,
			TM.RND_ID,
			PM.PERFORM_CNT,
		    PM.VISIT_DATE,
		    PM.NEXT_VISIT_DATE,
		    PM.STATUS,
		    DATEDIFF(DATE_FORMAT(NEXT_VISIT_DATE,'%Y%m%d'),DATE_FORMAT(NOW(),'%Y%m%d')) REMAIN_VISIT_DATE
		    FROM T_TARGET_MST TM
		    JOIN T_PERFORM_MST PM
            ON TM.TARGET_ID = PM.TARGET_ID
			AND TM.RND_ID = PM.RND_ID
            JOIN 
            (SELECT TARGET_ID, RND_ID, MAX(PERFORM_CNT) PERFORM_CNT FROM T_PERFORM_MST
								GROUP BY TARGET_ID, RND_ID) PM_B
			ON PM.TARGET_ID = PM_B.TARGET_ID
			AND PM.RND_ID = PM_B.RND_ID
			AND PM.PERFORM_CNT = PM_B.PERFORM_CNT
        WHERE 1=1
        	AND DATEDIFF(DATE_FORMAT(NEXT_VISIT_DATE,'%Y%m%d'),DATE_FORMAT(NOW(),'%Y%m%d')) &lt;= 30
        	AND PM.STATUS != '0003' AND PM.STATUS != '0004'
		ORDER BY TM.TARGET_ID
	</select>
	
	<select id="selectPerformTermChk" parameterType="map" resultType="int">
		
		SELECT CASE WHEN CNT > 0 THEN 0 
	   		   ELSE (SELECT (MAX(PERFORM_CNT) +1) MAX_CNT FROM T_PERFORM_TERM) 
	   		   END CNT_CHK
		FROM (
				SELECT COUNT(PERFORM_CNT) CNT  FROM T_PERFORM_TERM 
				WHERE PERFORM_NM =  UPPER(#{performCntNm})) A
			  
	</select>
	
	<select id="selectPerformMax" parameterType="map" resultType="String">
		SELECT 
			PERFORM_NM 
		FROM 
			T_PERFORM_TERM 
		WHERE 
			PERFORM_CNT = (SELECT MAX(PERFORM_CNT) FROM T_PERFORM_TERM)
	</select>
	
	<select id="selectTargetCntMax" parameterType="map" resultMap="targetList">
		SELECT 
			MAX(PM.PERFORM_CNT) PERFORM_CNT
			, (SELECT MAX(PERFORM_CNT) FROM T_PERFORM_TERM) TERM_CNT_MAX
		FROM T_TARGET_MST TM 
		LEFT JOIN T_TARGET_DIS_MST TDM
        ON TM.TARGET_DIS_ID = TDM.TARGET_ID
		AND TM.TARGET_ID = TDM.TARGET_ORG_ID
		LEFT JOIN T_PERFORM_MST PM
		ON TM.TARGET_ID = PM.TARGET_ID
		AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
		AND TM.RND_ID = PM.RND_ID
		LEFT JOIN T_PERFORM_TERM PT
		ON TM.RND_ID = PT.RND_ID
		AND PM.PERFORM_CNT = PT.PERFORM_CNT
		LEFT JOIN T_CODE_DTL DISE1
		ON DISE1.CLASS_CD = 'DISE1'
		AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		LEFT JOIN T_CODE_DTL PTC
		ON PTC.CLASS_CD = 'PT001'
		AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		LEFT JOIN T_CODE_DTL STCD
		ON STCD.CLASS_CD =  'STS01'
		AND STCD.CLASS_CD_DTL = PM.STATUS
		WHERE 1=1
		ORDER BY TM.TARGET_ID, PM.PERFORM_CNT
	</select>
	
	<update id="updateRemarksDataDtl" parameterType="map">
		UPDATE T_TARGET_MST TM
			SET REMARKS = #{remarks} 
 	            WHERE TARGET_ID = #{targetId}
 	            AND RND_ID = #{rndId}
				AND DIS_CLASS_DTL = #{disClassDtl} 
	</update>
	
	<update id="insertTargetDisMst" parameterType="map">
		INSERT INTO T_TARGET_DIS_MST(
			TARGET_ID
			,TARGET_ORG_ID
			,RND_ID
			,DIS_CLASS_DTL
			,PROTOCOL
			,DRUG_KIND
			,SEX
			,BIRTH_YM
			,USE_YN
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetDisId, jdbcType=VARCHAR}
			,#{targetOrgId, jdbcType=VARCHAR}
			,#{rndId, jdbcType=VARCHAR}
			,#{disClassDtl, jdbcType=VARCHAR}
			,#{protocol, jdbcType=VARCHAR}
			,#{drugKind, jdbcType=VARCHAR}
			,#{sex, jdbcType=VARCHAR}
			,#{birthYm, jdbcType=VARCHAR}
			,#{useYn, jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			DIS_CLASS_DTL = #{disClassDtl, jdbcType=VARCHAR}
			,TARGET_ORG_ID = #{targetOrgId, jdbcType=VARCHAR}
			,PROTOCOL = #{protocol, jdbcType=VARCHAR}
			,DRUG_KIND = #{drugKind, jdbcType=VARCHAR}
			,SEX = #{sex, jdbcType=VARCHAR}
			,BIRTH_YM = #{birthYm, jdbcType=VARCHAR}
			,USE_YN = #{useYn, jdbcType=VARCHAR}
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<select id="selectTargetUniqueChk" parameterType="map" resultMap="targetList">
		SELECT
			TM.TARGET_ID,
			CD.CLASS_CD_DTL_NM AS DIS_CLASS_DTL
		FROM T_TARGET_MST TM
		JOIN T_CODE_DTL CD
			ON CD.CLASS_CD = 'DISE1'
			AND CD.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		WHERE 1=1
			AND TM.TARGET_ID = #{targetId}
			AND TM.RND_ID = #{rndId}
			AND TM.DIS_CLASS_DTL != #{disClassDtl}
	</select>
</mapper>
		
