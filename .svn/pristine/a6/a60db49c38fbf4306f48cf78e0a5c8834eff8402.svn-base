package medical.clinician.service.impl;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.util.CellRangeAddress;

import medical.clinician.service.ClinicianS1VO;
import medical.framework.file.mapping.CellWriterMapper;
import medical.neuropsy.service.NeuropsyS1VO;

public class ClinicianS1WriterMapper2 implements CellWriterMapper<ClinicianS1VO>{
	@Override
	public void mapHeader(Row row, ClinicianS1VO vo) {
		Cell cell = null;
		int i = 0;
		
		int rowNum = row.getRowNum();
		
		if(rowNum==0) {
			cell = row.createCell(0);
			cell.setCellValue("질병군");	
				
			cell = row.createCell(1);
			cell.setCellValue("연구번호");
			
			
			cell = row.createCell(3);
			cell.setCellValue("성별");

		//	cell = row.createCell(i++);
		//	cell.setCellValue("프로토콜");
			
			cell = row.createCell(4);
			cell.setCellValue("차수");

			cell = row.createCell(5);
			cell.setCellValue("나이");


		cell = row.createCell(6);
		cell.setCellValue("K-SADS\r실시일");	
		
		cell = row.createCell(7);
		cell.setCellValue("나이(ENROLL 기준)");	
		
	
		
		cell = row.createCell(8);
		cell.setCellValue("K-SADS-PL");
		
		cell = row.createCell(82);
		cell.setCellValue("지능-K-Leiter");
		
		cell = row.createCell(136);
		cell.setCellValue("KEDI-WISC");
		
		cell = row.createCell(144);
		cell.setCellValue("K-WISC-IV");
		
		cell = row.createCell(164);
		cell.setCellValue("K-WAIS-IV");
		cell = row.createCell(183);
		}
		if(rowNum==1) {
			cell = row.createCell(i++); //0
			cell = row.createCell(i++);
			cell.setCellValue("뇌원천");
			cell = row.createCell(i++);
			cell.setCellValue("뇌질환");
			cell = row.createCell(i++); //3
			cell = row.createCell(i++); //4
			cell = row.createCell(i++); //5
			cell = row.createCell(i++); //6
			cell = row.createCell(i++); //7
	
			
			cell = row.createCell(i++); //8
			cell.setCellValue("선별-우울");
			cell = row.createCell(i++); //11
			cell = row.createCell(i++); //12
			cell = row.createCell(i++); //13
			cell = row.createCell(i++); //14
			cell = row.createCell(i++); //15
			cell = row.createCell(i++); //16
			cell = row.createCell(i++); //17
			
			cell = row.createCell(i++); //18 
			cell.setCellValue("선별-조증");
			cell = row.createCell(i++); //19
			cell = row.createCell(i++); //20
			cell = row.createCell(i++); //21
			
			cell = row.createCell(i++); //22
			cell.setCellValue("선별-정신증");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-공황장애");
			cell = row.createCell(i++);
			cell.setCellValue("선별-분리불안장애");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-회피성장애");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-광장공포");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-과불안");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-강박증");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-유뇨증,유분증");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("살찌는거\r두려움");
			cell = row.createCell(i++);
			cell.setCellValue("저체중");
			cell = row.createCell(i++);
			cell.setCellValue("체중감량");
			cell = row.createCell(i++);
			cell.setCellValue("폭식");
			cell = row.createCell(i++);
			cell.setCellValue("선별-ADHD");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-ODD");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-CD");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("선별-틱");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("GAS");
			cell = row.createCell(i++);
			cell.setCellValue("ADHD\r요건");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("환산점수의\r합계");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("지능지수/복합지수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("시각화\r및\r추론\r원점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("시각화\r및\r추론\r환산점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("주의환산합계");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("주의복합지수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("원점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("환산점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("부모용");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("원점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("환산점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("원점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("환산점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("원점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("환산점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("원점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("환산점수");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
		}
		if(rowNum==2) {
			
			
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			
			cell = row.createCell(i++);
			cell.setCellValue("우울한기분");
			cell = row.createCell(i++);
			cell.setCellValue("과민성 및 분노");
			cell = row.createCell(i++);
			cell.setCellValue("동기저하");
			cell = row.createCell(i++);
			cell.setCellValue("죽음에 대한 사고");
			cell = row.createCell(i++);
			cell.setCellValue("자살사고");
			cell = row.createCell(i++);
			cell.setCellValue("자살행위-심각도");
			cell = row.createCell(i++);
			cell.setCellValue("자살행위-치명도");
			cell = row.createCell(i++);
			cell.setCellValue("자해");
			cell = row.createCell(i++);
			cell.setCellValue("고양감");
			cell = row.createCell(i++);
			cell.setCellValue("수면욕구감소");
			cell = row.createCell(i++);
			cell.setCellValue("목표지향활동");
			cell = row.createCell(i++);
			cell.setCellValue("질주사고");
			cell = row.createCell(i++);
			cell.setCellValue("환각");
			cell = row.createCell(i++);
			cell.setCellValue("망상");
			cell = row.createCell(i++);
			cell.setCellValue("공황발작");
			cell = row.createCell(i++);
			cell.setCellValue("분리사건두려움");
			cell = row.createCell(i++);
			cell.setCellValue("애착대상두려움");
			cell = row.createCell(i++);
			cell.setCellValue("학교거부");
			cell = row.createCell(i++);
			cell.setCellValue("혼자자기 두려움");
			cell = row.createCell(i++);
			cell.setCellValue("집에혼자 두려움");
			cell = row.createCell(i++);
			cell.setCellValue("위축");
			cell = row.createCell(i++);
			cell.setCellValue("사회적상황 두려움");
			cell = row.createCell(i++);
			cell.setCellValue("고통");
			cell = row.createCell(i++);
			cell.setCellValue("회피");
			cell = row.createCell(i++);
			cell.setCellValue("미래에 대한 걱정");
			cell = row.createCell(i++);
			cell.setCellValue("신체 불평");
			cell = row.createCell(i++);
			cell.setCellValue("현저한 자의식");
			cell = row.createCell(i++);
			cell.setCellValue("현저한 긴장감");
			cell = row.createCell(i++);
			cell.setCellValue("강박행동");
			cell = row.createCell(i++);
			cell.setCellValue("강박사고");
			cell = row.createCell(i++);
			cell.setCellValue("소변 저녁");
			cell = row.createCell(i++);
			cell.setCellValue("소변 낮");
			cell = row.createCell(i++);
			cell.setCellValue("소변 합계");
			cell = row.createCell(i++);
			cell.setCellValue("대변 저녁");
			cell = row.createCell(i++);
			cell.setCellValue("대변 낮");
			cell = row.createCell(i++);
			cell.setCellValue("대변 합계");
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell = row.createCell(i++);
			cell.setCellValue("지속어려움");
			cell = row.createCell(i++);
			cell.setCellValue("쉽게 산만");
			cell = row.createCell(i++);
			cell.setCellValue("앉아있기 어려움");
			cell = row.createCell(i++);
			cell.setCellValue("충동성");
			cell = row.createCell(i++);
			cell.setCellValue("욱하고 화내기");
			cell = row.createCell(i++);
			cell.setCellValue("어른과 말다툼");
			cell = row.createCell(i++);
			cell.setCellValue("규칙따르지않음");
			cell = row.createCell(i++);
			cell.setCellValue("거짓말");
			cell = row.createCell(i++);
			cell.setCellValue("무단결석");
			cell = row.createCell(i++);
			cell.setCellValue("신체적싸움");
			cell = row.createCell(i++);
			cell.setCellValue("괴롭힘");
			cell = row.createCell(i++);
			cell.setCellValue("도둑질");
			cell = row.createCell(i++);
			cell.setCellValue("운동틱");
			cell = row.createCell(i++);
			cell.setCellValue("음성틱");
			
			cell = row.createCell(i++);
			
			cell = row.createCell(i++);
			cell.setCellValue("1. 부주의한 실수");
			cell = row.createCell(i++);
			cell.setCellValue("2. 경청X");
			cell = row.createCell(i++);
			cell.setCellValue("3. 지시따르기 어려움");
			cell = row.createCell(i++);
			cell.setCellValue("4. 과제 정리어려움");
			cell = row.createCell(i++);
			cell.setCellValue("5. 주의력요하는 과제회피");
			cell = row.createCell(i++);
			cell.setCellValue("6 물건을 분실");
			cell = row.createCell(i++);
			cell.setCellValue("7. 일상활동 건망증");
			cell = row.createCell(i++);
			cell.setCellValue("8. 안절부절못함");
			cell = row.createCell(i++);
			cell.setCellValue("9. 지나치게 뛰거나 기어오름");
			cell = row.createCell(i++);
			cell.setCellValue("10. 끊임없이 활동");
			cell = row.createCell(i++);
			cell.setCellValue("11. 조용하게 노느데 어려움");
			cell = row.createCell(i++);
			cell.setCellValue("12. 불쑥 대답");
			cell = row.createCell(i++);
			cell.setCellValue("13. 순서 기다리는데 어려움");
			cell = row.createCell(i++);
			cell.setCellValue("14. 방해, 끼어들기");
			cell = row.createCell(i++);
			cell.setCellValue("15. 활동 이것저것바꿈");
			cell = row.createCell(i++);
			cell.setCellValue("16. 지나치게 많이 말함");
			cell = row.createCell(i++);
			cell.setCellValue("17. 신체적으로 위험한 활동");
			cell = row.createCell(i++);
			cell.setCellValue("진단");
			
			cell = row.createCell(i++);
			cell.setCellValue("기타진단");
			cell = row.createCell(i++);
			cell.setCellValue("전체지능");
			cell = row.createCell(i++);
			cell.setCellValue("단축지능");
			cell = row.createCell(i++);
			cell.setCellValue("유동적 추론");
			cell = row.createCell(i++);
			cell.setCellValue("기본적 시각화");
			cell = row.createCell(i++);
			cell.setCellValue("전체지능");
			cell = row.createCell(i++);
			cell.setCellValue("단축지능");
			cell = row.createCell(i++);
			cell.setCellValue("유동적 추론");
			cell = row.createCell(i++);
			cell.setCellValue("기본적 시각화");
			cell = row.createCell(i++);
			cell.setCellValue("전경배경");
			cell = row.createCell(i++);
			cell.setCellValue("형태완성");
			cell = row.createCell(i++);
			cell.setCellValue("짝짓기");
			cell = row.createCell(i++);
			cell.setCellValue("계기적 순서추론");
			cell = row.createCell(i++);
			cell.setCellValue("반복패턴찾기");
			cell = row.createCell(i++);
			cell.setCellValue("그림맥락추론");
			cell = row.createCell(i++);
			cell.setCellValue("범주화");
			cell = row.createCell(i++);
			cell.setCellValue("전경배경");
			cell = row.createCell(i++);
			cell.setCellValue("형태완성");
			cell = row.createCell(i++);
			cell.setCellValue("짝짓기");
			cell = row.createCell(i++);
			cell.setCellValue("계기적 순서추론");
			cell = row.createCell(i++);
			cell.setCellValue("반복패턴찾기");
			cell = row.createCell(i++);
			cell.setCellValue("그림맥락추론");
			cell = row.createCell(i++);
			cell.setCellValue("범주화");
			cell = row.createCell(i++);
			cell.setCellValue("기억선별");
			cell = row.createCell(i++);
			cell.setCellValue("재인기억");
			cell = row.createCell(i++);
			cell.setCellValue("기억선별");
			cell = row.createCell(i++);
			cell.setCellValue("재인기억");
			cell = row.createCell(i++);
			cell.setCellValue("쌍대연합");
			cell = row.createCell(i++);
			cell.setCellValue("즉각재인");
			cell = row.createCell(i++);
			cell.setCellValue("바로 따라기억하기");
			cell = row.createCell(i++);
			cell.setCellValue("지속적주의력");
			cell = row.createCell(i++);
			cell.setCellValue("지연재인");
			cell = row.createCell(i++);
			cell.setCellValue("쌍대연합");
			cell = row.createCell(i++);
			cell.setCellValue("즉각재인");
			cell = row.createCell(i++);
			cell.setCellValue("바로 따라기억하기");
			cell = row.createCell(i++);
			cell.setCellValue("지속적주의력");
			cell = row.createCell(i++);
			cell.setCellValue("지연재인");
			cell = row.createCell(i++);
			cell.setCellValue("인지/사회 복합점수");
			cell = row.createCell(i++);
			cell.setCellValue("정서/조절 복합점수");
			cell = row.createCell(i++);
			cell.setCellValue("주의력");
			cell = row.createCell(i++);
			cell.setCellValue("활동수준");
			cell = row.createCell(i++);
			cell.setCellValue("충동성");
			cell = row.createCell(i++);
			cell.setCellValue("적응능력");
			cell = row.createCell(i++);
			cell.setCellValue("기분과자신감");
			cell = row.createCell(i++);
			cell.setCellValue("활력감정");
			cell = row.createCell(i++);
			cell.setCellValue("사회성");
			cell = row.createCell(i++);
			cell.setCellValue("조절");
			cell = row.createCell(i++);
			cell.setCellValue("주의력");
			cell = row.createCell(i++);
			cell.setCellValue("활동수준");
			cell = row.createCell(i++);
			cell.setCellValue("충동성");
			cell = row.createCell(i++);
			cell.setCellValue("적응능력");
			cell = row.createCell(i++);
			cell.setCellValue("기분과자신감");
			cell = row.createCell(i++);
			cell.setCellValue("활력감정");
			cell = row.createCell(i++);
			cell.setCellValue("사회성");
			cell = row.createCell(i++);
			cell.setCellValue("조절");
			cell = row.createCell(i++);
			cell.setCellValue("어휘");
			cell = row.createCell(i++);
			cell.setCellValue("산수");
			cell = row.createCell(i++);
			cell.setCellValue("차례");
			cell = row.createCell(i++);
			cell.setCellValue("토막");
			cell = row.createCell(i++);
			cell.setCellValue("어휘");
			cell = row.createCell(i++);
			cell.setCellValue("산수");
			cell = row.createCell(i++);
			cell.setCellValue("차례");
			cell = row.createCell(i++);
			cell.setCellValue("토막");
			cell = row.createCell(i++);
			cell.setCellValue("공통성");
			cell = row.createCell(i++);
			cell.setCellValue("어휘");
			cell = row.createCell(i++);
			cell.setCellValue("이해");
			cell = row.createCell(i++);
			cell.setCellValue("토막");
			cell = row.createCell(i++);
			cell.setCellValue("공통그림");
			cell = row.createCell(i++);
			cell.setCellValue("행렬");
			cell = row.createCell(i++);
			cell.setCellValue("숫자");
			cell = row.createCell(i++);
			cell.setCellValue("순차연결");
			cell = row.createCell(i++);
			cell.setCellValue("기호");
			cell = row.createCell(i++);
			cell.setCellValue("동형");
			cell = row.createCell(i++);
			cell.setCellValue("공통성");
			cell = row.createCell(i++);
			cell.setCellValue("어휘");
			cell = row.createCell(i++);
			cell.setCellValue("이해");
			cell = row.createCell(i++);
			cell.setCellValue("토막");
			cell = row.createCell(i++);
			cell.setCellValue("공통그림");
			cell = row.createCell(i++);
			cell.setCellValue("행렬");
			cell = row.createCell(i++);
			cell.setCellValue("숫자");
			cell = row.createCell(i++);
			cell.setCellValue("순차연결");
			cell = row.createCell(i++);
			cell.setCellValue("기호");
			cell = row.createCell(i++);
			cell.setCellValue("동형");
			cell = row.createCell(i++);
			cell.setCellValue("공통성\nSI");
			cell = row.createCell(i++);
			cell.setCellValue("어휘\nVC");
			cell = row.createCell(i++);
			cell.setCellValue("상식\nIN");
			cell = row.createCell(i++);
			cell.setCellValue("토막짜기\nBD");
			cell = row.createCell(i++);
			cell.setCellValue("행렬추론\nMR");
			cell = row.createCell(i++);
			cell.setCellValue("퍼즐\nVP");
			cell = row.createCell(i++);
			cell.setCellValue("숫자\nDS");
			cell = row.createCell(i++);
			cell.setCellValue("산수\nAR");
			cell = row.createCell(i++);
			cell.setCellValue("동형찾기\nSS");
			cell = row.createCell(i++);
			cell.setCellValue("기호쓰기\nCD");
			cell = row.createCell(i++);
			cell.setCellValue("공통성\nSI");
			cell = row.createCell(i++);
			cell.setCellValue("어휘\nVC");
			cell = row.createCell(i++);
			cell.setCellValue("상식\nIN");
			cell = row.createCell(i++);
			cell.setCellValue("토막짜기\nBD");
			cell = row.createCell(i++);
			cell.setCellValue("행렬추론\nMR");
			cell = row.createCell(i++);
			cell.setCellValue("퍼즐\nVP");
			cell = row.createCell(i++);
			cell.setCellValue("숫자\nDS");
			cell = row.createCell(i++);
			cell.setCellValue("산수\nAR");
			cell = row.createCell(i++);
			cell.setCellValue("동형찾기\nSS");
			cell = row.createCell(183);
			cell.setCellValue("기호쓰기\nCD");
			
		}
	}

	@Override
	public void mapRow(Row row, ClinicianS1VO vo) {
		Cell cell = null;
		int i = 0;
		cell = row.createCell(i++);
		cell.setCellValue(vo.getDisClassDtl());
		
		cell = row.createCell(i++);
		cell.setCellValue(vo.getTargetId());
		
		cell = row.createCell(i++);
		cell.setCellValue(vo.getTargetDisId());

		cell = row.createCell(i++);
		cell.setCellValue(vo.getSex());
;
		
		cell = row.createCell(i++);
		cell.setCellValue(vo.getPerformCntNm());

		cell = row.createCell(i++);
		cell.setCellValue(vo.getAge());

		cell = row.createCell(i++);
		cell.setCellValue(vo.getS1ExecDate());
		
		cell = row.createCell(i++);
		cell.setCellValue(vo.getEnrollAge());
		
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsBlues());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAnger());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsLossm());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsDeath());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSuicide());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSuiSeverity());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSuiCriticality());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSelfharm());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsUplift());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsDecSleep());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsGoalActivity());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsGallop());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsHallucination());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsDelusion());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsPanic());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSeparationFear());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAttachFear());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsRejectSchool());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSleepFear());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAloneFear());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAtrophy());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSituationFear());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsPain());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAvoid());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsFutureWorry());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsBodyComplain());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsSelfConsious());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsTension());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsComplusiveAct());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsComplusiveThink());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsPeeNight());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsPeeDay());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsPeeTotal());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsShitNight());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsShitDay());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsShitTotal());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsFatFear());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsLowWeight());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsWeightLoss());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsVoracity());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAdhdCf());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAdhdEd());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAdhdSf());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsAdhdImpulsivity());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsOddAngry());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsOddAa());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsOddNotrules());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsCdLie());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsCdTruancy());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsCdFight());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsCdTorment());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsCdThievery());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsExerciseTic());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKsadsExerciseVoice());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getGas());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq1Mistake());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq2Notlisten());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq3FollowDiff());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq4ArrangeDiff());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq5AssignAvoid());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq6LostItem());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq7Forgetfulness());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq8Unrest());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq9Overrun());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq10EndlessAct());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq11SilentDiff());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq12SuddenAns());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq13WaitDiff());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq14Interrupt());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq15Fickle());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq16Chatter());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getAdhdrq17DangerAct());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getDiagnosis());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getDiagnosisEtc());
		
		/////////////////////////////////////////
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExctAllIntell());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExctShortIntell());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExctFluidInfer());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExctBasicVisual());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getIcidAllIntell());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getIcidShortIntell());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getIcidFluidInfer());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getIcidBasicVisual());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getVifsForeBack());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getVifsShapeComp());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getVifsMatch());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getVifsOrderInfer());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getVifsPattFind());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getVifsDrawInfer());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getVifsCategoriz());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getViexcForeBack());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getViexcShapeComp());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getViexcMatch());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getViexcOrderInfer());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getViexcPattFind());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getViexcDrawInfer());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getViexcCategoriz());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getCexcMemorySelect());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getCexcRecogMemory());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getCcompMemorySelect());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getCcompRecogMemory());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScPairAsso());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScImmedRecog());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScImmedRemember());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScSustainAtt());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScDelayRecog());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcPairAsso());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcImmedRecog());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcImmedRemember());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcSustainAtt());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcDelayRecog());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getpRsCompsc());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getpEcCompsc());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScAttention());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScActivLevel());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScImpuls());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScAdaptability());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScMoodConfid());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScFeelEmo());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScSociability());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getScControl());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcAttention());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcActivLevel());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcImpuls());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcAdaptability());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcMoodConfid());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcFeelEmo());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcSociability());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getExcControl());
		
		
		
		
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisVocaOs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisArithOs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisOrderOs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisPieceOs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisVocaEs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisArithEs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisOrderEs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKediwaisPieceEs());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivCos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivVos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivUos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivPos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivCpos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivMos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivNos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivScos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivSos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivStos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivCes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivVes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivUes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivPes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivCpes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivMes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivNes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivSces());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivSes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivStes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivSios());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivVcos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivInos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivBdos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivMros());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivVpos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivDsos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivAros());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivSsos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivCdos());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivSies());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivVces());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivInes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivBdes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivMres());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivVpes());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivDses());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivAres());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivSses());
		cell = row.createCell(i++);
		cell.setCellValue(vo.getKwiscivCdes());
	}

	@Override
	public void cellMerge(Sheet sheet) {
		//병합 영역 설정
		sheet.addMergedRegion(new CellRangeAddress(0, 2, 0, 0));
		sheet.addMergedRegion(new CellRangeAddress(0, 0, 1, 2));
		sheet.addMergedRegion(new CellRangeAddress(1, 2, 1, 1));
		sheet.addMergedRegion(new CellRangeAddress(1, 2, 2, 2));
		sheet.addMergedRegion(new CellRangeAddress(0, 2, 3, 3));
		sheet.addMergedRegion(new CellRangeAddress(0, 2, 4, 4));
		sheet.addMergedRegion(new CellRangeAddress(0, 2, 5, 5));
		sheet.addMergedRegion(new CellRangeAddress(0, 2, 6, 6));
		sheet.addMergedRegion(new CellRangeAddress(0, 2, 7, 7));
	
		
	
		sheet.addMergedRegion(new CellRangeAddress(0, 0, 8, 81));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 8, 15));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 16, 19));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 20, 21));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 22, 22));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 23, 27));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 28, 29));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 30, 31));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 32, 35));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 36, 37));
		
		sheet.addMergedRegion(new CellRangeAddress(1, 2, 44, 44));
		sheet.addMergedRegion(new CellRangeAddress(1, 2, 45, 45));
		sheet.addMergedRegion(new CellRangeAddress(1, 2, 46, 46));
		sheet.addMergedRegion(new CellRangeAddress(1, 2, 47, 47));
		
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 48, 51));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 52, 54));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 55, 59));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 60, 61));
		
		sheet.addMergedRegion(new CellRangeAddress(1, 2, 62, 62));
		
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 63, 81));
		
		sheet.addMergedRegion(new CellRangeAddress(0, 0, 82, 135));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 82, 85));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 86, 89));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 90, 96));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 97, 103));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 104, 105));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 106, 107));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 108, 112));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 113, 117));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 118, 119));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 120, 127));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 128, 135));
		
		sheet.addMergedRegion(new CellRangeAddress(0, 0, 136, 143));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 136, 139));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 140, 143));
		
		sheet.addMergedRegion(new CellRangeAddress(0, 0, 144, 163));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 144, 153));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 154, 163));
		
		sheet.addMergedRegion(new CellRangeAddress(0, 0, 164, 183));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 164, 173));
		sheet.addMergedRegion(new CellRangeAddress(1, 1, 174, 183));
		
		//enrollAge 추가 안한거
//		sheet.addMergedRegion(new CellRangeAddress(0, 0, 9, 82));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 9, 16));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 17, 20));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 21, 22));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 24, 28));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 29, 30));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 31, 32));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 33, 36));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 37, 38));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 39, 44));
//		
//		sheet.addMergedRegion(new CellRangeAddress(1, 2, 45, 45));
//		sheet.addMergedRegion(new CellRangeAddress(1, 2, 46, 46));
//		sheet.addMergedRegion(new CellRangeAddress(1, 2, 47, 47));
//		sheet.addMergedRegion(new CellRangeAddress(1, 2, 48, 48));
//		
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 49, 52));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 53, 55));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 56, 60));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 61, 62));
//		
//		sheet.addMergedRegion(new CellRangeAddress(1, 2, 63, 63));
//		
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 64, 80));
//		
//		sheet.addMergedRegion(new CellRangeAddress(0, 0, 83, 136));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 83, 86));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 87, 90));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 91, 97));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 98, 104));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 105, 106));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 107, 108));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 109, 113));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 114, 118));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 119, 120));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 121, 128));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 129, 136));
//		
//		sheet.addMergedRegion(new CellRangeAddress(0, 0, 137, 144));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 137, 140));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 141, 144));
//		
//		sheet.addMergedRegion(new CellRangeAddress(0, 0, 145, 164));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 145, 154));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 155, 164));
//		
//		sheet.addMergedRegion(new CellRangeAddress(0, 0, 165, 184));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 165, 174));
//		sheet.addMergedRegion(new CellRangeAddress(1, 1, 175, 184));
	}

	
}
