<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Neuropsy">

	<resultMap id="neuropsyMenuList" type="NeuropsyVO">
		<result property="docId" 			column="DOC_ID"/>
		<result property="docNm" 			column="DOC_NM"/>
		<result property="disClassDtl" 			column="DIS_CLASS_DTL"/>
		<result property="docClassDtl" 			column="DOC_CLASS_DTL"/>
		<result property="docHeader" 			column="DOC_HEADER"/>
	</resultMap>
	
	<resultMap id="neuropsyS1List" type="NeuropsyS1VO" >
		<result property="targetId"             	column="TARGET_ID"/>                       
		<result property="targetDisId"             	column="TARGET_ID"/>                       
		<result property="disClassDtl"          	column="DIS_CLASS_DTL"/>                   
		<result property="sex"                  	column="SEX"/>                             
		<result property="birthYm"              	column="BIRTH_YM"/>  
		<result property="performCnt"           	column="PERFORM_CNT"/>
		<result property="performCntNm"           	column="PERFORM_CNT_NM"/>                            
		<result property="age"                 		column="AGE"/>
		<result property="protocol"                 column="PROTOCOL"/>
		<result property="ticSubtype"				column="TIC_SUBTYPE"/>
		<result property="s1ExecDate"				column="S1_EXEC_DATE"/>
		<result property="fsiq"						column="FSIQ"/>
		<!-- <result property="kediwaisRef"		column="KEDIWAIS_REF"/> -->
		<result property="kediwaisVocaOs"			column="KEDIWAIS_VOCA_OS"/>
		<result property="kediwaisArithOs"			column="KEDIWAIS_ARITH_OS"/>
		<result property="kediwaisOrderOs"			column="KEDIWAIS_ORDER_OS"/>
		<result property="kediwaisPieceOs"			column="KEDIWAIS_PIECE_OS"/>
		<result property="kediwaisVocaEs"			column="KEDIWAIS_VOCA_ES"/>
		<result property="kediwaisArithEs"			column="KEDIWAIS_ARITH_ES"/>
		<result property="kediwaisOrderEs"			column="KEDIWAIS_ORDER_ES"/>
		<result property="kediwaisPieceEs"			column="KEDIWAIS_PIECE_ES"/>
		<result property="kwiscivCos"				column="KWISCIV_COS"/>
		<result property="kwiscivVos"				column="KWISCIV_VOS"/>
		<result property="kwiscivUos"				column="KWISCIV_UOS"/>
		<result property="kwiscivPos"				column="KWISCIV_POS"/>
		<result property="kwiscivCpos"				column="KWISCIV_CPOS"/>
		<result property="kwiscivMos"				column="KWISCIV_MOS"/>
		<result property="kwiscivNos"				column="KWISCIV_NOS"/>
		<result property="kwiscivScos"				column="KWISCIV_SCOS"/>
		<result property="kwiscivSos"				column="KWISCIV_SOS"/>
		<result property="kwiscivStos"				column="KWISCIV_STOS"/>
		<result property="kwiscivCes"				column="KWISCIV_CES"/>
		<result property="kwiscivVes"				column="KWISCIV_VES"/>
		<result property="kwiscivUes"				column="KWISCIV_UES"/>
		<result property="kwiscivPes"				column="KWISCIV_PES"/>
		<result property="kwiscivCpes"				column="KWISCIV_CPES"/>
		<result property="kwiscivMes"				column="KWISCIV_MES"/>
		<result property="kwiscivNes"				column="KWISCIV_NES"/>
		<result property="kwiscivSces"				column="KWISCIV_SCES"/>
		<result property="kwiscivSes"				column="KWISCIV_SES"/>
		<result property="kwiscivStes"				column="KWISCIV_STES"/>
		<result property="kwiscivSios"				column="KWISCIV_SIOS"/>
		<result property="kwiscivVcos"				column="KWISCIV_VCOS"/>
		<result property="kwiscivInos"				column="KWISCIV_INOS"/>
		<result property="kwiscivBdos"				column="KWISCIV_BDOS"/>
		<result property="kwiscivMros"				column="KWISCIV_MROS"/>
		<result property="kwiscivVpos"				column="KWISCIV_VPOS"/>
		<result property="kwiscivDsos"				column="KWISCIV_DSOS"/>
		<result property="kwiscivAros"				column="KWISCIV_AROS"/>
		<result property="kwiscivSsos"				column="KWISCIV_SSOS"/>
		<result property="kwiscivCdos"				column="KWISCIV_CDOS"/>
		<result property="kwiscivSies"				column="KWISCIV_SIES"/>
		<result property="kwiscivVces"				column="KWISCIV_VCES"/>
		<result property="kwiscivInes"				column="KWISCIV_INES"/>
		<result property="kwiscivBdes"				column="KWISCIV_BDES"/>
		<result property="kwiscivMres"				column="KWISCIV_MRES"/>
		<result property="kwiscivVpes"				column="KWISCIV_VPES"/>
		<result property="kwiscivDses"				column="KWISCIV_DSES"/>
		<result property="kwiscivAres"				column="KWISCIV_ARES"/>
		<result property="kwiscivSses"				column="KWISCIV_SSES"/>
		<result property="kwiscivCdes"				column="KWISCIV_CDES"/>
		
		
		<!--NEW K-WISC-IV 환산점수,지표점수,백분위,95%신뢰구간 추가컬럼  -->
		<result property="kwiscivEsadlu"					column="KWISCIV_ESAD_LU"/>
		<result property="kwiscivEsadpr"					column="KWISCIV_ESAD_PR"/>
		<result property="kwiscivEsadwr"					column="KWISCIV_ESAD_WR"/>
		<result property="kwiscivEsadps"          		 	column="KWISCIV_ESAD_PS"/>
		<result property="kwiscivEsadalliq"    				column="KWISCIV_ESAD_ALLIQ"/>
		
		
		<result property="kwiscivIdxslu"						column="KWISCIV_IDXS_LU"/>   
		<result property="kwiscivIdxspr"						column="KWISCIV_IDXS_PR"/>   
		<result property="kwiscivIdxswr"						column="KWISCIV_IDXS_WR"/>   
		<result property="kwiscivIdxsps"						column="KWISCIV_IDXS_PS"/>   
		<result property="kwiscivIdxsalliq"						column="KWISCIV_IDXS_ALLIQ"/>
		
		<result property="kwiscivPercntlu"					column="KWISCIV_PERCNT_LU"/>
		<result property="kwiscivPercntpr"					column="KWISCIV_PERCNT_PR"/>
		<result property="kwiscivPercntwr"					column="KWISCIV_PERCNT_WR"/>
		<result property="kwiscivPercntps"					column="KWISCIV_PERCNT_PS"/>
		<result property="kwiscivPercntalliq"				column="KWISCIV_PERCNT_ALLIQ"/>
		
		
		<result property="kwiscivConfitvllu"				column="KWISCIV_CONFITVL_LU"/>
		<result property="kwiscivConfitvlpr"				column="KWISCIV_CONFITVL_PR"/>
		<result property="kwiscivConfitvlwr"				column="KWISCIV_CONFITVL_WR"/>
		<result property="kwiscivConfitvlps"				column="KWISCIV_CONFITVL_PS"/>
		<result property="kwiscivConfitvlalliq"			    column="KWISCIV_CONFITVL_ALLIQ"/>
		
		<result property="kwiscivQdlu"						column="KWISCIV_QD_LU"/>
		<result property="kwiscivQdpr"						column="KWISCIV_QD_PR"/>
		<result property="kwiscivQdwr"						column="KWISCIV_QD_WR"/>
		<result property="kwiscivQdps"						column="KWISCIV_QD_PS"/>
		<result property="kwiscivQdalliq"					column="KWISCIV_QD_ALLIQ"/>
		
		<!--NEW K-WAIS-IV 환산점수,지표점수,백분위,95%신뢰구간 추가컬럼  -->
		<result property="kwisciv2Esadlu"					column="KWISCIV2_ESAD_LU"/>
		<result property="kwisciv2Esadpr"					column="KWISCIV2_ESAD_PR"/>
		<result property="kwisciv2Esadwr"					column="KWISCIV2_ESAD_WR"/>
		<result property="kwisciv2Esadps"					column="KWISCIV2_ESAD_PS"/>
		<result property="kwisciv2Esadalliq"				column="KWISCIV2_ESAD_ALLIQ"/>
		
		
		<result property="kwisciv2Idxslu"					column="KWISCIV2_IDXS_LU"/>
		<result property="kwisciv2Idxspr"					column="KWISCIV2_IDXS_PR"/>
		<result property="kwisciv2Idxswr"					column="KWISCIV2_IDXS_WR"/>
		<result property="kwisciv2Idxsps"					column="KWISCIV2_IDXS_PS"/>
		<result property="kwisciv2Idxsalliq"				column="KWISCIV2_IDXS_ALLIQ"/>
		
		
		<result property="kwisciv2Percntlu"					column="KWISCIV2_PERCNT_LU"/>
		<result property="kwisciv2Percntpr"					column="KWISCIV2_PERCNT_PR"/>
		<result property="kwisciv2Percntwr"					column="KWISCIV2_PERCNT_WR"/>
		<result property="kwisciv2Percntps"					column="KWISCIV2_PERCNT_PS"/>
		<result property="kwisciv2Percntalliq"				column="KWISCIV2_PERCNT_ALLIQ"/>
		
		
		<result property="kwisciv2Confitvllu"				column="KWISCIV2_CONFITVL_LU"/>
		<result property="kwisciv2Confitvlpr"				column="KWISCIV2_CONFITVL_PR"/>
		<result property="kwisciv2Confitvlwr"				column="KWISCIV2_CONFITVL_WR"/>
		<result property="kwisciv2Confitvlps"				column="KWISCIV2_CONFITVL_PS"/>
		<result property="kwisciv2Confitvlalliq" 			column="KWISCIV2_CONFITVL_ALLIQ"/>
		
		
		
		
		
		<result property="ksadsBlues"				column="KSADS_BLUES"/>
		<result property="ksadsAnger"				column="KSADS_ANGER"/>
		<result property="ksadsLossm"				column="KSADS_LOSSM"/>
		<result property="ksadsDeath"				column="KSADS_DEATH"/>
		<result property="ksadsSuicide"				column="KSADS_SUICIDE"/>
		<result property="ksadsSuiSeverity"			column="KSADS_SUI_SEVERITY"/>
		<result property="ksadsSuiCriticality"		column="KSADS_SUI_CRITICALITY"/>
		<result property="ksadsSelfharm"			column="KSADS_SELFHARM"/>
		<result property="ksadsUplift"				column="KSADS_UPLIFT"/>
		<result property="ksadsDecSleep"			column="KSADS_DEC_SLEEP"/>
		<result property="ksadsGoalActivity"		column="KSADS_GOAL_ACTIVITY"/>
		<result property="ksadsGallop"				column="KSADS_GALLOP"/>
		<result property="ksadsHallucination"		column="KSADS_HALLUCINATION"/>
		<result property="ksadsDelusion"			column="KSADS_DELUSION"/>
		<result property="ksadsPanic"				column="KSADS_PANIC"/>
		<result property="ksadsSeparationFear"		column="KSADS_SEPARATION_FEAR"/>
		<result property="ksadsAttachFear"			column="KSADS_ATTACH_FEAR"/>
		<result property="ksadsRejectSchool"		column="KSADS_REJECT_SCHOOL"/>
		<result property="ksadsSleepFear"			column="KSADS_SLEEP_FEAR"/>
		<result property="ksadsAloneFear"			column="KSADS_ALONE_FEAR"/>
		<result property="ksadsAtrophy"				column="KSADS_ATROPHY"/>
		<result property="ksadsSituationFear"		column="KSADS_SITUATION_FEAR"/>
		<result property="ksadsPain"				column="KSADS_PAIN"/>
		<result property="ksadsAvoid"				column="KSADS_AVOID"/>
		<result property="ksadsFutureWorry"			column="KSADS_FUTURE_WORRY"/>
		<result property="ksadsBodyComplain"		column="KSADS_BODY_COMPLAIN"/>
		<result property="ksadsSelfConsious"		column="KSADS_SELF_CONSCIOUS"/>
		<result property="ksadsTension"				column="KSADS_TENSION"/>
		<result property="ksadsComplusiveAct"		column="KSADS_COMPLUSIVE_ACT"/>
		<result property="ksadsComplusiveThink"		column="KSADS_COMPLUSIVE_THINK"/>
		<result property="ksadsPeeNight"			column="KSADS_PEE_NIGHT"/>
		<result property="ksadsPeeDay"				column="KSADS_PEE_DAY"/>
		<result property="ksadsPeeTotal"			column="KSADS_PEE_TOTAL"/>
		<result property="ksadsShitNight"			column="KSADS_SHIT_NIGHT"/>
		<result property="ksadsShitDay"				column="KSADS_SHIT_DAY"/>
		<result property="ksadsShitTotal"			column="KSADS_SHIT_TOTAL"/>
		<result property="ksadsFatFear"				column="KSADS_FAT_FEAR"/>
		<result property="ksadsLowWeight"			column="KSADS_LOW_WEIGHT"/>
		<result property="ksadsWeightLoss"			column="KSADS_WEIGHT_LOSS"/>
		<result property="ksadsVoracity"			column="KSADS_VORACITY"/>
		<result property="ksadsAdhdCf"				column="KSADS_ADHD_CF"/>
		<result property="ksadsAdhdEd"				column="KSADS_ADHD_ED"/>
		<result property="ksadsAdhdSf"				column="KSADS_ADHD_SF"/>
		<result property="ksadsAdhdImpulsivity"		column="KSADS_ADHD_IMPULSIVITY"/>
		<result property="ksadsOddAngry"			column="KSADS_ODD_ANGRY"/>
		<result property="ksadsOddAa"				column="KSADS_ODD_AA"/>
		<result property="ksadsOddNotrules"			column="KSADS_ODD_NOTRULES"/>
		<result property="ksadsCdLie"				column="KSADS_CD_LIE"/>
		<result property="ksadsCdTruancy"			column="KSADS_CD_TRUANCY"/>
		<result property="ksadsCdFight"				column="KSADS_CD_FIGHT"/>
		<result property="ksadsCdTorment"			column="KSADS_CD_TORMENT"/>
		<result property="ksadsCdThievery"			column="KSADS_CD_THIEVERY"/>
		<result property="ksadsExerciseTic"			column="KSADS_EXERCISE_TIC"/>
		<result property="ksadsExerciseVoice"		column="KSADS_EXERCISE_VOICE"/>
		<result property="gas"						column="GAS"/>
		<result property="adhdrq1Mistake"			column="ADHDRQ1_MISTAKE"/>
		<result property="adhdrq2Notlisten"			column="ADHDRQ2_NOTLISTEN"/>
		<result property="adhdrq3FollowDiff"		column="ADHDRQ3_FOLLOW_DIFF"/>
		<result property="adhdrq4ArrangeDiff"		column="ADHDRQ4_ARRANGE_DIFF"/>
		<result property="adhdrq5AssignAvoid"		column="ADHDRQ5_ASSIGN_AVOID"/>
		<result property="adhdrq6LostItem"			column="ADHDRQ6_LOST_ITEM"/>
		<result property="adhdrq7Forgetfulness"		column="ADHDRQ7_FORGETFULNESS"/>
		<result property="adhdrq8Unrest"			column="ADHDRQ8_UNREST"/>
		<result property="adhdrq9Overrun"			column="ADHDRQ9_OVERRUN"/>
		<result property="adhdrq10EndlessAct"		column="ADHDRQ10_ENDLESS_ACT"/>
		<result property="adhdrq11SilentDiff"		column="ADHDRQ11_SILENT_DIFF"/>
		<result property="adhdrq12SuddenAns"		column="ADHDRQ12_SUDDEN_ANS"/>
		<result property="adhdrq13WaitDiff"			column="ADHDRQ13_WAIT_DIFF"/>
		<result property="adhdrq14Interrupt"		column="ADHDRQ14_INTERRUPT"/>
		<result property="adhdrq15Fickle"			column="ADHDRQ15_FICKLE"/>
		<result property="adhdrq16Chatter"			column="ADHDRQ16_CHATTER"/>
		<result property="adhdrq17DangerAct"		column="ADHDRQ17_DANGER_ACT"/>
		<result property="diagnosis"				column="DIAGNOSIS"/>
		<result property="diagnosisEtc"				column="DIAGNOSIS_ETC"/>
		<result property="remarks"					column="REMARKS"/>
		
		<!-- 틱장애부록 -->
		<result property="ticAppendix"				column="TIC_APPENDIX"/>
		<result property="sactTic1Ce"				column="SACT_TIC1_CE"/>
		<result property="sactTic1Msp"				column="SACT_TIC1_MSP"/>
		<result property="sactTic2Ce"				column="SACT_TIC2_CE"/>
		<result property="sactTic2Msp"				column="SACT_TIC2_MSP"/>
		<result property="sactTic3Ce"				column="SACT_TIC3_CE"/>
		<result property="sactTic3Msp"				column="SACT_TIC3_MSP"/>
		<result property="sactTic4Ce"				column="SACT_TIC4_CE"/>
		<result property="sactTic4Msp"				column="SACT_TIC4_MSP"/>
		<result property="sactTic5Ce"				column="SACT_TIC5_CE"/>
		<result property="sactTic5Msp"				column="SACT_TIC5_MSP"/>
		<result property="sactTic6Ce"				column="SACT_TIC6_CE"/>
		<result property="sactTic6Msp"				column="SACT_TIC6_MSP"/>
		<result property="sactTic7Ce"				column="SACT_TIC7_CE"/>
		<result property="sactTic7Msp"				column="SACT_TIC7_MSP"/>
		<result property="sactTic8Ce"				column="SACT_TIC8_CE"/>
		<result property="sactTic8Msp"				column="SACT_TIC8_MSP"/>
		<result property="cactTic1Ce"				column="CACT_TIC1_CE"/>
		<result property="cactTic1Msp"				column="CACT_TIC1_MSP"/>
		<result property="cactTic2Ce"				column="CACT_TIC2_CE"/>
		<result property="cactTic2Msp"				column="CACT_TIC2_MSP"/>
		<result property="cactTic3Ce"				column="CACT_TIC3_CE"/>
		<result property="cactTic3Msp"				column="CACT_TIC3_MSP"/>
		<result property="cactTic4Ce"				column="CACT_TIC4_CE"/>
		<result property="cactTic4Msp"				column="CACT_TIC4_MSP"/>
		<result property="cactTic5Ce"				column="CACT_TIC5_CE"/>
		<result property="cactTic5Msp"				column="CACT_TIC5_MSP"/>
		<result property="svoiceTic1Ce"				column="SVOICE_TIC1_CE"/>
		<result property="svoiceTic1Msp"			column="SVOICE_TIC1_MSP"/>
		<result property="svoiceTic2Ce"				column="SVOICE_TIC2_CE"/>
		<result property="svoiceTic2Msp"			column="SVOICE_TIC2_MSP"/>
		<result property="svoiceTic3Ce"				column="SVOICE_TIC3_CE"/>
		<result property="svoiceTic3Msp"			column="SVOICE_TIC3_MSP"/>
		<result property="cvoiceTic1Ce"				column="CVOICE_TIC1_CE"/>
		<result property="cvoiceTic1Msp"			column="CVOICE_TIC1_MSP"/>
		<result property="cvoiceTic2Ce"				column="CVOICE_TIC2_CE"/>
		<result property="cvoiceTic2Msp"			column="CVOICE_TIC2_MSP"/>
		<result property="cvoiceTic3Ce"				column="CVOICE_TIC3_CE"/>
		<result property="cvoiceTic3Msp"			column="CVOICE_TIC3_MSP"/>
		<result property="cvoiceTic4Ce"				column="CVOICE_TIC4_CE"/>
		<result property="cvoiceTic4Msp"			column="CVOICE_TIC4_MSP"/>
		<result property="cvoiceTic5Ce"				column="CVOICE_TIC5_CE"/>
		<result property="cvoiceTic5Msp"			column="CVOICE_TIC5_MSP"/>
		<result property="cvoiceTic6aCe"			column="CVOICE_TIC6A_CE"/>
		<result property="cvoiceTic6aMsp"			column="CVOICE_TIC6A_MSP"/>
		<result property="cvoiceTic6bCe"			column="CVOICE_TIC6B_CE"/>
		<result property="cvoiceTic6bMsp"			column="CVOICE_TIC6B_MSP"/>
		<result property="cvoiceTic6cCe"			column="CVOICE_TIC6C_CE"/>
		<result property="cvoiceTic6cMsp"			column="CVOICE_TIC6C_MSP"/>
		<result property="tourette7aCe"				column="TOURETTE_7A_CE"/>
		<result property="tourette7aMsp"			column="TOURETTE_7A_MSP"/>
		<result property="tourette7bCe"				column="TOURETTE_7B_CE"/>
		<result property="tourette7bMsp"			column="TOURETTE_7B_MSP"/>
		<result property="chronicTic8aCe"			column="CHRONIC_TIC8A_CE"/>
		<result property="chronicTic8aMsp"			column="CHRONIC_TIC8A_MSP"/>
		<result property="chronicTic8bCe"			column="CHRONIC_TIC8B_CE"/>
		<result property="chronicTic8bMsp"			column="CHRONIC_TIC8B_MSP"/>
		<result property="dailyTic9aCe"				column="DAILY_TIC9A_CE"/>
		<result property="dailyTic9aMsp"			column="DAILY_TIC9A_MSP"/>
		<result property="dailyTic9bCe"				column="DAILY_TIC9B_CE"/>
		<result property="dailyTic9bMsp"			column="DAILY_TIC9B_MSP"/>
		
		<result property="enrollAge"     			column="ENROLL_AGE"/>
		<!-- 뇌원천 ASD T_S1_IKLEITER -->
		<result property="exctAllIntell"     		column="EXCT_ALL_INTELL"/>
		<result property="exctShortIntell"     		column="EXCT_SHORT_INTELL"/>
		<result property="exctFluidInfer"     		column="EXCT_FLUID_INFER"/>
		<result property="exctBasicVisual"     		column="EXCT_BASIC_VISUAL"/>
		<result property="icidAllIntell"     		column="ICID_ALL_INTELL"/>
		<result property="icidShortIntell"     		column="ICID_SHORT_INTELL"/>
		<result property="icidFluidInfer"     		column="ICID_FLUID_INFER"/>
		<result property="icidBasicVisual"     		column="ICID_BASIC_VISUAL"/>
		<result property="vifsForeBack"     		column="VIFS_FORE_BACK"/>
		<result property="vifsShapeComp"     		column="VIFS_SHAPE_COMP"/>
		<result property="vifsMatch"     			column="VIFS_MATCH"/>
		<result property="vifsOrderInfer"     		column="VIFS_ORDER_INFER"/>
		<result property="vifsPattFind"     		column="VIFS_PATT_FIND"/>
		<result property="vifsDrawInfer"     		column="VIFS_DRAW_INFER"/>
		<result property="vifsCategoriz"     		column="VIFS_CATEGORIZ"/>
		<result property="viexcForeBack"     		column="VIEXC_FORE_BACK"/>
		<result property="viexcShapeComp"     		column="VIEXC_SHAPE_COMP"/>
		<result property="viexcMatch"     			column="VIEXC_MATCH"/>
		<result property="viexcOrderInfer"     		column="VIEXC_ORDER_INFER"/>
		<result property="viexcPattFind"     		column="VIEXC_PATT_FIND"/>
		<result property="viexcDrawInfer"     		column="VIEXC_DRAW_INFER"/>
		<result property="viexcCategoriz"     		column="VIEXC_CATEGORIZ"/>
		<result property="cexcMemorySelect"     	column="CEXC_MEMORY_SELECT"/>
		<result property="cexcRecogMemory"     		column="CEXC_RECOG_MEMORY"/>
		<result property="ccompMemorySelect"     	column="CCOMP_MEMORY_SELECT"/>
		<result property="ccompRecogMemory"     	column="CCOMP_RECOG_MEMORY"/>
		<result property="scPairAsso"     			column="SC_PAIR_ASSO"/>
		<result property="scImmedRecog"     		column="SC_IMMED_RECOG"/>
		<result property="scImmedRemember"     		column="SC_IMMED_REMEMBER"/>
		<result property="scSustainAtt"    			column="SC_SUSTAIN_ATT"/>
		<result property="scDelayRecog"     		column="SC_DELAY_RECOG"/>
		<result property="excPairAsso"     			column="EXC_PAIR_ASSO"/>
		<result property="excImmedRecog"     		column="EXC_IMMED_RECOG"/>
		<result property="excImmedRemember"     	column="EXC_IMMED_REMEMBER"/>
		<result property="excSustainAtt"     		column="EXC_SUSTAIN_ATT"/>
		<result property="excDelayRecog"     		column="EXC_DELAY_RECOG"/>
		<result property="pRsCompsc"     			column="P_RS_COMPSC"/>
		<result property="pEcCompsc"     			column="P_EC_COMPSC"/>
		<result property="scAttention"     			column="SC_ATTENTION"/>
		<result property="scActivLevel"     		column="SC_ACTIV_LEVEL"/>
		<result property="scImpuls"     			column="SC_IMPULS"/>
		<result property="scAdaptability"     		column="SC_ADAPTABILITY"/>
		<result property="scMoodConfid"    			column="SC_MOOD_CONFID"/>
		<result property="scFeelEmo"     			column="SC_FEEL_EMO"/>
		<result property="scSociability"     		column="SC_SOCIABILITY"/>
		<result property="scControl"     			column="SC_CONTROL"/>
		<result property="excAttention"     		column="EXC_ATTENTION"/>
		<result property="excActivLevel"     		column="EXC_ACTIV_LEVEL"/>
		<result property="excImpuls"     			column="EXC_IMPULS"/>
		<result property="excAdaptability"     		column="EXC_ADAPTABILITY"/>
		<result property="excMoodConfid"     		column="EXC_MOOD_CONFID"/>
		<result property="excFeelEmo"     			column="EXC_FEEL_EMO"/>
		<result property="excSociability"     		column="EXC_SOCIABILITY"/>
		<result property="excControl"     			column="EXC_CONTROL"/>
	</resultMap>
	
	<resultMap id="neuropsyAtaList" type="NeuropsyAtaVO">
		<result property="rownum"             column="ROWNUM"/>
		<result property="targetId"           column="TARGET_ID"/>                               
		<result property="targetDisId"        column="TARGET_DIS_ID"/>                               
		<result property="disClassDtl"        column="DIS_CLASS_DTL"/>                           
		<result property="sex"                column="SEX"/>                                     
		<result property="birthYm"            column="BIRTH_YM"/>     
		<result property="protocol"           column="PROTOCOL"/>                           
		<result property="performCnt"         column="PERFORM_CNT"/>          
		<result property="performCntNm"       column="PERFORM_CNT_NM"/>                   
		<result property="age"                column="AGE"/>                                     
		<result property="ataExecDate"        column="ATA_EXEC_DATE"/>                           
		<result property="atavMissz"          column="ATAV_MISSZ"/>                              
		<result property="atavFalarmz"        column="ATAV_FALARMZ"/>                            
		<result property="atavReactzAvg"      column="ATAV_REACTZ_AVG"/>                         
		<result property="atavReactzDev"      column="ATAV_REACTZ_DEV"/>                         
		<result property="atavMisst"          column="ATAV_MISST"/>                              
		<result property="atavFalarmt"        column="ATAV_FALARMT"/>                            
		<result property="atavReacttAvg"      column="ATAV_REACTT_AVG"/>                         
		<result property="atavReacttDev"      column="ATAV_REACTT_DEV"/>                         
		<result property="atahMissz"          column="ATAH_MISSZ"/>                              
		<result property="atahFalarmz"        column="ATAH_FALARMZ"/>                            
		<result property="atahReactzAvg"      column="ATAH_REACTZ_AVG"/>                         
		<result property="atahReactzDev"      column="ATAH_REACTZ_DEV"/>                         
		<result property="atahMisst"          column="ATAH_MISST"/>                              
		<result property="atahFalarmt"        column="ATAH_FALARMT"/>                            
		<result property="atahReacttAvg"      column="ATAH_REACTT_AVG"/>                         
		<result property="atahReacttDev"      column="ATAH_REACTT_DEV"/>            
		<result property="remarks"              column="REMARKS"/>                        
	</resultMap>
	
	<resultMap id="neuropsyStroopList" type="NeuropsyStroopVO">
		<result property="rownum"             column="ROWNUM"/>
		<result property="targetId"             column="TARGET_ID"/>                       
		<result property="targetDisId"          column="TARGET_DIS_ID"/>                       
		<result property="disClassDtl"          column="DIS_CLASS_DTL"/>                   
		<result property="sex"                  column="SEX"/>                             
		<result property="birthYm"              column="BIRTH_YM"/>   
		<result property="protocol"             column="PROTOCOL"/>                     
		<result property="performCnt"           column="PERFORM_CNT"/>    
		<result property="performCntNm"         column="PERFORM_CNT_NM"/>                 
		<result property="age"                  column="AGE"/>                             
		<result property="stroopExecDate"       column="STROOP_EXEC_DATE"/>                
		<result property="wordR"                column="WORD_R"/>                          
		<result property="colorR"               column="COLOR_R"/>                         
		<result property="colorwordR"           column="COLORWORD_R"/>                     
		<result property="interferR"            column="INTERFER_R"/>                      
		<result property="wordT"                column="WORD_T"/>                          
		<result property="colorT"               column="COLOR_T"/>                         
		<result property="colorwordT"           column="COLORWORD_T"/>                     
		<result property="interferT"            column="INTERFER_T"/>
		<result property="remarks"              column="REMARKS"/>                            
	</resultMap>
	
	<resultMap id="neuropsyCcttList" type="NeuropsyCcttVO">
		<result property="rownum"             column="ROWNUM"/>
      <result property="targetId"             column="TARGET_ID"/>                       
      <result property="targetDisId"          column="TARGET_DIS_ID"/>                       
      <result property="disClassDtl"          column="DIS_CLASS_DTL"/>                   
      <result property="sex"                  column="SEX"/>          
      <result property="protocol"             column="PROTOCOL"/>                   
      <result property="birthYm"              column="BIRTH_YM"/>                        
      <result property="performCnt"           column="PERFORM_CNT"/> 
      <result property="performCntNm"         column="PERFORM_CNT_NM"/>                    
      <result property="age"                  column="AGE"/>                             
      <result property="ccttExecDate"          column="CCTT_EXEC_DATE"/>                
      <result property="cctt1CompleteTime"    column="CCTT1_COMPLETE_TIME"/>                          
      <result property="cctt1Tpoint"          column="CCTT1_TPOINT"/>                         
      <result property="cctt1Ile"              column="CCTT1_ILE"/>                     
      <result property="cctt1DigseqErr"       column="CCTT1_DIGSEQ_ERR"/>                      
      <result property="cctt1ApproxErr"       column="CCTT1_APPROX_ERR"/>                          
      <result property="cctt1Catalist"        column="CCTT1_CATALIST"/>                         
      <result property="cctt2CompleteTime"    column="CCTT2_COMPLETE_TIME"/>                     
      <result property="cctt2Tpoint"          column="CCTT2_TPOINT"/>     
      <result property="cctt2Ile"            column="CCTT2_ILE"/>
      <result property="cctt2ColseqErr"      column="CCTT2_COLSEQ_ERR"/>   
      <result property="cctt2DigseqErr"      column="CCTT2_DIGSEQ_ERR"/>   
      <result property="cctt2ApproxErr"      column="CCTT2_APPROX_ERR"/>   
      <result property="cctt2Catalist"      column="CCTT2_CATALIST"/>   
      <result property="interferARiir"      column="INTERFER_A_RIIR"/>   
      <result property="interferAIle"         column="INTERFER_A_ILE"/>   
      <result property="interferBRiir"      column="INTERFER_B_RIIR"/>
      <result property="interferBTpoint"      column="INTERFER_B_TPOINT"/>   
      <result property="interferBIle"         column="INTERFER_B_ILE"/>   
      <result property="remarks"            column="REMARKS"/>   
   	</resultMap>
   
   	<resultMap id="neuropsyWsctList" type="NeuropsyWsctVO">
   		<result property="rownum"             column="ROWNUM"/>
		<result property="targetId"           column="TARGET_ID"/>                               
		<result property="targetDisId"        column="TARGET_DIS_ID"/>                               
		<result property="disClassDtl"        column="DIS_CLASS_DTL"/>                           
		<result property="sex"                column="SEX"/>                                     
		<result property="birthYm"            column="BIRTH_YM"/>    
		<result property="protocol"           column="PROTOCOL"/>                            
		<result property="performCnt"         column="PERFORM_CNT"/>  
		<result property="performCntNm"       column="PERFORM_CNT_NM"/>                           
		<result property="age"                column="AGE"/>     
		<result property="wsctExecDate"			column="WscT_EXEC_DATE"/>     
		<result property="totalErrorsR"			column="TOTAL_ERRORS_R"/>     
		<result property="totalErrorsS"			column="TOTAL_ERRORS_S"/>     
		<result property="totalErrorsT"			column="TOTAL_ERRORS_T"/>     
		<result property="totalErrorsIle"		column="TOTAL_ERRORS_ILE"/>     
		<result property="perseverResponT"		column="PERSEVER_RESPON_T"/>     
		<result property="perseverErrorT"		column="PERSEVER_ERROR_T"/>     
		<result property="nonperseverErrorT"	column="NONPERSEVER_ERROR_T"/>     
		<result property="concepResponT"		column="CONCEP_RESPON_T"/>     
		<result property="categoryCompleteR"	column="CATEGORY_COMPLETE_R"/>     
		<result property="trialCompleteR"		column="TRIAL_COMPLETE_R"/>     
		<result property="failureR"				column="FAILURE_R"/>     
		<result property="ingtoLearn"			column="INGTO_LEARN"/>     
		<result property="categoryCompleteIle"	column="CATEGORY_COMPLETE_ILE"/>     
		<result property="trialCompleteIle"		column="TRIAL_COMPLETE_ILE"/>     
		<result property="failureIle"			column="FAILURE_ILE"/>     
		<result property="ingtoLearnIle"		column="INGTO_LEARN_ILE"/>     
		<result property="remarks"				column="REMARKS"/>     	
	</resultMap>
	
   	<resultMap id="neuropsyCatList" type="NeuropsyCatVO">
   		<result property="rownum"       									         column="ROWNUM"/>
   		<result property="targetId"                                                  column="TARGET_ID"/>                                                                           
		<result property="targetDisId"                                               column="TARGET_DIS_ID"/>                                                                           
		<result property="disClassDtl"                                               column="DIS_CLASS_DTL"/>                                                                       
		<result property="sex"                                                       column="SEX"/>                                                                                 
		<result property="birthYm"                                                   column="BIRTH_YM"/>                                                                            
		<result property="performCnt"                                                column="PERFORM_CNT"/>
		<result property="performCntNm"           	                                 column="PERFORM_CNT_NM"/>
		<result property="protocol"                 								 column="PROTOCOL"/>                                                                         
		<result property="age"                                                       column="AGE"/>                                                                                 
		<result property="catExecDate"                                               column="CAT_EXEC_DATE"/>                                                                       
		<result property="catvMissr"                                                 column="CATV_MISSR"/>                                                                          
		<result property="catvFalarmr"                                               column="CATV_FALARMR"/>                                                                        
		<result property="catvReactrAvg"                                             column="CATV_REACTR_AVG"/>                                                                     
		<result property="catvReactrDev"                                             column="CATV_REACTR_DEV"/>                                                                     
		<result property="catvMissaq"                                                column="CATV_MISSAQ"/>                                                                         
		<result property="catvFalarmaq"                                              column="CATV_FALARMAQ"/>                                                                       
		<result property="catvReactaqAvg"                                            column="CATV_REACTAQ_AVG"/>                                                                    
		<result property="catvReactaqDev"                                            column="CATV_REACTAQ_DEV"/>                                                                    
		<result property="cathMissr"                                                 column="CATH_MISSR"/>                                                                          
		<result property="cathFalarmr"                                               column="CATH_FALARMR"/>                                                                        
		<result property="cathReactrAvg"                                             column="CATH_REACTR_AVG"/>                                                                     
		<result property="cathReactrDev"                                             column="CATH_REACTR_DEV"/>                                                                     
		<result property="cathMissaq"                                                column="CATH_MISSAQ"/>                                                                         
		<result property="cathFalarmaq"                                              column="CATH_FALARMAQ"/>                                                                       
		<result property="cathReactaqAvg"                                            column="CATH_REACTAQ_AVG"/>                                                                    
		<result property="cathReactaqDev"                                            column="CATH_REACTAQ_DEV"/>                                                                    
		<result property="catcMissr"                                                 column="CATC_MISSR"/>                                                                          
		<result property="catcFalarmr"                                               column="CATC_FALARMR"/>                                                                        
		<result property="catcReactrAvg"                                             column="CATC_REACTR_AVG"/>                                                                     
		<result property="catcReactrDev"                                             column="CATC_REACTR_DEV"/>                                                                     
		<result property="catcMissaq"                                                column="CATC_MISSAQ"/>                                                                         
		<result property="catcFalarmaq"                                              column="CATC_FALARMAQ"/>                                                                       
		<result property="catcReactaqAvg"                                            column="CATC_REACTAQ_AVG"/>                                                                    
		<result property="catcReactaqDev"                                            column="CATC_REACTAQ_DEV"/>                                                                    
		<result property="catiMissr"                                                 column="CATI_MISSR"/>                                                                          
		<result property="catiFalarmr"                                               column="CATI_FALARMR"/>                                                                        
		<result property="catiReactrAvg"                                             column="CATI_REACTR_AVG"/>                                                                     
		<result property="catiReactrDev"                                             column="CATI_REACTR_DEV"/>                                                                     
		<result property="catiMissaq"                                                column="CATI_MISSAQ"/>                                                                         
		<result property="catiFalarmaq"                                              column="CATI_FALARMAQ"/>                                                                       
		<result property="catiReactaqAvg"                                            column="CATI_REACTAQ_AVG"/>                                                                    
		<result property="catiReactaqDev"                                            column="CATI_REACTAQ_DEV"/>                                                                    
		<result property="catdMissr"                                                 column="CATD_MISSR"/>                                                                          
		<result property="catdFalarmr"                                               column="CATD_FALARMR"/>                                                                        
		<result property="catdReactrAvg"                                             column="CATD_REACTR_AVG"/>                                                                     
		<result property="catdReactrDev"                                             column="CATD_REACTR_DEV"/>                                                                     
		<result property="catdMissaq"                                                column="CATD_MISSAQ"/>                                                                         
		<result property="catdFalarmaq"                                              column="CATD_FALARMAQ"/>                                                                       
		<result property="catdReactaqAvg"                                            column="CATD_REACTAQ_AVG"/>                                                                    
		<result property="catdReactaqDev"                                            column="CATD_REACTAQ_DEV"/>                                                                    
		<result property="catmdReactr"                                               column="CATMD_REACTR"/>                                                                        
		<result property="catmrReactr"                                               column="CATMR_REACTR"/>                                                                        
		<result property="catmdSpacer"                                               column="CATMD_SPACER"/>                                                                        
		<result property="catmrSpacer"                                               column="CATMR_SPACER"/>                                                                        
		<result property="catmdReactaq"                                              column="CATMD_REACTAQ"/>                                                                       
		<result property="catmrReactaq"                                              column="CATMR_REACTAQ"/>                                                                       
		<result property="catmdSpaceaq"                                              column="CATMD_SPACEAQ"/>                                                                       
		<result property="catmrSpaceaq"                                              column="CATMR_SPACEAQ"/>                                                                       
		<result property="remarks"                                                   column="REMARKS"/>                                                                             
   	</resultMap>
   	<resultMap id="neuropsyExitiiList" type="NeuropsyExitiiVO">
   		<result property="rownum"           				     column="ROWNUM"/>
   		<result property="targetId"                              column="TARGET_ID"/>                                             
   		<result property="targetDisId"                           column="TARGET_DIS_ID"/>                                             
		<result property="disClassDtl"                           column="DIS_CLASS_DTL"/>                                         
		<result property="sex"                                   column="SEX"/>                                                   
		<result property="birthYm"                               column="BIRTH_YM"/>        
		<result property="protocol"                 			 column="PROTOCOL"/>                                      
		<result property="performCnt"                            column="PERFORM_CNT"/>      
		<result property="performCntNm"                       	 column="PERFORM_CNT_NM"/>                                     
		<result property="age"                                   column="AGE"/>                                                   
		<result property="exitiiExecDate"                        column="EXITII_EXEC_DATE"/>                                      
		<result property="exitiiStroopStos"                      column="EXITII_STROOP_STOS"/>                                    
		<result property="exitiiStroopStt"                       column="EXITII_STROOP_STT"/>                                     
		<result property="exitiiStroopSeos"                      column="EXITII_STROOP_SEOS"/>                                    
		<result property="exitiiStroopSet"                       column="EXITII_STROOP_SET"/>                                     
		<result property="exitiiStroopItos"                      column="EXITII_STROOP_ITOS"/>                                    
		<result property="exitiiStroopItt"                       column="EXITII_STROOP_ITT"/>                                     
		<result property="exitiiStroopIeos"                      column="EXITII_STROOP_IEOS"/>                                    
		<result property="exitiiStroopIet"                       column="EXITII_STROOP_IET"/>                                     
		<result property="exitiiWordfqRaos"                      column="EXITII_WORDFQ_RAOS"/>                                    
		<result property="exitiiWordfqRat"                       column="EXITII_WORDFQ_RAT"/>                                     
		<result property="exitiiWordfqBaos"                      column="EXITII_WORDFQ_BAOS"/>                                    
		<result property="exitiiWordfqBat"                       column="EXITII_WORDFQ_BAT"/>                                     
		<result property="exitiiWordfqLaos"                      column="EXITII_WORDFQ_LAOS"/>                                    
		<result property="exitiiWordfqLat"                       column="EXITII_WORDFQ_LAT"/>                                     
		<result property="exitiiDesignRaos"                      column="EXITII_DESIGN_RAOS"/>                                    
		<result property="exitiiDesignRat"                       column="EXITII_DESIGN_RAT"/>                                     
		<result property="exitiiDesignLaos"                      column="EXITII_DESIGN_LAOS"/>                                    
		<result property="exitiiDesignLat"                       column="EXITII_DESIGN_LAT"/>                                     
		<result property="exitiiAvltDmos"                        column="EXITII_AVLT_DMOS"/>                                      
		<result property="exitiiAvltDmt"                         column="EXITII_AVLT_DMT"/>                                       
		<result property="exitiiAvltDjos"                        column="EXITII_AVLT_DJOS"/>                                      
		<result property="exitiiAvltDjt"                         column="EXITII_AVLT_DJT"/>                                       
		<result property="exitiiCftPos"                          column="EXITII_CFT_POS"/>                                        
		<result property="exitiiCftPt"                           column="EXITII_CFT_PT"/>                                         
		<result property="exitiiCftDos"                          column="EXITII_CFT_DOS"/>                                        
		<result property="exitiiCftDt"                           column="EXITII_CFT_DT"/>                                         
		<result property="exitiiEfqEss"                          column="EXITII_EFQ_ESS"/>                                        
		<result property="exitiiEfqNis"                          column="EXITII_EFQ_NIS"/>                                        
		<result property="exitiiEfqPercentile"                   column="EXITII_EFQ_PERCENTILE"/>                                 
		<result property="exitiiEfqEval"                         column="EXITII_EFQ_EVAL"/>                                       
		<result property="remarks"                               column="REMARKS"/>                                               
   	</resultMap>
   	
   	<resultMap id="neuropsyCptList" type="NeuropsyCptVO">
   		<result property="rownum"                                  column="ROWNUM"/>
   		<result property="targetId"                                column="TARGET_ID"/>    
   		<result property="targetDisId"                             column="TARGET_DIS_ID"/>    
		<result property="disClassDtl"                             column="DIS_CLASS_DTL"/>              
		<result property="sex"                                     column="SEX"/>                
		<result property="protocol"                 			   column="PROTOCOL"/>        
		<result property="birthYm"                                 column="BIRTH_YM"/>                   
		<result property="performCnt"                              column="PERFORM_CNT"/>  
		<result property="performCntNm"           	               column="PERFORM_CNT_NM"/>              
		<result property="age"                                     column="AGE"/>                        
		<result property="cpt3ExecDate"                            column="CPT3_EXEC_DATE"/>             
		<result property="detectT"                                 column="DETECT_T"/>                   
		<result property="detectGl"                                column="DETECT_GL"/>                  
		<result property="omissionT"                               column="OMISSION_T"/>                 
		<result property="omissionGl"                              column="OMISSION_GL"/>                
		<result property="comissionT"                              column="COMISSION_T"/>                
		<result property="comissionGl"                             column="COMISSION_GL"/>               
		<result property="preservT"                                column="PRESERV_T"/>                  
		<result property="preservGl"                               column="PRESERV_GL"/>                 
		<result property="hrtT"                                    column="HRT_T"/>                      
		<result property="hrtGl"                                   column="HRT_GL"/>                     
		<result property="hrtSdT"                                  column="HRT_SD_T"/>
		<result property="hrtSdGl"                                 column="HRT_SD_GL"/>
		<result property="variaT"                                  column="VARIA_T"/>
		<result property="variaGl"                                 column="VARIA_GL"/>
		<result property="hrtBct"                                  column="HRT_BCT"/>
		<result property="hrtBcg"                                  column="HRT_BCG"/>
		<result property="hrtIct"                                  column="HRT_ICT"/>
		<result property="hrtIcg"                                  column="HRT_ICG"/>
		<result property="responStyle"                             column="RESPON_STYLE"/>
		<result property="remarks"                                 column="REMARKS"/>
   	</resultMap>
   	
   	
	<resultMap id="neuropsyTmtList" type="NeuropsyTmtVO">
		<result property="rownum"                     column="ROWNUM"/>
		<result property="targetId"                   column="TARGET_ID"/>  
		<result property="targetDisId"            column="TARGET_DIS_ID" />               
		<result property="disClassDtl"                column="DIS_CLASS_DTL"/>      
		<result property="sex"                        column="SEX"/>                
		<result property="birthYm"                    column="BIRTH_YM"/>      
		<result property="protocol"                   column="PROTOCOL"/>    
		<result property="performCnt"                 column="PERFORM_CNT"/>     
		<result property="performCntNm"           	  column="PERFORM_CNT_NM"/>   
		<result property="age"                        column="AGE"/>                
		<result property="tmtExecDate"                column="TMT_EXEC_DATE"/>      
		<result property="tmtArt"                     column="TMT_ART"/>            
		<result property="tmtAError"                  column="TMT_A_ERROR"/>        
		<result property="tmtBrt"                     column="TMT_BRT"/>            
		<result property="tmtBError"                  column="TMT_B_ERROR"/>        
		<result property="remarks"                    column="REMARKS"/>
	</resultMap>  
	
	<resultMap id="neuropsyTotalList" type="NeuropsyTotalVO">
		<result property="targetId"               column="TARGET_ID" />  
		<result property="targetDisId"            column="TARGET_DIS_ID" />                    
		<result property="rndId"                  column="RND_ID" />                       
		<result property="disClassDtl"            column="DIS_CLASS_DTL" />                
		<result property="sex"                    column="SEX" />                          
		<result property="birthYm"                column="BIRTH_YM" />                     
		<result property="protocol"               column="PROTOCOL" />                     
		<result property="performCnt"             column="PERFORM_CNT" />      
		<result property="performCntNm"           column="PERFORM_CNT_NM"/>            
		<result property="age"                    column="AGE" />                          
		<result property="execDate"               column="EXEC_DATE" />                    
		<result property="s1"                     column="S1" />                           
		<result property="ata"                    column="ATA" />                          
		<result property="stroop"                 column="STROOP" />                       
		<result property="cctt"                   column="CCTT" />                         
		<result property="wsct"                   column="WSCT" />                         
		<result property="cat"                    column="CAT" />                          
		<result property="exitii"                 column="EXIT_II" />                       
		<result property="cpt3"                   column="CPT_3" />                         
		<result property="tmt"                    column="TMT" />      
		<result property="ados1"                  column="ADOS1" />      
		<result property="ados2"                  column="ADOS2" />      
	<!-- <result property="ados3"                  column="ADOS3" /> -->	     
		<result property="pep"                    column="PEP" />      
		<result property="sms"                    column="SMS" />      
		<result property="cars"                   column="CARS" />   
	</resultMap>   
	
	<resultMap id="neuropsyPepList" type="NeuropsyPepVO">
		<result property="rownum"                     column="ROWNUM"/>
		<result property="targetId"                   column="TARGET_ID"/>  
		<result property="targetDisId"            	  column="TARGET_DIS_ID" />               
		<result property="disClassDtl"                column="DIS_CLASS_DTL"/>      
		<result property="sex"                        column="SEX"/>                
		<result property="birthYm"                    column="BIRTH_YM"/>      
		<result property="protocol"                   column="PROTOCOL"/>    
		<result property="performCnt"                 column="PERFORM_CNT"/>     
		<result property="performCntNm"           	  column="PERFORM_CNT_NM"/>   
		<result property="age"                        column="AGE"/>                
		<result property="pepExecDate"                column="PEP_EXEC_DATE"/>  
		<result property="behavRelN"                  column="BEHAV_REL_N"/>
		<result property="behavRelM"                  column="BEHAV_REL_M"/>
		<result property="behavRelS"                  column="BEHAV_REL_S"/>
		<result property="behavMateN"                 column="BEHAV_MATE_N"/>
		<result property="behavMateM"                 column="BEHAV_MATE_M"/>
		<result property="behavMateS"                 column="BEHAV_MATE_S"/>
		<result property="behavSenseN"                column="BEHAV_SENSE_N"/>
		<result property="behavSenseM"                column="BEHAV_SENSE_M"/>
		<result property="behavSenseS"                column="BEHAV_SENSE_S"/>
		<result property="behavLanN"                  column="BEHAV_LAN_N"/>
		<result property="behavLanM"                  column="BEHAV_LAN_M"/>
		<result property="behavLanS"                  column="BEHAV_LAN_S"/>
		<result property="devCopyP"                   column="DEV_COPY_P"/>
		<result property="devCopyB"					  column="DEV_COPY_B"/>
		<result property="devCopyF"                	  column="DEV_COPY_F"/>
		<result property="devPerceptP"                column="DEV_PERCEPT_P"/>
		<result property="devPerceptB"                column="DEV_PERCEPT_B"/>
		<result property="devPerceptF"                column="DEV_PERCEPT_F"/>
		<result property="devMusclesP"                column="DEV_MUSCLES_P"/>
		<result property="devMusclesB"                column="DEV_MUSCLES_B"/>
		<result property="devMusclesF"                column="DEV_MUSCLES_F"/>
		<result property="devMusclebP"                column="DEV_MUSCLEB_P"/>
		<result property="devMusclebB"                column="DEV_MUSCLEB_B"/>
		<result property="devMusclebF"                column="DEV_MUSCLEB_F"/>
		<result property="devEyehandP"                column="DEV_EYEHAND_P"/>
		<result property="devEyehandB"                column="DEV_EYEHAND_B"/>
		<result property="devEyehandF"                column="DEV_EYEHAND_F"/>
		<result property="devActP"                	  column="DEV_ACT_P"/>
		<result property="devActB"                	  column="DEV_ACT_B"/>
		<result property="devActF"                	  column="DEV_ACT_F"/>
		<result property="devLanP"                	  column="DEV_LAN_P"/>
		<result property="devLanB"                	  column="DEV_LAN_B"/>
		<result property="devLanF"                	  column="DEV_LAN_F"/>
		<result property="devScore"                	  column="DEV_SCORE"/>
		
		<result property="pepCa"                 	  column="PEP_CA"/>
		<result property="pepDa"                 	  column="PEP_DA"/>
		<result property="pepDq"                 	  column="PEP_DQ"/>
		<result property="remarks"                    column="REMARKS"/>
	</resultMap>         
	
	<resultMap id="neuropsyAdos1List" type="NeuropsyAdos1VO">
		<result property="rownum"                     column="ROWNUM"/>
		<result property="targetId"                   column="TARGET_ID"/>  
		<result property="targetDisId"            	  column="TARGET_DIS_ID" />               
		<result property="disClassDtl"                column="DIS_CLASS_DTL"/>      
		<result property="sex"                        column="SEX"/>                
		<result property="birthYm"                    column="BIRTH_YM"/>      
		<result property="protocol"                   column="PROTOCOL"/>    
		<result property="performCnt"                 column="PERFORM_CNT"/>     
		<result property="performCntNm"           	  column="PERFORM_CNT_NM"/>   
		<result property="age"                        column="AGE"/>                
		<result property="ados1ExecDate"              column="ADOS1_EXEC_DATE"/>   
		
		<result property="ados1Module"                column="ADOS1_MODULE"/>
		<result property="ados1Play"                  column="ADOS1_PLAY"/>
		   
		<result property="ados1Commu"                 column="ADOS1_COMMU"/>      
		<result property="socialInteraction"          column="SOCIAL_INTERACTION"/>      
		<result property="lanSocialInter"             column="LAN_SOCIAL_INTER"/>      
		<result property="a1StereoInterest"           column="A1_STEREO_INTEREST"/>      
		<result property="ados1Total"                 column="ADOS1_TOTAL"/>     
		<result property="remarks"                    column="REMARKS"/>
	</resultMap> 
	
	<resultMap id="neuropsyAdos2List" type="NeuropsyAdos2VO">
		<result property="rownum"                     column="ROWNUM"/>
		<result property="targetId"                   column="TARGET_ID"/>  
		<result property="targetDisId"            	  column="TARGET_DIS_ID" />               
		<result property="disClassDtl"                column="DIS_CLASS_DTL"/>      
		<result property="sex"                        column="SEX"/>                
		<result property="birthYm"                    column="BIRTH_YM"/>      
		<result property="protocol"                   column="PROTOCOL"/>    
		<result property="performCnt"                 column="PERFORM_CNT"/>     
		<result property="performCntNm"           	  column="PERFORM_CNT_NM"/>   
		<result property="age"                        column="AGE"/>                
		<result property="ados2ExecDate"              column="ADOS2_EXEC_DATE"/>      
		
		<result property="ados2Module"             column="ADOS2_MODULE"/>      
		<result property="ados2Line"          	  column="ADOS2_LINE"/>      	
		
		<result property="ados2Commu"             column="ADOS2_COMMU"/>      
		<result property="givtakeSocialInter"          	  column="GIVTAKE_SOCIAL_INTER"/>      	
		
		<result property="socialAffTotal"             column="SOCIAL_AFF_TOTAL"/>      
		<result property="restRepetTotal"          	  column="REST_REPET_TOTAL"/>      	      
		<result property="ados2Total"                 column="ADOS2_TOTAL"/>     
	
		<result property="ados2Diagnosis"            column="ADOS2_DIAGNOSIS"/>      
		<result property="ados2SymptomLev"          column="ADOS2_SYMPTOM_LEV"/>      	
		<result property="compareScore"             column="COMPARE_SCORE"/>            	
		
		
		<result property="remarks"                    column="REMARKS"/>
	</resultMap> 
	<!--  
	<resultMap id="neuropsyAdos3List" type="NeuropsyAdos3VO">
		<result property="rownum"                     column="ROWNUM"/>
		<result property="targetId"                   column="TARGET_ID"/>  
		<result property="targetDisId"            	  column="TARGET_DIS_ID" />               
		<result property="disClassDtl"                column="DIS_CLASS_DTL"/>      
		<result property="sex"                        column="SEX"/>                
		<result property="birthYm"                    column="BIRTH_YM"/>      
		<result property="protocol"                   column="PROTOCOL"/>    
		<result property="performCnt"                 column="PERFORM_CNT"/>     
		<result property="performCntNm"           	  column="PERFORM_CNT_NM"/>   
		<result property="age"                        column="AGE"/>                
		<result property="ados3ExecDate"              column="ADOS3_EXEC_DATE"/>      
		<result property="communication"              column="COMMUNICATION"/>      
		<result property="recSocialInter"          	  column="REC_SOCIAL_INTER"/>      
		<result property="commuSocialInter"           column="COMMU_SOCIAL_INTER"/>      
		<result property="a3StereoInterest"           column="A3_STEREO_INTEREST"/>      
		<result property="ados3Total"                 column="ADOS3_TOTAL"/>     
		<result property="remarks"                    column="REMARKS"/>
	</resultMap> 
	 -->
	<resultMap id="neuropsySmsList" type="NeuropsySmsVO">
		<result property="rownum"                     column="ROWNUM"/>
		<result property="targetId"                   column="TARGET_ID"/>  
		<result property="targetDisId"            	  column="TARGET_DIS_ID" />               
		<result property="disClassDtl"                column="DIS_CLASS_DTL"/>      
		<result property="sex"                        column="SEX"/>                
		<result property="birthYm"                    column="BIRTH_YM"/>      
		<result property="protocol"                   column="PROTOCOL"/>    
		<result property="performCnt"                 column="PERFORM_CNT"/>     
		<result property="performCntNm"           	  column="PERFORM_CNT_NM"/>   
		<result property="age"                        column="AGE"/>                
		<result property="smsExecDate"                column="SMS_EXEC_DATE"/>      
		<result property="smsSa"              		  column="SMS_SA"/>      
		<result property="smsSq"          	  		  column="SMS_SQ"/>  
		<result property="subMovecap"	           	  column="SUB_MOVECAP"/>
		<result property="subCommucap"          	  column="SUB_COMMUCAP"/>
		<result property="subSocialcap"         	  column="SUB_SOCIALCAP"/>
		<result property="subWorkcap"           	  column="SUB_WORKCAP"/>
		<result property="subSelfmanagecap"     	  column="SUB_SELFMANAGECAP"/>
		<result property="subBasicapGeneral"    	  column="SUB_BASICAP_GENERAL"/>
		<result property="subBasicapDressing"   	  column="SUB_BASICAP_DRESSING"/>
		<result property="subBasicapEating"     	  column="SUB_BASICAP_EATING"/>  
		<result property="remarks"                    column="REMARKS"/>
	</resultMap> 
	
	<resultMap id="neuropsyCarsList" type="NeuropsyCarsVO">
		<result property="rownum"                     column="ROWNUM"/>
		<result property="targetId"                   column="TARGET_ID"/>  
		<result property="targetDisId"            	  column="TARGET_DIS_ID" />               
		<result property="disClassDtl"                column="DIS_CLASS_DTL"/>      
		<result property="sex"                        column="SEX"/>                
		<result property="birthYm"                    column="BIRTH_YM"/>      
		<result property="protocol"                   column="PROTOCOL"/>    
		<result property="performCnt"                 column="PERFORM_CNT"/>     
		<result property="performCntNm"           	  column="PERFORM_CNT_NM"/>   
		<result property="age"                        column="AGE"/>                
		<result property="carsExecDate"               column="CARS_EXEC_DATE"/>
		
		<result property="subPsRelation"      column="SUB_PS_RELATION"/>
		<result property="subImitation"       column="SUB_IMITATION"/>   
		<result property="subEmoRact"         column="SUB_EMO_RACT"/>     
		<result property="subBodyuse"         column="SUB_BODYUSE"/>      
		<result property="subObjuse"          column="SUB_OBJUSE"/>       
		<result property="subChgAdapt"        column="SUB_CHG_ADAPT"/>    
		<result property="subVisualRact"      column="SUB_VISUAL_RACT"/>  
		<result property="subAuditoryRact"    column="SUB_AUDITORY_RACT"/>
		<result property="subEtcRactUse"      column="SUB_ETC_RACT_USE"/> 
		<result property="subFearNervous"     column="SUB_FEAR_NERVOUS"/> 
		<result property="subVerbCommu"       column="SUB_VERBCOMMU"/>    
		<result property="subNonverbCommu"    column="SUB_NONVERB_COMMU"/>
		<result property="subActlev"          column="SUB_ACTLEV"/>       
		<result property="subIntellevCstc"    column="SUB_INTELLEV_CSTC"/>
		<result property="subGeneralEft"      column="SUB_GENERAL_EFT"/>   
		      
		<result property="carsTotal"              	  column="CARS_TOTAL"/>      
		<result property="remarks"                    column="REMARKS"/>
	</resultMap> 
	
	<select id="selectNeuropsyMenuList" parameterType="map" resultMap="neuropsyMenuList">
		<!-- Header menu부분들 -->
		SELECT
			DOC_ID,
			DOC_NM,
			DIS_CLASS_DTL,
			DOC_CLASS_DTL,
			DOC_HEADER
		FROM BDSP.T_DOC_MST
		WHERE 1=1
			AND DIS_CLASS_DTL = #{disClassDtl}
			<if test="docClassDtl !=null and docClassDtl != '' ">
		 		AND DOC_CLASS_DTL = #{docClassDtl}
		 	</if>
		ORDER BY SORT_NO	
	</select>
	
	
	<select id="selectPerformCntByNm" parameterType="map" resultType="String">
	
		SELECT PERFORM_CNT
		FROM T_PERFORM_TERM
		WHERE PERFORM_NM = #{performCntNm}

	</select>
	
	<select id="selectNeuropsyS1RowList" parameterType="map" resultMap="neuropsyS1List">
		SELECT B.* FROM (
			SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						S1.TARGET_ID,
						PT.PERFORM_NM PERFORM_CNT_NM
					FROM T_NEUROPSY_S1 S1 
					LEFT JOIN T_TARGET_MST TM
					ON S1.TARGET_ID = TM.TARGET_ID
					AND S1.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON S1.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
				    LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
                    ON TM.RND_ID = PM.RND_ID
                    AND TM.TARGET_ID = PM.TARGET_ID
                    AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
                    AND S1.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
				        AND TM.RND_ID = ${rndId}
				        AND PM.STATUS != '0004'
				        AND NOT PM.PERFORM_CNT = 2
                    	AND NOT PM.PERFORM_CNT = 3
                    	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
					ORDER BY S1.TARGET_ID, S1.PERFORM_CNT
				) A 
		) B
		WHERE
				TARGET_ID = #{targetId}
		ORDER BY ROWNUM	
		LIMIT 0,1

	</select>
	
	<select id="selectNeuropsyS1List" parameterType="map" resultMap="neuropsyS1List">
		SELECT B.*
			FROM
				(SELECT
					A.*,
					CONCAT(
						TIC_SUBTYPE,
						FSIQ
						,KEDIWAIS_VOCA_OS
						,KEDIWAIS_ARITH_OS
						,KEDIWAIS_ORDER_OS
						,KEDIWAIS_PIECE_OS
						,KEDIWAIS_VOCA_ES
						,KEDIWAIS_ARITH_ES
						,KEDIWAIS_ORDER_ES
						,KEDIWAIS_PIECE_ES
						,KWISCIV_COS
						,KWISCIV_VOS
						,KWISCIV_UOS
						,KWISCIV_POS
						,KWISCIV_CPOS
						,KWISCIV_MOS
						,KWISCIV_NOS
						,KWISCIV_SCOS
						,KWISCIV_SOS
						,KWISCIV_STOS
						,KWISCIV_CES
						,KWISCIV_VES
						,KWISCIV_UES
						,KWISCIV_PES
						,KWISCIV_CPES
						,KWISCIV_MES
						,KWISCIV_NES
						,KWISCIV_SCES
						,KWISCIV_SES
						,KWISCIV_STES
						,KWISCIV_SIOS
						,KWISCIV_VCOS
						,KWISCIV_INOS
						,KWISCIV_BDOS
						,KWISCIV_MROS
						,KWISCIV_VPOS
						,KWISCIV_DSOS
						,KWISCIV_AROS
						,KWISCIV_SSOS
						,KWISCIV_CDOS
						,KWISCIV_SIES
						,KWISCIV_VCES
						,KWISCIV_INES
						,KWISCIV_BDES
						,KWISCIV_MRES
						,KWISCIV_VPES
						,KWISCIV_DSES
						,KWISCIV_ARES
						,KWISCIV_SSES
						,KWISCIV_CDES
						,KSADS_BLUES
						,KSADS_ANGER
						,KSADS_LOSSM
						,KSADS_DEATH
						,KSADS_SUICIDE
						,KSADS_SUI_SEVERITY
						,KSADS_SUI_CRITICALITY
						,KSADS_SELFHARM
						,KSADS_UPLIFT
						,KSADS_DEC_SLEEP
						,KSADS_GOAL_ACTIVITY
						,KSADS_GALLOP
						,KSADS_HALLUCINATION
						,KSADS_DELUSION
						,KSADS_PANIC
						,KSADS_SEPARATION_FEAR
						,KSADS_ATTACH_FEAR
						,KSADS_REJECT_SCHOOL
						,KSADS_SLEEP_FEAR
						,KSADS_ALONE_FEAR
						,KSADS_ATROPHY
						,KSADS_SITUATION_FEAR
						,KSADS_PAIN
						,KSADS_AVOID
						,KSADS_FUTURE_WORRY
						,KSADS_BODY_COMPLAIN
						,KSADS_SELF_CONSCIOUS
						,KSADS_TENSION
						,KSADS_COMPLUSIVE_ACT
						,KSADS_COMPLUSIVE_THINK
						,KSADS_PEE_NIGHT
						,KSADS_PEE_DAY
						,KSADS_PEE_TOTAL
						,KSADS_SHIT_NIGHT
						,KSADS_SHIT_DAY
						,KSADS_SHIT_TOTAL
						,KSADS_FAT_FEAR
						,KSADS_LOW_WEIGHT
						,KSADS_WEIGHT_LOSS
						,KSADS_VORACITY
						,KSADS_ADHD_CF
						,KSADS_ADHD_ED
						,KSADS_ADHD_SF
						,KSADS_ADHD_IMPULSIVITY
						,KSADS_ODD_ANGRY
						,KSADS_ODD_AA
						,KSADS_ODD_NOTRULES
						,KSADS_CD_LIE
						,KSADS_CD_TRUANCY
						,KSADS_CD_FIGHT
						,KSADS_CD_TORMENT
						,KSADS_CD_THIEVERY
						,KSADS_EXERCISE_TIC
						,KSADS_EXERCISE_VOICE
						,GAS
						,ADHDRQ1_MISTAKE
						,ADHDRQ2_NOTLISTEN
						,ADHDRQ3_FOLLOW_DIFF
						,ADHDRQ4_ARRANGE_DIFF
						,ADHDRQ5_ASSIGN_AVOID
						,ADHDRQ6_LOST_ITEM
						,ADHDRQ7_FORGETFULNESS
						,ADHDRQ8_UNREST
						,ADHDRQ9_OVERRUN
						,ADHDRQ10_ENDLESS_ACT
						,ADHDRQ11_SILENT_DIFF
						,ADHDRQ12_SUDDEN_ANS
						,ADHDRQ13_WAIT_DIFF
						,ADHDRQ14_INTERRUPT
						,ADHDRQ15_FICKLE
						,ADHDRQ16_CHATTER
						,ADHDRQ17_DANGER_ACT
						,DIAGNOSIS
						,DIAGNOSIS_ETC
						,SACT_TIC1_CE
						,SACT_TIC1_MSP
						,SACT_TIC2_CE
						,SACT_TIC2_MSP
						,SACT_TIC3_CE
						,SACT_TIC3_MSP
						,SACT_TIC4_CE
						,SACT_TIC4_MSP
						,SACT_TIC5_CE
						,SACT_TIC5_MSP
						,SACT_TIC6_CE
						,SACT_TIC6_MSP
						,SACT_TIC7_CE
						,SACT_TIC7_MSP
						,SACT_TIC8_CE
						,SACT_TIC8_MSP
						,CACT_TIC1_CE
						,CACT_TIC1_MSP
						,CACT_TIC2_CE
						,CACT_TIC2_MSP
						,CACT_TIC3_CE
						,CACT_TIC3_MSP
						,CACT_TIC4_CE
						,CACT_TIC4_MSP
						,CACT_TIC5_CE
						,CACT_TIC5_MSP
						,SVOICE_TIC1_CE
						,SVOICE_TIC1_MSP
						,SVOICE_TIC2_CE
						,SVOICE_TIC2_MSP
						,SVOICE_TIC3_CE
						,SVOICE_TIC3_MSP
						,CVOICE_TIC1_CE
						,CVOICE_TIC1_MSP
						,CVOICE_TIC2_CE
						,CVOICE_TIC2_MSP
						,CVOICE_TIC3_CE
						,CVOICE_TIC3_MSP
						,CVOICE_TIC4_CE
						,CVOICE_TIC4_MSP
						,CVOICE_TIC5_CE
						,CVOICE_TIC5_MSP
						,CVOICE_TIC6A_CE
						,CVOICE_TIC6A_MSP
						,CVOICE_TIC6B_CE
						,CVOICE_TIC6B_MSP
						,CVOICE_TIC6C_CE
						,CVOICE_TIC6C_MSP
						,TOURETTE_7A_CE
						,TOURETTE_7A_MSP
						,TOURETTE_7B_CE
						,TOURETTE_7B_MSP
						,CHRONIC_TIC8A_CE
						,CHRONIC_TIC8A_MSP
						,CHRONIC_TIC8B_CE
						,CHRONIC_TIC8B_MSP
						,DAILY_TIC9A_CE
						,DAILY_TIC9A_MSP
						,DAILY_TIC9B_CE
						,DAILY_TIC9B_MSP) ALL_CHK
					FROM (
						SELECT
							S1.TARGET_ID,
                            TM.TARGET_DIS_ID,
							DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
							CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
							PTC.CLASS_CD_DTL_NM PROTOCOL,
							TM.BIRTH_YM,
							PT.PERFORM_NM PERFORM_CNT_NM,
							PT.PERFORM_CNT,
							FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) AGE,
							CONCAT(SUBSTR(S1_EXEC_DATE,1,4) ,'-',SUBSTR(S1_EXEC_DATE,5,2),'-',SUBSTR(S1_EXEC_DATE,7,2)) S1_EXEC_DATE,
							CASE WHEN TIC_SUBTYPE = '#' THEN '-' WHEN TIC_SUBTYPE = '' THEN 'x' ELSE TIC_SUBTYPE END TIC_SUBTYPE,
							CASE WHEN FSIQ = '#' THEN '-' WHEN FSIQ = '' THEN 'x' ELSE FSIQ END FSIQ,
							CASE WHEN KEDIWAIS_VOCA_OS = '#' THEN '-' WHEN KEDIWAIS_VOCA_OS IS NULL OR KEDIWAIS_VOCA_OS = '' THEN 'x' ELSE KEDIWAIS_VOCA_OS END KEDIWAIS_VOCA_OS,
							CASE WHEN KEDIWAIS_ARITH_OS = '#' THEN '-' WHEN KEDIWAIS_ARITH_OS IS NULL OR KEDIWAIS_ARITH_OS = '' THEN 'x' ELSE KEDIWAIS_ARITH_OS END KEDIWAIS_ARITH_OS,
							CASE WHEN KEDIWAIS_ORDER_OS = '#' THEN '-' WHEN KEDIWAIS_ORDER_OS IS NULL OR KEDIWAIS_ORDER_OS = '' THEN 'x' ELSE KEDIWAIS_ORDER_OS END KEDIWAIS_ORDER_OS,
							CASE WHEN KEDIWAIS_PIECE_OS = '#' THEN '-' WHEN KEDIWAIS_PIECE_OS IS NULL OR KEDIWAIS_PIECE_OS = '' THEN 'x' ELSE KEDIWAIS_PIECE_OS END KEDIWAIS_PIECE_OS,
							CASE WHEN KEDIWAIS_VOCA_ES = '#' THEN '-' WHEN KEDIWAIS_VOCA_ES IS NULL OR KEDIWAIS_VOCA_ES = '' THEN 'x' ELSE KEDIWAIS_VOCA_ES END KEDIWAIS_VOCA_ES,
							CASE WHEN KEDIWAIS_ARITH_ES = '#' THEN '-' WHEN KEDIWAIS_ARITH_ES IS NULL OR KEDIWAIS_ARITH_ES = '' THEN 'x' ELSE KEDIWAIS_ARITH_ES END KEDIWAIS_ARITH_ES,
							CASE WHEN KEDIWAIS_ORDER_ES = '#' THEN '-' WHEN KEDIWAIS_ORDER_ES IS NULL OR KEDIWAIS_ORDER_ES = '' THEN 'x' ELSE KEDIWAIS_ORDER_ES END KEDIWAIS_ORDER_ES,
							CASE WHEN KEDIWAIS_PIECE_ES = '#' THEN '-' WHEN KEDIWAIS_PIECE_ES IS NULL OR KEDIWAIS_PIECE_ES = '' THEN 'x' ELSE KEDIWAIS_PIECE_ES END KEDIWAIS_PIECE_ES,
							CASE WHEN KWISCIV_COS = '#' THEN '-' WHEN KWISCIV_COS IS NULL OR KWISCIV_COS = '' THEN 'x' ELSE KWISCIV_COS END KWISCIV_COS,
							CASE WHEN KWISCIV_VOS = '#' THEN '-' WHEN KWISCIV_VOS IS NULL OR KWISCIV_VOS = '' THEN 'x' ELSE KWISCIV_VOS END KWISCIV_VOS,
							CASE WHEN KWISCIV_UOS = '#' THEN '-' WHEN KWISCIV_UOS IS NULL OR KWISCIV_UOS = '' THEN 'x' ELSE KWISCIV_UOS END KWISCIV_UOS,
							CASE WHEN KWISCIV_POS = '#' THEN '-' WHEN KWISCIV_POS IS NULL OR KWISCIV_POS = '' THEN 'x' ELSE KWISCIV_POS END KWISCIV_POS,
							CASE WHEN KWISCIV_CPOS = '#' THEN '-' WHEN KWISCIV_CPOS IS NULL OR KWISCIV_CPOS = '' THEN 'x' ELSE KWISCIV_CPOS END KWISCIV_CPOS,
							CASE WHEN KWISCIV_MOS = '#' THEN '-' WHEN KWISCIV_MOS IS NULL OR KWISCIV_MOS = '' THEN 'x' ELSE KWISCIV_MOS END KWISCIV_MOS,
							CASE WHEN KWISCIV_NOS = '#' THEN '-' WHEN KWISCIV_NOS IS NULL OR KWISCIV_NOS = '' THEN 'x' ELSE KWISCIV_NOS END KWISCIV_NOS,
							CASE WHEN KWISCIV_SCOS = '#' THEN '-' WHEN KWISCIV_SCOS IS NULL OR KWISCIV_SCOS = '' THEN 'x' ELSE KWISCIV_SCOS END KWISCIV_SCOS,
							CASE WHEN KWISCIV_SOS = '#' THEN '-' WHEN KWISCIV_SOS IS NULL OR KWISCIV_SOS = '' THEN 'x' ELSE KWISCIV_SOS END KWISCIV_SOS,
							CASE WHEN KWISCIV_STOS = '#' THEN '-' WHEN KWISCIV_STOS IS NULL OR KWISCIV_STOS = '' THEN 'x' ELSE KWISCIV_STOS END KWISCIV_STOS,
							CASE WHEN KWISCIV_CES = '#' THEN '-' WHEN KWISCIV_CES IS NULL OR KWISCIV_CES = '' THEN 'x' ELSE KWISCIV_CES END KWISCIV_CES,
							CASE WHEN KWISCIV_VES = '#' THEN '-' WHEN KWISCIV_VES IS NULL OR KWISCIV_VES = '' THEN 'x' ELSE KWISCIV_VES END KWISCIV_VES,
							CASE WHEN KWISCIV_UES = '#' THEN '-' WHEN KWISCIV_UES IS NULL OR KWISCIV_UES = '' THEN 'x' ELSE KWISCIV_UES END KWISCIV_UES,
							CASE WHEN KWISCIV_PES = '#' THEN '-' WHEN KWISCIV_PES IS NULL OR KWISCIV_PES = '' THEN 'x' ELSE KWISCIV_PES END KWISCIV_PES,
							CASE WHEN KWISCIV_CPES = '#' THEN '-' WHEN KWISCIV_CPES IS NULL OR KWISCIV_CPES = '' THEN 'x' ELSE KWISCIV_CPES END KWISCIV_CPES,
							CASE WHEN KWISCIV_MES = '#' THEN '-' WHEN KWISCIV_MES IS NULL OR KWISCIV_MES = '' THEN 'x' ELSE KWISCIV_MES END KWISCIV_MES,
							CASE WHEN KWISCIV_NES = '#' THEN '-' WHEN KWISCIV_NES IS NULL OR KWISCIV_NES = '' THEN 'x' ELSE KWISCIV_NES END KWISCIV_NES,
							CASE WHEN KWISCIV_SCES = '#' THEN '-' WHEN KWISCIV_SCES IS NULL OR KWISCIV_SCES = '' THEN 'x' ELSE KWISCIV_SCES END KWISCIV_SCES,
							CASE WHEN KWISCIV_SES = '#' THEN '-' WHEN KWISCIV_SES IS NULL OR KWISCIV_SES = '' THEN 'x' ELSE KWISCIV_SES END KWISCIV_SES,
							CASE WHEN KWISCIV_STES = '#' THEN '-' WHEN KWISCIV_STES IS NULL OR KWISCIV_STES = '' THEN 'x' ELSE KWISCIV_STES END KWISCIV_STES,
							CASE WHEN KWISCIV_SIOS = '#' THEN '-' WHEN KWISCIV_SIOS IS NULL OR KWISCIV_SIOS = '' THEN 'x' ELSE KWISCIV_SIOS END KWISCIV_SIOS,
							CASE WHEN KWISCIV_VCOS = '#' THEN '-' WHEN KWISCIV_VCOS IS NULL OR KWISCIV_VCOS = '' THEN 'x' ELSE KWISCIV_VCOS END KWISCIV_VCOS,
							CASE WHEN KWISCIV_INOS = '#' THEN '-' WHEN KWISCIV_INOS IS NULL OR KWISCIV_INOS = '' THEN 'x' ELSE KWISCIV_INOS END KWISCIV_INOS,
							CASE WHEN KWISCIV_BDOS = '#' THEN '-' WHEN KWISCIV_BDOS IS NULL OR KWISCIV_BDOS = '' THEN 'x' ELSE KWISCIV_BDOS END KWISCIV_BDOS,
							CASE WHEN KWISCIV_MROS = '#' THEN '-' WHEN KWISCIV_MROS IS NULL OR KWISCIV_MROS = '' THEN 'x' ELSE KWISCIV_MROS END KWISCIV_MROS,
							CASE WHEN KWISCIV_VPOS = '#' THEN '-' WHEN KWISCIV_VPOS IS NULL OR KWISCIV_VPOS = '' THEN 'x' ELSE KWISCIV_VPOS END KWISCIV_VPOS,
							CASE WHEN KWISCIV_DSOS = '#' THEN '-' WHEN KWISCIV_DSOS IS NULL OR KWISCIV_DSOS = '' THEN 'x' ELSE KWISCIV_DSOS END KWISCIV_DSOS,
							CASE WHEN KWISCIV_AROS = '#' THEN '-' WHEN KWISCIV_AROS IS NULL OR KWISCIV_AROS = '' THEN 'x' ELSE KWISCIV_AROS END KWISCIV_AROS,
							CASE WHEN KWISCIV_SSOS = '#' THEN '-' WHEN KWISCIV_SSOS IS NULL OR KWISCIV_SSOS = '' THEN 'x' ELSE KWISCIV_SSOS END KWISCIV_SSOS,
							CASE WHEN KWISCIV_CDOS = '#' THEN '-' WHEN KWISCIV_CDOS IS NULL OR KWISCIV_CDOS = '' THEN 'x' ELSE KWISCIV_CDOS END KWISCIV_CDOS,
							CASE WHEN KWISCIV_SIES = '#' THEN '-' WHEN KWISCIV_SIES IS NULL OR KWISCIV_SIES = '' THEN 'x' ELSE KWISCIV_SIES END KWISCIV_SIES,
							CASE WHEN KWISCIV_VCES = '#' THEN '-' WHEN KWISCIV_VCES IS NULL OR KWISCIV_VCES = '' THEN 'x' ELSE KWISCIV_VCES END KWISCIV_VCES,
							CASE WHEN KWISCIV_INES = '#' THEN '-' WHEN KWISCIV_INES IS NULL OR KWISCIV_INES = '' THEN 'x' ELSE KWISCIV_INES END KWISCIV_INES,
							CASE WHEN KWISCIV_BDES = '#' THEN '-' WHEN KWISCIV_BDES IS NULL OR KWISCIV_BDES = '' THEN 'x' ELSE KWISCIV_BDES END KWISCIV_BDES,
							CASE WHEN KWISCIV_MRES = '#' THEN '-' WHEN KWISCIV_MRES IS NULL OR KWISCIV_MRES = '' THEN 'x' ELSE KWISCIV_MRES END KWISCIV_MRES,
							CASE WHEN KWISCIV_VPES = '#' THEN '-' WHEN KWISCIV_VPES IS NULL OR KWISCIV_VPES = '' THEN 'x' ELSE KWISCIV_VPES END KWISCIV_VPES,
							CASE WHEN KWISCIV_DSES = '#' THEN '-' WHEN KWISCIV_DSES IS NULL OR KWISCIV_DSES = '' THEN 'x' ELSE KWISCIV_DSES END KWISCIV_DSES,
							CASE WHEN KWISCIV_ARES = '#' THEN '-' WHEN KWISCIV_ARES IS NULL OR KWISCIV_ARES = '' THEN 'x' ELSE KWISCIV_ARES END KWISCIV_ARES,
							CASE WHEN KWISCIV_SSES = '#' THEN '-' WHEN KWISCIV_SSES IS NULL OR KWISCIV_SSES = '' THEN 'x' ELSE KWISCIV_SSES END KWISCIV_SSES,
							CASE WHEN KWISCIV_CDES = '#' THEN '-' WHEN KWISCIV_CDES IS NULL OR KWISCIV_CDES = '' THEN 'x' ELSE KWISCIV_CDES END KWISCIV_CDES,
							CASE WHEN KSADS_BLUES = '#' THEN '-' WHEN KSADS_BLUES IS NULL OR KSADS_BLUES = '' THEN 'x' ELSE KSADS_BLUES END KSADS_BLUES,
							CASE WHEN KSADS_ANGER = '#' THEN '-' WHEN KSADS_ANGER IS NULL OR KSADS_ANGER = '' THEN 'x' ELSE KSADS_ANGER END KSADS_ANGER,
							CASE WHEN KSADS_LOSSM = '#' THEN '-' WHEN KSADS_LOSSM IS NULL OR KSADS_LOSSM = '' THEN 'x' ELSE KSADS_LOSSM END KSADS_LOSSM,
							CASE WHEN KSADS_DEATH = '#' THEN '-' WHEN KSADS_DEATH IS NULL OR KSADS_DEATH = '' THEN 'x' ELSE KSADS_DEATH END KSADS_DEATH,
							CASE WHEN KSADS_SUICIDE = '#' THEN '-' WHEN KSADS_SUICIDE IS NULL OR KSADS_SUICIDE = '' THEN 'x' ELSE KSADS_SUICIDE END KSADS_SUICIDE,
							CASE WHEN KSADS_SUI_SEVERITY = '#' THEN '-' WHEN KSADS_SUI_SEVERITY IS NULL OR KSADS_SUI_SEVERITY = '' THEN 'x' ELSE KSADS_SUI_SEVERITY END KSADS_SUI_SEVERITY,
							CASE WHEN KSADS_SUI_CRITICALITY = '#' THEN '-' WHEN KSADS_SUI_CRITICALITY IS NULL OR KSADS_SUI_CRITICALITY = '' THEN 'x' ELSE KSADS_SUI_CRITICALITY END KSADS_SUI_CRITICALITY,
							CASE WHEN KSADS_SELFHARM = '#' THEN '-' WHEN KSADS_SELFHARM IS NULL OR KSADS_SELFHARM = '' THEN 'x' ELSE KSADS_SELFHARM END KSADS_SELFHARM,
							CASE WHEN KSADS_UPLIFT = '#' THEN '-' WHEN KSADS_UPLIFT IS NULL OR KSADS_UPLIFT = '' THEN 'x' ELSE KSADS_UPLIFT END KSADS_UPLIFT,
							CASE WHEN KSADS_DEC_SLEEP = '#' THEN '-' WHEN KSADS_DEC_SLEEP IS NULL OR KSADS_DEC_SLEEP = '' THEN 'x' ELSE KSADS_DEC_SLEEP END KSADS_DEC_SLEEP,
							CASE WHEN KSADS_GOAL_ACTIVITY = '#' THEN '-' WHEN KSADS_GOAL_ACTIVITY IS NULL OR KSADS_GOAL_ACTIVITY = '' THEN 'x' ELSE KSADS_GOAL_ACTIVITY END KSADS_GOAL_ACTIVITY,
							CASE WHEN KSADS_GALLOP = '#' THEN '-' WHEN KSADS_GALLOP IS NULL OR KSADS_GALLOP = '' THEN 'x' ELSE KSADS_GALLOP END KSADS_GALLOP,
							CASE WHEN KSADS_HALLUCINATION = '#' THEN '-' WHEN KSADS_HALLUCINATION IS NULL OR KSADS_HALLUCINATION = '' THEN 'x' ELSE KSADS_HALLUCINATION END KSADS_HALLUCINATION,
							CASE WHEN KSADS_DELUSION = '#' THEN '-' WHEN KSADS_DELUSION IS NULL OR KSADS_DELUSION = '' THEN 'x' ELSE KSADS_DELUSION END KSADS_DELUSION,
							CASE WHEN KSADS_PANIC = '#' THEN '-' WHEN KSADS_PANIC IS NULL OR KSADS_PANIC = '' THEN 'x' ELSE KSADS_PANIC END KSADS_PANIC,
							CASE WHEN KSADS_SEPARATION_FEAR = '#' THEN '-' WHEN KSADS_SEPARATION_FEAR IS NULL OR KSADS_SEPARATION_FEAR = '' THEN 'x' ELSE KSADS_SEPARATION_FEAR END KSADS_SEPARATION_FEAR,
							CASE WHEN KSADS_ATTACH_FEAR = '#' THEN '-' WHEN KSADS_ATTACH_FEAR IS NULL OR KSADS_ATTACH_FEAR = '' THEN 'x' ELSE KSADS_ATTACH_FEAR END KSADS_ATTACH_FEAR,
							CASE WHEN KSADS_REJECT_SCHOOL = '#' THEN '-' WHEN KSADS_REJECT_SCHOOL IS NULL OR KSADS_REJECT_SCHOOL = '' THEN 'x' ELSE KSADS_REJECT_SCHOOL END KSADS_REJECT_SCHOOL,
							CASE WHEN KSADS_SLEEP_FEAR = '#' THEN '-' WHEN KSADS_SLEEP_FEAR IS NULL OR KSADS_SLEEP_FEAR = '' THEN 'x' ELSE KSADS_SLEEP_FEAR END KSADS_SLEEP_FEAR,
							CASE WHEN KSADS_ALONE_FEAR = '#' THEN '-' WHEN KSADS_ALONE_FEAR IS NULL OR KSADS_ALONE_FEAR = '' THEN 'x' ELSE KSADS_ALONE_FEAR END KSADS_ALONE_FEAR,
							CASE WHEN KSADS_ATROPHY = '#' THEN '-' WHEN KSADS_ATROPHY IS NULL OR KSADS_ATROPHY = '' THEN 'x' ELSE KSADS_ATROPHY END KSADS_ATROPHY,
							CASE WHEN KSADS_SITUATION_FEAR = '#' THEN '-' WHEN KSADS_SITUATION_FEAR IS NULL OR KSADS_SITUATION_FEAR = '' THEN 'x' ELSE KSADS_SITUATION_FEAR END KSADS_SITUATION_FEAR,
							CASE WHEN KSADS_PAIN = '#' THEN '-' WHEN KSADS_PAIN IS NULL OR KSADS_PAIN = '' THEN 'x' ELSE KSADS_PAIN END KSADS_PAIN,
							CASE WHEN KSADS_AVOID = '#' THEN '-' WHEN KSADS_AVOID IS NULL OR KSADS_AVOID = '' THEN 'x' ELSE KSADS_AVOID END KSADS_AVOID,
							CASE WHEN KSADS_FUTURE_WORRY = '#' THEN '-' WHEN KSADS_FUTURE_WORRY IS NULL OR KSADS_FUTURE_WORRY = '' THEN 'x' ELSE KSADS_FUTURE_WORRY END KSADS_FUTURE_WORRY,
							CASE WHEN KSADS_BODY_COMPLAIN = '#' THEN '-' WHEN KSADS_BODY_COMPLAIN IS NULL OR KSADS_BODY_COMPLAIN = '' THEN 'x' ELSE KSADS_BODY_COMPLAIN END KSADS_BODY_COMPLAIN,
							CASE WHEN KSADS_SELF_CONSCIOUS = '#' THEN '-' WHEN KSADS_SELF_CONSCIOUS IS NULL OR KSADS_SELF_CONSCIOUS = '' THEN 'x' ELSE KSADS_SELF_CONSCIOUS END KSADS_SELF_CONSCIOUS,
							CASE WHEN KSADS_TENSION = '#' THEN '-' WHEN KSADS_TENSION IS NULL OR KSADS_TENSION = '' THEN 'x' ELSE KSADS_TENSION END KSADS_TENSION,
							CASE WHEN KSADS_COMPLUSIVE_ACT = '#' THEN '-' WHEN KSADS_COMPLUSIVE_ACT IS NULL OR KSADS_COMPLUSIVE_ACT = '' THEN 'x' ELSE KSADS_COMPLUSIVE_ACT END KSADS_COMPLUSIVE_ACT,
							CASE WHEN KSADS_COMPLUSIVE_THINK = '#' THEN '-' WHEN KSADS_COMPLUSIVE_THINK IS NULL OR KSADS_COMPLUSIVE_THINK = '' THEN 'x' ELSE KSADS_COMPLUSIVE_THINK END KSADS_COMPLUSIVE_THINK,
							CASE WHEN KSADS_PEE_NIGHT = '#' THEN '-' WHEN KSADS_PEE_NIGHT IS NULL OR KSADS_PEE_NIGHT = '' THEN 'x' ELSE KSADS_PEE_NIGHT END KSADS_PEE_NIGHT,
							CASE WHEN KSADS_PEE_DAY = '#' THEN '-' WHEN KSADS_PEE_DAY IS NULL OR KSADS_PEE_DAY = '' THEN 'x' ELSE KSADS_PEE_DAY END KSADS_PEE_DAY,
							CASE WHEN KSADS_PEE_TOTAL = '#' THEN '-' WHEN KSADS_PEE_TOTAL IS NULL OR KSADS_PEE_TOTAL = '' THEN 'x' ELSE KSADS_PEE_TOTAL END KSADS_PEE_TOTAL,
							CASE WHEN KSADS_SHIT_NIGHT = '#' THEN '-' WHEN KSADS_SHIT_NIGHT IS NULL OR KSADS_SHIT_NIGHT = '' THEN 'x' ELSE KSADS_SHIT_NIGHT END KSADS_SHIT_NIGHT,
							CASE WHEN KSADS_SHIT_DAY = '#' THEN '-' WHEN KSADS_SHIT_DAY IS NULL OR KSADS_SHIT_DAY = '' THEN 'x' ELSE KSADS_SHIT_DAY END KSADS_SHIT_DAY,
							CASE WHEN KSADS_SHIT_TOTAL = '#' THEN '-' WHEN KSADS_SHIT_TOTAL IS NULL OR KSADS_SHIT_TOTAL = '' THEN 'x' ELSE KSADS_SHIT_TOTAL END KSADS_SHIT_TOTAL,
							CASE WHEN KSADS_FAT_FEAR = '#' THEN '-' WHEN KSADS_FAT_FEAR IS NULL OR KSADS_FAT_FEAR = '' THEN 'x' ELSE KSADS_FAT_FEAR END KSADS_FAT_FEAR,
							CASE WHEN KSADS_LOW_WEIGHT = '#' THEN '-' WHEN KSADS_LOW_WEIGHT IS NULL OR KSADS_LOW_WEIGHT = '' THEN 'x' ELSE KSADS_LOW_WEIGHT END KSADS_LOW_WEIGHT,
							CASE WHEN KSADS_WEIGHT_LOSS = '#' THEN '-' WHEN KSADS_WEIGHT_LOSS IS NULL OR KSADS_WEIGHT_LOSS = '' THEN 'x' ELSE KSADS_WEIGHT_LOSS END KSADS_WEIGHT_LOSS,
							CASE WHEN KSADS_VORACITY = '#' THEN '-' WHEN KSADS_VORACITY IS NULL OR KSADS_VORACITY = '' THEN 'x' ELSE KSADS_VORACITY END KSADS_VORACITY,
							CASE WHEN KSADS_ADHD_CF = '#' THEN '-' WHEN KSADS_ADHD_CF IS NULL OR KSADS_ADHD_CF = '' THEN 'x' ELSE KSADS_ADHD_CF END KSADS_ADHD_CF,
							CASE WHEN KSADS_ADHD_ED = '#' THEN '-' WHEN KSADS_ADHD_ED IS NULL OR KSADS_ADHD_ED = '' THEN 'x' ELSE KSADS_ADHD_ED END KSADS_ADHD_ED,
							CASE WHEN KSADS_ADHD_SF = '#' THEN '-' WHEN KSADS_ADHD_SF IS NULL OR KSADS_ADHD_SF = '' THEN 'x' ELSE KSADS_ADHD_SF END KSADS_ADHD_SF,
							CASE WHEN KSADS_ADHD_IMPULSIVITY = '#' THEN '-' WHEN KSADS_ADHD_IMPULSIVITY IS NULL OR KSADS_ADHD_IMPULSIVITY = '' THEN 'x' ELSE KSADS_ADHD_IMPULSIVITY END KSADS_ADHD_IMPULSIVITY,
							CASE WHEN KSADS_ODD_ANGRY = '#' THEN '-' WHEN KSADS_ODD_ANGRY IS NULL OR KSADS_ODD_ANGRY = '' THEN 'x' ELSE KSADS_ODD_ANGRY END KSADS_ODD_ANGRY,
							CASE WHEN KSADS_ODD_AA = '#' THEN '-' WHEN KSADS_ODD_AA IS NULL OR KSADS_ODD_AA = '' THEN 'x' ELSE KSADS_ODD_AA END KSADS_ODD_AA,
							CASE WHEN KSADS_ODD_NOTRULES = '#' THEN '-' WHEN KSADS_ODD_NOTRULES IS NULL OR KSADS_ODD_NOTRULES = '' THEN 'x' ELSE KSADS_ODD_NOTRULES END KSADS_ODD_NOTRULES,
							CASE WHEN KSADS_CD_LIE = '#' THEN '-' WHEN KSADS_CD_LIE IS NULL OR KSADS_CD_LIE = '' THEN 'x' ELSE KSADS_CD_LIE END KSADS_CD_LIE,
							CASE WHEN KSADS_CD_TRUANCY = '#' THEN '-' WHEN KSADS_CD_TRUANCY IS NULL OR KSADS_CD_TRUANCY = '' THEN 'x' ELSE KSADS_CD_TRUANCY END KSADS_CD_TRUANCY,
							CASE WHEN KSADS_CD_FIGHT = '#' THEN '-' WHEN KSADS_CD_FIGHT IS NULL OR KSADS_CD_FIGHT = '' THEN 'x' ELSE KSADS_CD_FIGHT END KSADS_CD_FIGHT,
							CASE WHEN KSADS_CD_TORMENT = '#' THEN '-' WHEN KSADS_CD_TORMENT IS NULL OR KSADS_CD_TORMENT = '' THEN 'x' ELSE KSADS_CD_TORMENT END KSADS_CD_TORMENT,
							CASE WHEN KSADS_CD_THIEVERY = '#' THEN '-' WHEN KSADS_CD_THIEVERY IS NULL OR KSADS_CD_THIEVERY = '' THEN 'x' ELSE KSADS_CD_THIEVERY END KSADS_CD_THIEVERY,
							CASE WHEN KSADS_EXERCISE_TIC = '#' THEN '-' WHEN KSADS_EXERCISE_TIC IS NULL OR KSADS_EXERCISE_TIC = '' THEN 'x' ELSE KSADS_EXERCISE_TIC END KSADS_EXERCISE_TIC,
							CASE WHEN KSADS_EXERCISE_VOICE = '#' THEN '-' WHEN KSADS_EXERCISE_VOICE IS NULL OR KSADS_EXERCISE_VOICE = '' THEN 'x' ELSE KSADS_EXERCISE_VOICE END KSADS_EXERCISE_VOICE,
							CASE WHEN GAS = '#' THEN '-' WHEN GAS IS NULL OR GAS = '' THEN 'x' ELSE GAS END GAS,
							CASE WHEN ADHDRQ1_MISTAKE = '#' THEN '-' WHEN ADHDRQ1_MISTAKE IS NULL OR ADHDRQ1_MISTAKE = '' THEN 'x' ELSE ADHDRQ1_MISTAKE END ADHDRQ1_MISTAKE,
							CASE WHEN ADHDRQ2_NOTLISTEN = '#' THEN '-' WHEN ADHDRQ2_NOTLISTEN IS NULL OR ADHDRQ2_NOTLISTEN = '' THEN 'x' ELSE ADHDRQ2_NOTLISTEN END ADHDRQ2_NOTLISTEN,
							CASE WHEN ADHDRQ3_FOLLOW_DIFF = '#' THEN '-' WHEN ADHDRQ3_FOLLOW_DIFF IS NULL OR ADHDRQ3_FOLLOW_DIFF = '' THEN 'x' ELSE ADHDRQ3_FOLLOW_DIFF END ADHDRQ3_FOLLOW_DIFF,
							CASE WHEN ADHDRQ4_ARRANGE_DIFF = '#' THEN '-' WHEN ADHDRQ4_ARRANGE_DIFF IS NULL OR ADHDRQ4_ARRANGE_DIFF = '' THEN 'x' ELSE ADHDRQ4_ARRANGE_DIFF END ADHDRQ4_ARRANGE_DIFF,
							CASE WHEN ADHDRQ5_ASSIGN_AVOID = '#' THEN '-' WHEN ADHDRQ5_ASSIGN_AVOID IS NULL OR ADHDRQ5_ASSIGN_AVOID = '' THEN 'x' ELSE ADHDRQ5_ASSIGN_AVOID END ADHDRQ5_ASSIGN_AVOID,
							CASE WHEN ADHDRQ6_LOST_ITEM = '#' THEN '-' WHEN ADHDRQ6_LOST_ITEM IS NULL OR ADHDRQ6_LOST_ITEM = '' THEN 'x' ELSE ADHDRQ6_LOST_ITEM END ADHDRQ6_LOST_ITEM,
							CASE WHEN ADHDRQ7_FORGETFULNESS = '#' THEN '-' WHEN ADHDRQ7_FORGETFULNESS IS NULL OR ADHDRQ7_FORGETFULNESS = '' THEN 'x' ELSE ADHDRQ7_FORGETFULNESS END ADHDRQ7_FORGETFULNESS,
							CASE WHEN ADHDRQ8_UNREST = '#' THEN '-' WHEN ADHDRQ8_UNREST IS NULL OR ADHDRQ8_UNREST = '' THEN 'x' ELSE ADHDRQ8_UNREST END ADHDRQ8_UNREST,
							CASE WHEN ADHDRQ9_OVERRUN = '#' THEN '-' WHEN ADHDRQ9_OVERRUN IS NULL OR ADHDRQ9_OVERRUN = '' THEN 'x' ELSE ADHDRQ9_OVERRUN END ADHDRQ9_OVERRUN,
							CASE WHEN ADHDRQ10_ENDLESS_ACT = '#' THEN '-' WHEN ADHDRQ10_ENDLESS_ACT IS NULL OR ADHDRQ10_ENDLESS_ACT = '' THEN 'x' ELSE ADHDRQ10_ENDLESS_ACT END ADHDRQ10_ENDLESS_ACT,
							CASE WHEN ADHDRQ11_SILENT_DIFF = '#' THEN '-' WHEN ADHDRQ11_SILENT_DIFF IS NULL OR ADHDRQ11_SILENT_DIFF = '' THEN 'x' ELSE ADHDRQ11_SILENT_DIFF END ADHDRQ11_SILENT_DIFF,
							CASE WHEN ADHDRQ12_SUDDEN_ANS = '#' THEN '-' WHEN ADHDRQ12_SUDDEN_ANS IS NULL OR ADHDRQ12_SUDDEN_ANS = '' THEN 'x' ELSE ADHDRQ12_SUDDEN_ANS END ADHDRQ12_SUDDEN_ANS,
							CASE WHEN ADHDRQ13_WAIT_DIFF = '#' THEN '-' WHEN ADHDRQ13_WAIT_DIFF IS NULL OR ADHDRQ13_WAIT_DIFF = '' THEN 'x' ELSE ADHDRQ13_WAIT_DIFF END ADHDRQ13_WAIT_DIFF,
							CASE WHEN ADHDRQ14_INTERRUPT = '#' THEN '-' WHEN ADHDRQ14_INTERRUPT IS NULL OR ADHDRQ14_INTERRUPT = '' THEN 'x' ELSE ADHDRQ14_INTERRUPT END ADHDRQ14_INTERRUPT,
							CASE WHEN ADHDRQ15_FICKLE = '#' THEN '-' WHEN ADHDRQ15_FICKLE IS NULL OR ADHDRQ15_FICKLE = '' THEN 'x' ELSE ADHDRQ15_FICKLE END ADHDRQ15_FICKLE,
							CASE WHEN ADHDRQ16_CHATTER = '#' THEN '-' WHEN ADHDRQ16_CHATTER IS NULL OR ADHDRQ16_CHATTER = '' THEN 'x' ELSE ADHDRQ16_CHATTER END ADHDRQ16_CHATTER,
							CASE WHEN ADHDRQ17_DANGER_ACT = '#' THEN '-' WHEN ADHDRQ17_DANGER_ACT IS NULL OR ADHDRQ17_DANGER_ACT = '' THEN 'x' ELSE ADHDRQ17_DANGER_ACT END ADHDRQ17_DANGER_ACT,
							CASE WHEN DIAGNOSIS = '#' THEN '-' WHEN DIAGNOSIS IS NULL OR DIAGNOSIS = '' THEN 'x' ELSE DIAGNOSIS END DIAGNOSIS,
							CASE WHEN DIAGNOSIS_ETC = '#' THEN '-' WHEN DIAGNOSIS_ETC IS NULL OR DIAGNOSIS_ETC = '' THEN 'x' ELSE DIAGNOSIS_ETC END DIAGNOSIS_ETC,
							CASE WHEN SACT_TIC1_CE = '#' THEN '-' WHEN SACT_TIC1_CE IS NULL OR SACT_TIC1_CE = '' THEN 'x' ELSE SACT_TIC1_CE END SACT_TIC1_CE,
							CASE WHEN SACT_TIC1_MSP = '#' THEN '-' WHEN SACT_TIC1_MSP IS NULL OR SACT_TIC1_MSP = '' THEN 'x' ELSE SACT_TIC1_MSP END SACT_TIC1_MSP,
							CASE WHEN SACT_TIC2_CE = '#' THEN '-' WHEN SACT_TIC2_CE IS NULL OR SACT_TIC2_CE = '' THEN 'x' ELSE SACT_TIC2_CE END SACT_TIC2_CE,
							CASE WHEN SACT_TIC2_MSP = '#' THEN '-' WHEN SACT_TIC2_MSP IS NULL OR SACT_TIC2_MSP = '' THEN 'x' ELSE SACT_TIC2_MSP END SACT_TIC2_MSP,
							CASE WHEN SACT_TIC3_CE = '#' THEN '-' WHEN SACT_TIC3_CE IS NULL OR SACT_TIC3_CE = '' THEN 'x' ELSE SACT_TIC3_CE END SACT_TIC3_CE,
							CASE WHEN SACT_TIC3_MSP = '#' THEN '-' WHEN SACT_TIC3_MSP IS NULL OR SACT_TIC3_MSP = '' THEN 'x' ELSE SACT_TIC3_MSP END SACT_TIC3_MSP,
							CASE WHEN SACT_TIC4_CE = '#' THEN '-' WHEN SACT_TIC4_CE IS NULL OR SACT_TIC4_CE = '' THEN 'x' ELSE SACT_TIC4_CE END SACT_TIC4_CE,
							CASE WHEN SACT_TIC4_MSP = '#' THEN '-' WHEN SACT_TIC4_MSP IS NULL OR SACT_TIC4_MSP = '' THEN 'x' ELSE SACT_TIC4_MSP END SACT_TIC4_MSP,
							CASE WHEN SACT_TIC5_CE = '#' THEN '-' WHEN SACT_TIC5_CE IS NULL OR SACT_TIC5_CE = '' THEN 'x' ELSE SACT_TIC5_CE END SACT_TIC5_CE,
							CASE WHEN SACT_TIC5_MSP = '#' THEN '-' WHEN SACT_TIC5_MSP IS NULL OR SACT_TIC5_MSP = '' THEN 'x' ELSE SACT_TIC5_MSP END SACT_TIC5_MSP,
							CASE WHEN SACT_TIC6_CE = '#' THEN '-' WHEN SACT_TIC6_CE IS NULL OR SACT_TIC6_CE = '' THEN 'x' ELSE SACT_TIC6_CE END SACT_TIC6_CE,
							CASE WHEN SACT_TIC6_MSP = '#' THEN '-' WHEN SACT_TIC6_MSP IS NULL OR SACT_TIC6_MSP = '' THEN 'x' ELSE SACT_TIC6_MSP END SACT_TIC6_MSP,
							CASE WHEN SACT_TIC7_CE = '#' THEN '-' WHEN SACT_TIC7_CE IS NULL OR SACT_TIC7_CE = '' THEN 'x' ELSE SACT_TIC7_CE END SACT_TIC7_CE,
							CASE WHEN SACT_TIC7_MSP = '#' THEN '-' WHEN SACT_TIC7_MSP IS NULL OR SACT_TIC7_MSP = '' THEN 'x' ELSE SACT_TIC7_MSP END SACT_TIC7_MSP,
							CASE WHEN SACT_TIC8_CE = '#' THEN '-' WHEN SACT_TIC8_CE IS NULL OR SACT_TIC8_CE = '' THEN 'x' ELSE SACT_TIC8_CE END SACT_TIC8_CE,
							CASE WHEN SACT_TIC8_MSP = '#' THEN '-' WHEN SACT_TIC8_MSP IS NULL OR SACT_TIC8_MSP = '' THEN 'x' ELSE SACT_TIC8_MSP END SACT_TIC8_MSP,
							CASE WHEN CACT_TIC1_CE = '#' THEN '-' WHEN CACT_TIC1_CE IS NULL OR CACT_TIC1_CE = '' THEN 'x' ELSE CACT_TIC1_CE END CACT_TIC1_CE,
							CASE WHEN CACT_TIC1_MSP = '#' THEN '-' WHEN CACT_TIC1_MSP IS NULL OR CACT_TIC1_MSP = '' THEN 'x' ELSE CACT_TIC1_MSP END CACT_TIC1_MSP,
							CASE WHEN CACT_TIC2_CE = '#' THEN '-' WHEN CACT_TIC2_CE IS NULL OR CACT_TIC2_CE = '' THEN 'x' ELSE CACT_TIC2_CE END CACT_TIC2_CE,
							CASE WHEN CACT_TIC2_MSP = '#' THEN '-' WHEN CACT_TIC2_MSP IS NULL OR CACT_TIC2_MSP = '' THEN 'x' ELSE CACT_TIC2_MSP END CACT_TIC2_MSP,
							CASE WHEN CACT_TIC3_CE = '#' THEN '-' WHEN CACT_TIC3_CE IS NULL OR CACT_TIC3_CE = '' THEN 'x' ELSE CACT_TIC3_CE END CACT_TIC3_CE,
							CASE WHEN CACT_TIC3_MSP = '#' THEN '-' WHEN CACT_TIC3_MSP IS NULL OR CACT_TIC3_MSP = '' THEN 'x' ELSE CACT_TIC3_MSP END CACT_TIC3_MSP,
							CASE WHEN CACT_TIC4_CE = '#' THEN '-' WHEN CACT_TIC4_CE IS NULL OR CACT_TIC4_CE = '' THEN 'x' ELSE CACT_TIC4_CE END CACT_TIC4_CE,
							CASE WHEN CACT_TIC4_MSP = '#' THEN '-' WHEN CACT_TIC4_MSP IS NULL OR CACT_TIC4_MSP = '' THEN 'x' ELSE CACT_TIC4_MSP END CACT_TIC4_MSP,
							CASE WHEN CACT_TIC5_CE = '#' THEN '-' WHEN CACT_TIC5_CE IS NULL OR CACT_TIC5_CE = '' THEN 'x' ELSE CACT_TIC5_CE END CACT_TIC5_CE,
							CASE WHEN CACT_TIC5_MSP = '#' THEN '-' WHEN CACT_TIC5_MSP IS NULL OR CACT_TIC5_MSP = '' THEN 'x' ELSE CACT_TIC5_MSP END CACT_TIC5_MSP,
							CASE WHEN SVOICE_TIC1_CE = '#' THEN '-' WHEN SVOICE_TIC1_CE IS NULL OR SVOICE_TIC1_CE = '' THEN 'x' ELSE SVOICE_TIC1_CE END SVOICE_TIC1_CE,
							CASE WHEN SVOICE_TIC1_MSP = '#' THEN '-' WHEN SVOICE_TIC1_MSP IS NULL OR SVOICE_TIC1_MSP = '' THEN 'x' ELSE SVOICE_TIC1_MSP END SVOICE_TIC1_MSP,
							CASE WHEN SVOICE_TIC2_CE = '#' THEN '-' WHEN SVOICE_TIC2_CE IS NULL OR SVOICE_TIC2_CE = '' THEN 'x' ELSE SVOICE_TIC2_CE END SVOICE_TIC2_CE,
							CASE WHEN SVOICE_TIC2_MSP = '#' THEN '-' WHEN SVOICE_TIC2_MSP IS NULL OR SVOICE_TIC2_MSP = '' THEN 'x' ELSE SVOICE_TIC2_MSP END SVOICE_TIC2_MSP,
							CASE WHEN SVOICE_TIC3_CE = '#' THEN '-' WHEN SVOICE_TIC3_CE IS NULL OR SVOICE_TIC3_CE = '' THEN 'x' ELSE SVOICE_TIC3_CE END SVOICE_TIC3_CE,
							CASE WHEN SVOICE_TIC3_MSP = '#' THEN '-' WHEN SVOICE_TIC3_MSP IS NULL OR SVOICE_TIC3_MSP = '' THEN 'x' ELSE SVOICE_TIC3_MSP END SVOICE_TIC3_MSP,
							CASE WHEN CVOICE_TIC1_CE = '#' THEN '-' WHEN CVOICE_TIC1_CE IS NULL OR CVOICE_TIC1_CE = '' THEN 'x' ELSE CVOICE_TIC1_CE END CVOICE_TIC1_CE,
							CASE WHEN CVOICE_TIC1_MSP = '#' THEN '-' WHEN CVOICE_TIC1_MSP IS NULL OR CVOICE_TIC1_MSP = '' THEN 'x' ELSE CVOICE_TIC1_MSP END CVOICE_TIC1_MSP,
							CASE WHEN CVOICE_TIC2_CE = '#' THEN '-' WHEN CVOICE_TIC2_CE IS NULL OR CVOICE_TIC2_CE = '' THEN 'x' ELSE CVOICE_TIC2_CE END CVOICE_TIC2_CE,
							CASE WHEN CVOICE_TIC2_MSP = '#' THEN '-' WHEN CVOICE_TIC2_MSP IS NULL OR CVOICE_TIC2_MSP = '' THEN 'x' ELSE CVOICE_TIC2_MSP END CVOICE_TIC2_MSP,
							CASE WHEN CVOICE_TIC3_CE = '#' THEN '-' WHEN CVOICE_TIC3_CE IS NULL OR CVOICE_TIC3_CE = '' THEN 'x' ELSE CVOICE_TIC3_CE END CVOICE_TIC3_CE,
							CASE WHEN CVOICE_TIC3_MSP = '#' THEN '-' WHEN CVOICE_TIC3_MSP IS NULL OR CVOICE_TIC3_MSP = '' THEN 'x' ELSE CVOICE_TIC3_MSP END CVOICE_TIC3_MSP,
							CASE WHEN CVOICE_TIC4_CE = '#' THEN '-' WHEN CVOICE_TIC4_CE IS NULL OR CVOICE_TIC4_CE = '' THEN 'x' ELSE CVOICE_TIC4_CE END CVOICE_TIC4_CE,
							CASE WHEN CVOICE_TIC4_MSP = '#' THEN '-' WHEN CVOICE_TIC4_MSP IS NULL OR CVOICE_TIC4_MSP = '' THEN 'x' ELSE CVOICE_TIC4_MSP END CVOICE_TIC4_MSP,
							CASE WHEN CVOICE_TIC5_CE = '#' THEN '-' WHEN CVOICE_TIC5_CE IS NULL OR CVOICE_TIC5_CE = '' THEN 'x' ELSE CVOICE_TIC5_CE END CVOICE_TIC5_CE,
							CASE WHEN CVOICE_TIC5_MSP = '#' THEN '-' WHEN CVOICE_TIC5_MSP IS NULL OR CVOICE_TIC5_MSP = '' THEN 'x' ELSE CVOICE_TIC5_MSP END CVOICE_TIC5_MSP,
							CASE WHEN CVOICE_TIC6A_CE = '#' THEN '-' WHEN CVOICE_TIC6A_CE IS NULL OR CVOICE_TIC6A_CE = '' THEN 'x' ELSE CVOICE_TIC6A_CE END CVOICE_TIC6A_CE,
							CASE WHEN CVOICE_TIC6A_MSP = '#' THEN '-' WHEN CVOICE_TIC6A_MSP IS NULL OR CVOICE_TIC6A_MSP = '' THEN 'x' ELSE CVOICE_TIC6A_MSP END CVOICE_TIC6A_MSP,
							CASE WHEN CVOICE_TIC6B_CE = '#' THEN '-' WHEN CVOICE_TIC6B_CE IS NULL OR CVOICE_TIC6B_CE = '' THEN 'x' ELSE CVOICE_TIC6B_CE END CVOICE_TIC6B_CE,
							CASE WHEN CVOICE_TIC6B_MSP = '#' THEN '-' WHEN CVOICE_TIC6B_MSP IS NULL OR CVOICE_TIC6B_MSP = '' THEN 'x' ELSE CVOICE_TIC6B_MSP END CVOICE_TIC6B_MSP,
							CASE WHEN CVOICE_TIC6C_CE = '#' THEN '-' WHEN CVOICE_TIC6C_CE IS NULL OR CVOICE_TIC6C_CE = '' THEN 'x' ELSE CVOICE_TIC6C_CE END CVOICE_TIC6C_CE,
							CASE WHEN CVOICE_TIC6C_MSP = '#' THEN '-' WHEN CVOICE_TIC6C_MSP IS NULL OR CVOICE_TIC6C_MSP = '' THEN 'x' ELSE CVOICE_TIC6C_MSP END CVOICE_TIC6C_MSP,
							CASE WHEN TOURETTE_7A_CE = '#' THEN '-' WHEN TOURETTE_7A_CE IS NULL OR TOURETTE_7A_CE = '' THEN 'x' ELSE TOURETTE_7A_CE END TOURETTE_7A_CE,
							CASE WHEN TOURETTE_7A_MSP = '#' THEN '-' WHEN TOURETTE_7A_MSP IS NULL OR TOURETTE_7A_MSP = '' THEN 'x' ELSE TOURETTE_7A_MSP END TOURETTE_7A_MSP,
							CASE WHEN TOURETTE_7B_CE = '#' THEN '-' WHEN TOURETTE_7B_CE IS NULL OR TOURETTE_7B_CE = '' THEN 'x' ELSE TOURETTE_7B_CE END TOURETTE_7B_CE,
							CASE WHEN TOURETTE_7B_MSP = '#' THEN '-' WHEN TOURETTE_7B_MSP IS NULL OR TOURETTE_7B_MSP = '' THEN 'x' ELSE TOURETTE_7B_MSP END TOURETTE_7B_MSP,
							CASE WHEN CHRONIC_TIC8A_CE = '#' THEN '-' WHEN CHRONIC_TIC8A_CE IS NULL OR CHRONIC_TIC8A_CE = '' THEN 'x' ELSE CHRONIC_TIC8A_CE END CHRONIC_TIC8A_CE,
							CASE WHEN CHRONIC_TIC8A_MSP = '#' THEN '-' WHEN CHRONIC_TIC8A_MSP IS NULL OR CHRONIC_TIC8A_MSP = '' THEN 'x' ELSE CHRONIC_TIC8A_MSP END CHRONIC_TIC8A_MSP,
							CASE WHEN CHRONIC_TIC8B_CE = '#' THEN '-' WHEN CHRONIC_TIC8B_CE IS NULL OR CHRONIC_TIC8B_CE = '' THEN 'x' ELSE CHRONIC_TIC8B_CE END CHRONIC_TIC8B_CE,
							CASE WHEN CHRONIC_TIC8B_MSP = '#' THEN '-' WHEN CHRONIC_TIC8B_MSP IS NULL OR CHRONIC_TIC8B_MSP = '' THEN 'x' ELSE CHRONIC_TIC8B_MSP END CHRONIC_TIC8B_MSP,
							CASE WHEN DAILY_TIC9A_CE = '#' THEN '-' WHEN DAILY_TIC9A_CE IS NULL OR DAILY_TIC9A_CE = '' THEN 'x' ELSE DAILY_TIC9A_CE END DAILY_TIC9A_CE,
							CASE WHEN DAILY_TIC9A_MSP = '#' THEN '-' WHEN DAILY_TIC9A_MSP IS NULL OR DAILY_TIC9A_MSP = '' THEN 'x' ELSE DAILY_TIC9A_MSP END DAILY_TIC9A_MSP,
							CASE WHEN DAILY_TIC9B_CE = '#' THEN '-' WHEN DAILY_TIC9B_CE IS NULL OR DAILY_TIC9B_CE = '' THEN 'x' ELSE DAILY_TIC9B_CE END DAILY_TIC9B_CE,
							CASE WHEN DAILY_TIC9B_MSP = '#' THEN '-' WHEN DAILY_TIC9B_MSP IS NULL OR DAILY_TIC9B_MSP = '' THEN 'x' ELSE DAILY_TIC9B_MSP END DAILY_TIC9B_MSP,
							S1.REMARKS  
						FROM T_NEUROPSY_S1 S1 
                        JOIN T_PERFORM_TERM PT
						ON S1.PERFORM_CNT = PT.PERFORM_CNT
						LEFT JOIN T_TARGET_MST TM
						ON S1.TARGET_ID = TM.TARGET_ID
						AND S1.RND_ID = TM.RND_ID
                        LEFT JOIN T_TARGET_DIS_MST TDM
                        ON TM.TARGET_ID = TDM.TARGET_ORG_ID
                        AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					    LEFT JOIN T_CODE_DTL DISE1
				        ON DISE1.CLASS_CD = 'DISE1'
				        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
				        LEFT JOIN T_CODE_DTL PTC
				        ON PTC.CLASS_CD = 'PT001'
				        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
				        LEFT JOIN T_PERFORM_MST PM
						ON TM.RND_ID = PM.RND_ID
						AND TM.TARGET_ID = PM.TARGET_ID
						AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
						AND S1.PERFORM_CNT = PM.PERFORM_CNT
				        WHERE 1=1
				        	AND TM.RND_ID = #{rndId}
				        	AND PM.STATUS != '0004'
				        	AND NOT PM.PERFORM_CNT = 2
				            AND NOT PM.PERFORM_CNT = 3
                            AND DISE1.CLASS_CD_DTL = #{disClassDtl}
					        <if test="targetId !=null and targetId != '' ">
								AND TM.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND TM.SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND S1.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (S1.TARGET_ID, S1.PERFORM_CNT, S1.RND_ID)
									IN (${schKeyWord})
							</if>
						) A
					) B
			WHERE 1=1 
				 AND NOT B.ALL_CHK = '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
		ORDER BY B.TARGET_ID, B.PERFORM_CNT
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyS1AsdRowList" parameterType="map" resultMap="neuropsyS1List">
		SELECT B.* FROM (
			SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						S1.TARGET_ID,
						PT.PERFORM_NM PERFORM_CNT_NM
					FROM T_NEUROPSY_S1 S1 
					LEFT JOIN T_TARGET_MST TM
					ON S1.TARGET_ID = TM.TARGET_ID
					AND S1.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON S1.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
				    LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
                    ON TM.RND_ID = PM.RND_ID
                    AND TM.TARGET_ID = PM.TARGET_ID
                    AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
                    AND S1.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
				        AND TM.RND_ID = ${rndId}
				        AND PM.STATUS != '0004'
				        AND NOT PM.PERFORM_CNT = 2
                    	AND NOT PM.PERFORM_CNT = 3
                    	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
					ORDER BY S1.TARGET_ID, S1.PERFORM_CNT
				) A 
		) B
		WHERE
				TARGET_ID = #{targetId}
		ORDER BY ROWNUM	
		LIMIT 0,1

	</select>
	
	<select id="selectNeuropsyS1AsdList" parameterType="map" resultMap="neuropsyS1List">
		SELECT B.*
			FROM
				(SELECT
					A.*,
					CONCAT(
						FSIQ
                        ,KEDIWAIS_VOCA_OS
						,KEDIWAIS_ARITH_OS
						,KEDIWAIS_ORDER_OS
						,KEDIWAIS_PIECE_OS
						,KEDIWAIS_VOCA_ES
						,KEDIWAIS_ARITH_ES
						,KEDIWAIS_ORDER_ES
						,KEDIWAIS_PIECE_ES
						,KWISCIV_COS
						,KWISCIV_VOS
						,KWISCIV_UOS
						,KWISCIV_POS
						,KWISCIV_CPOS
						,KWISCIV_MOS
						,KWISCIV_NOS
						,KWISCIV_SCOS
						,KWISCIV_SOS
						,KWISCIV_STOS
						,KWISCIV_CES
						,KWISCIV_VES
						,KWISCIV_UES
						,KWISCIV_PES
						,KWISCIV_CPES
						,KWISCIV_MES
						,KWISCIV_NES
						,KWISCIV_SCES
						,KWISCIV_SES
						,KWISCIV_STES
					
						,KWISCIV_ESAD_LU
						,KWISCIV_ESAD_PR
						,KWISCIV_ESAD_WR
						,KWISCIV_ESAD_PS
						,KWISCIV_ESAD_ALLIQ
						,KWISCIV_IDXS_LU
						,KWISCIV_IDXS_PR
						,KWISCIV_IDXS_WR
						,KWISCIV_IDXS_PS
						,KWISCIV_IDXS_ALLIQ
						,KWISCIV_PERCNT_LU
						,KWISCIV_PERCNT_PR
						,KWISCIV_PERCNT_WR
						,KWISCIV_PERCNT_PS
						,KWISCIV_PERCNT_ALLIQ
						,KWISCIV_CONFITVL_LU
						,KWISCIV_CONFITVL_PR
						,KWISCIV_CONFITVL_WR
						,KWISCIV_CONFITVL_PS
						,KWISCIV_CONFITVL_ALLIQ
						,KWISCIV_QD_LU
						,KWISCIV_QD_PR
						,KWISCIV_QD_WR
						,KWISCIV_QD_PS
						,KWISCIV_QD_ALLIQ
						
						,KWISCIV_SIOS
						,KWISCIV_VCOS
						,KWISCIV_INOS
						,KWISCIV_BDOS
						,KWISCIV_MROS
						,KWISCIV_VPOS
						,KWISCIV_DSOS
						,KWISCIV_AROS
						,KWISCIV_SSOS
						,KWISCIV_CDOS
						,KWISCIV_SIES
						,KWISCIV_VCES
						,KWISCIV_INES
						,KWISCIV_BDES
						,KWISCIV_MRES
						,KWISCIV_VPES
						,KWISCIV_DSES
						,KWISCIV_ARES
						,KWISCIV_SSES
						,KWISCIV_CDES


						,KWISCIV2_ESAD_LU
						,KWISCIV2_ESAD_PR
						,KWISCIV2_ESAD_WR
						,KWISCIV2_ESAD_PS
						,KWISCIV2_ESAD_ALLIQ
						,KWISCIV2_IDXS_LU
						,KWISCIV2_IDXS_PR
						,KWISCIV2_IDXS_WR
						,KWISCIV2_IDXS_PS
						,KWISCIV2_IDXS_ALLIQ
						,KWISCIV2_PERCNT_LU
						,KWISCIV2_PERCNT_PR
						,KWISCIV2_PERCNT_WR
						,KWISCIV2_PERCNT_PS
						,KWISCIV2_PERCNT_ALLIQ
						,KWISCIV2_CONFITVL_LU
						,KWISCIV2_CONFITVL_PR
						,KWISCIV2_CONFITVL_WR
						,KWISCIV2_CONFITVL_PS
						,KWISCIV2_CONFITVL_ALLIQ,
						
                        EXCT_ALL_INTELL,
						EXCT_SHORT_INTELL,
						EXCT_FLUID_INFER,
						EXCT_BASIC_VISUAL,
						ICID_ALL_INTELL,
						ICID_SHORT_INTELL,
						ICID_FLUID_INFER,
						ICID_BASIC_VISUAL,
						VIFS_FORE_BACK,
						VIFS_SHAPE_COMP,
						VIFS_MATCH,
						VIFS_ORDER_INFER,
						VIFS_PATT_FIND,
						VIFS_DRAW_INFER,
						VIFS_CATEGORIZ,
						VIEXC_FORE_BACK,
						VIEXC_SHAPE_COMP,
						VIEXC_MATCH,
						VIEXC_ORDER_INFER,
						VIEXC_PATT_FIND,
						VIEXC_DRAW_INFER,
						VIEXC_CATEGORIZ,
						CEXC_MEMORY_SELECT,
						CEXC_RECOG_MEMORY,
						CCOMP_MEMORY_SELECT,
						CCOMP_RECOG_MEMORY,
						SC_PAIR_ASSO,
						SC_IMMED_RECOG,
						SC_IMMED_REMEMBER,
						SC_SUSTAIN_ATT,
						SC_DELAY_RECOG,
						EXC_PAIR_ASSO,
						EXC_IMMED_RECOG,
						EXC_IMMED_REMEMBER,
						EXC_SUSTAIN_ATT,
						EXC_DELAY_RECOG,
						P_RS_COMPSC,
						P_EC_COMPSC,
						SC_ATTENTION,
						SC_ACTIV_LEVEL,
						SC_IMPULS,
						SC_ADAPTABILITY,
						SC_MOOD_CONFID,
						SC_FEEL_EMO,
						SC_SOCIABILITY,
						SC_CONTROL,
						EXC_ATTENTION,
						EXC_ACTIV_LEVEL,
						EXC_IMPULS,
						EXC_ADAPTABILITY,
						EXC_MOOD_CONFID,
						EXC_FEEL_EMO,
						EXC_SOCIABILITY,
						EXC_CONTROL) ALL_CHK
					FROM (
						SELECT
							S1.TARGET_ID,
                            TM.TARGET_DIS_ID,
							DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
							CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
							PTC.CLASS_CD_DTL_NM PROTOCOL,
							TM.BIRTH_YM,
							PT.PERFORM_NM PERFORM_CNT_NM,
							PT.PERFORM_CNT,
							FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) AGE,
							CONCAT(SUBSTR(S1_EXEC_DATE,1,4) ,'-',SUBSTR(S1_EXEC_DATE,5,2),'-',SUBSTR(S1_EXEC_DATE,7,2)) S1_EXEC_DATE,
							ENROLL_AGE,
							CASE WHEN FSIQ = '#' THEN '-' WHEN FSIQ = '' THEN 'x' ELSE FSIQ END FSIQ,
							CASE WHEN KEDIWAIS_VOCA_OS = '#' THEN '-' WHEN KEDIWAIS_VOCA_OS IS NULL OR KEDIWAIS_VOCA_OS = '' THEN 'x' ELSE KEDIWAIS_VOCA_OS END KEDIWAIS_VOCA_OS,
							CASE WHEN KEDIWAIS_ARITH_OS = '#' THEN '-' WHEN KEDIWAIS_ARITH_OS IS NULL OR KEDIWAIS_ARITH_OS = '' THEN 'x' ELSE KEDIWAIS_ARITH_OS END KEDIWAIS_ARITH_OS,
							CASE WHEN KEDIWAIS_ORDER_OS = '#' THEN '-' WHEN KEDIWAIS_ORDER_OS IS NULL OR KEDIWAIS_ORDER_OS = '' THEN 'x' ELSE KEDIWAIS_ORDER_OS END KEDIWAIS_ORDER_OS,
							CASE WHEN KEDIWAIS_PIECE_OS = '#' THEN '-' WHEN KEDIWAIS_PIECE_OS IS NULL OR KEDIWAIS_PIECE_OS = '' THEN 'x' ELSE KEDIWAIS_PIECE_OS END KEDIWAIS_PIECE_OS,
							CASE WHEN KEDIWAIS_VOCA_ES = '#' THEN '-' WHEN KEDIWAIS_VOCA_ES IS NULL OR KEDIWAIS_VOCA_ES = '' THEN 'x' ELSE KEDIWAIS_VOCA_ES END KEDIWAIS_VOCA_ES,
							CASE WHEN KEDIWAIS_ARITH_ES = '#' THEN '-' WHEN KEDIWAIS_ARITH_ES IS NULL OR KEDIWAIS_ARITH_ES = '' THEN 'x' ELSE KEDIWAIS_ARITH_ES END KEDIWAIS_ARITH_ES,
							CASE WHEN KEDIWAIS_ORDER_ES = '#' THEN '-' WHEN KEDIWAIS_ORDER_ES IS NULL OR KEDIWAIS_ORDER_ES = '' THEN 'x' ELSE KEDIWAIS_ORDER_ES END KEDIWAIS_ORDER_ES,
							CASE WHEN KEDIWAIS_PIECE_ES = '#' THEN '-' WHEN KEDIWAIS_PIECE_ES IS NULL OR KEDIWAIS_PIECE_ES = '' THEN 'x' ELSE KEDIWAIS_PIECE_ES END KEDIWAIS_PIECE_ES,
							CASE WHEN KWISCIV_COS = '#' THEN '-' WHEN KWISCIV_COS IS NULL OR KWISCIV_COS = '' THEN 'x' ELSE KWISCIV_COS END KWISCIV_COS,
							CASE WHEN KWISCIV_VOS = '#' THEN '-' WHEN KWISCIV_VOS IS NULL OR KWISCIV_VOS = '' THEN 'x' ELSE KWISCIV_VOS END KWISCIV_VOS,
							CASE WHEN KWISCIV_UOS = '#' THEN '-' WHEN KWISCIV_UOS IS NULL OR KWISCIV_UOS = '' THEN 'x' ELSE KWISCIV_UOS END KWISCIV_UOS,
							CASE WHEN KWISCIV_POS = '#' THEN '-' WHEN KWISCIV_POS IS NULL OR KWISCIV_POS = '' THEN 'x' ELSE KWISCIV_POS END KWISCIV_POS,
							CASE WHEN KWISCIV_CPOS = '#' THEN '-' WHEN KWISCIV_CPOS IS NULL OR KWISCIV_CPOS = '' THEN 'x' ELSE KWISCIV_CPOS END KWISCIV_CPOS,
							CASE WHEN KWISCIV_MOS = '#' THEN '-' WHEN KWISCIV_MOS IS NULL OR KWISCIV_MOS = '' THEN 'x' ELSE KWISCIV_MOS END KWISCIV_MOS,
							CASE WHEN KWISCIV_NOS = '#' THEN '-' WHEN KWISCIV_NOS IS NULL OR KWISCIV_NOS = '' THEN 'x' ELSE KWISCIV_NOS END KWISCIV_NOS,
							CASE WHEN KWISCIV_SCOS = '#' THEN '-' WHEN KWISCIV_SCOS IS NULL OR KWISCIV_SCOS = '' THEN 'x' ELSE KWISCIV_SCOS END KWISCIV_SCOS,
							CASE WHEN KWISCIV_SOS = '#' THEN '-' WHEN KWISCIV_SOS IS NULL OR KWISCIV_SOS = '' THEN 'x' ELSE KWISCIV_SOS END KWISCIV_SOS,
							CASE WHEN KWISCIV_STOS = '#' THEN '-' WHEN KWISCIV_STOS IS NULL OR KWISCIV_STOS = '' THEN 'x' ELSE KWISCIV_STOS END KWISCIV_STOS,
							CASE WHEN KWISCIV_CES = '#' THEN '-' WHEN KWISCIV_CES IS NULL OR KWISCIV_CES = '' THEN 'x' ELSE KWISCIV_CES END KWISCIV_CES,
							CASE WHEN KWISCIV_VES = '#' THEN '-' WHEN KWISCIV_VES IS NULL OR KWISCIV_VES = '' THEN 'x' ELSE KWISCIV_VES END KWISCIV_VES,
							CASE WHEN KWISCIV_UES = '#' THEN '-' WHEN KWISCIV_UES IS NULL OR KWISCIV_UES = '' THEN 'x' ELSE KWISCIV_UES END KWISCIV_UES,
							CASE WHEN KWISCIV_PES = '#' THEN '-' WHEN KWISCIV_PES IS NULL OR KWISCIV_PES = '' THEN 'x' ELSE KWISCIV_PES END KWISCIV_PES,
							CASE WHEN KWISCIV_CPES = '#' THEN '-' WHEN KWISCIV_CPES IS NULL OR KWISCIV_CPES = '' THEN 'x' ELSE KWISCIV_CPES END KWISCIV_CPES,
							CASE WHEN KWISCIV_MES = '#' THEN '-' WHEN KWISCIV_MES IS NULL OR KWISCIV_MES = '' THEN 'x' ELSE KWISCIV_MES END KWISCIV_MES,
							CASE WHEN KWISCIV_NES = '#' THEN '-' WHEN KWISCIV_NES IS NULL OR KWISCIV_NES = '' THEN 'x' ELSE KWISCIV_NES END KWISCIV_NES,
							CASE WHEN KWISCIV_SCES = '#' THEN '-' WHEN KWISCIV_SCES IS NULL OR KWISCIV_SCES = '' THEN 'x' ELSE KWISCIV_SCES END KWISCIV_SCES,
							CASE WHEN KWISCIV_SES = '#' THEN '-' WHEN KWISCIV_SES IS NULL OR KWISCIV_SES = '' THEN 'x' ELSE KWISCIV_SES END KWISCIV_SES,
							CASE WHEN KWISCIV_STES = '#' THEN '-' WHEN KWISCIV_STES IS NULL OR KWISCIV_STES = '' THEN 'x' ELSE KWISCIV_STES END KWISCIV_STES,
						
							CASE WHEN KWISCIV_ESAD_LU = '#' THEN '-' WHEN KWISCIV_ESAD_LU IS NULL OR KWISCIV_ESAD_LU = '' THEN 'x' ELSE KWISCIV_ESAD_LU END KWISCIV_ESAD_LU,						
							CASE WHEN KWISCIV_ESAD_PR = '#' THEN '-' WHEN KWISCIV_ESAD_PR IS NULL OR KWISCIV_ESAD_PR = '' THEN 'x' ELSE KWISCIV_ESAD_PR END KWISCIV_ESAD_PR,				
							CASE WHEN KWISCIV_ESAD_WR = '#' THEN '-' WHEN KWISCIV_ESAD_WR IS NULL OR KWISCIV_ESAD_WR = '' THEN 'x' ELSE KWISCIV_ESAD_WR END KWISCIV_ESAD_WR,				
							CASE WHEN KWISCIV_ESAD_PS = '#' THEN '-' WHEN KWISCIV_ESAD_PS IS NULL OR KWISCIV_ESAD_PS = '' THEN 'x' ELSE KWISCIV_ESAD_PS END KWISCIV_ESAD_PS,				
							CASE WHEN KWISCIV_ESAD_ALLIQ = '#' THEN '-' WHEN KWISCIV_ESAD_ALLIQ IS NULL OR KWISCIV_ESAD_ALLIQ = '' THEN 'x' ELSE KWISCIV_ESAD_ALLIQ END KWISCIV_ESAD_ALLIQ,				
							
							
							
							CASE WHEN KWISCIV_IDXS_LU = '#' THEN '-' WHEN KWISCIV_IDXS_LU IS NULL OR KWISCIV_IDXS_LU = '' THEN 'x' ELSE KWISCIV_IDXS_LU END KWISCIV_IDXS_LU,						      
							CASE WHEN KWISCIV_IDXS_PR = '#' THEN '-' WHEN KWISCIV_IDXS_PR IS NULL OR KWISCIV_IDXS_PR = '' THEN 'x' ELSE KWISCIV_IDXS_PR END KWISCIV_IDXS_PR,				          
							CASE WHEN KWISCIV_IDXS_WR = '#' THEN '-' WHEN KWISCIV_IDXS_WR IS NULL OR KWISCIV_IDXS_WR = '' THEN 'x' ELSE KWISCIV_IDXS_WR END KWISCIV_IDXS_WR,				          
							CASE WHEN KWISCIV_IDXS_PS = '#' THEN '-' WHEN KWISCIV_IDXS_PS IS NULL OR KWISCIV_IDXS_PS = '' THEN 'x' ELSE KWISCIV_IDXS_PS END KWISCIV_IDXS_PS,				          
							CASE WHEN KWISCIV_IDXS_ALLIQ = '#' THEN '-' WHEN KWISCIV_IDXS_ALLIQ IS NULL OR KWISCIV_IDXS_ALLIQ = '' THEN 'x' ELSE KWISCIV_IDXS_ALLIQ END KWISCIV_IDXS_ALLIQ,		
							
														
							CASE WHEN KWISCIV_PERCNT_LU = '#' THEN '-' WHEN KWISCIV_PERCNT_LU IS NULL OR KWISCIV_PERCNT_LU = '' THEN 'x' ELSE KWISCIV_PERCNT_LU END KWISCIV_PERCNT_LU,						      
							CASE WHEN KWISCIV_PERCNT_PR = '#' THEN '-' WHEN KWISCIV_PERCNT_PR IS NULL OR KWISCIV_PERCNT_PR = '' THEN 'x' ELSE KWISCIV_PERCNT_PR END KWISCIV_PERCNT_PR,				          
							CASE WHEN KWISCIV_PERCNT_WR = '#' THEN '-' WHEN KWISCIV_PERCNT_WR IS NULL OR KWISCIV_PERCNT_WR = '' THEN 'x' ELSE KWISCIV_PERCNT_WR END KWISCIV_PERCNT_WR,				          
							CASE WHEN KWISCIV_PERCNT_PS = '#' THEN '-' WHEN KWISCIV_PERCNT_PS IS NULL OR KWISCIV_PERCNT_PS = '' THEN 'x' ELSE KWISCIV_PERCNT_PS END KWISCIV_PERCNT_PS,				          
							CASE WHEN KWISCIV_PERCNT_ALLIQ = '#' THEN '-' WHEN KWISCIV_PERCNT_ALLIQ IS NULL OR KWISCIV_PERCNT_ALLIQ = '' THEN 'x' ELSE KWISCIV_PERCNT_ALLIQ END KWISCIV_PERCNT_ALLIQ,		
							
														
							CASE WHEN KWISCIV_CONFITVL_LU = '#' THEN '-' WHEN KWISCIV_CONFITVL_LU IS NULL OR KWISCIV_CONFITVL_LU = '' THEN 'x' ELSE KWISCIV_CONFITVL_LU END KWISCIV_CONFITVL_LU,						      
							CASE WHEN KWISCIV_CONFITVL_PR = '#' THEN '-' WHEN KWISCIV_CONFITVL_PR IS NULL OR KWISCIV_CONFITVL_PR = '' THEN 'x' ELSE KWISCIV_CONFITVL_PR END KWISCIV_CONFITVL_PR,				          
							CASE WHEN KWISCIV_CONFITVL_WR = '#' THEN '-' WHEN KWISCIV_CONFITVL_WR IS NULL OR KWISCIV_CONFITVL_WR = '' THEN 'x' ELSE KWISCIV_CONFITVL_WR END KWISCIV_CONFITVL_WR,				          
							CASE WHEN KWISCIV_CONFITVL_PS = '#' THEN '-' WHEN KWISCIV_CONFITVL_PS IS NULL OR KWISCIV_CONFITVL_PS = '' THEN 'x' ELSE KWISCIV_CONFITVL_PS END KWISCIV_CONFITVL_PS,				          
							CASE WHEN KWISCIV_CONFITVL_ALLIQ = '#' THEN '-' WHEN KWISCIV_CONFITVL_ALLIQ IS NULL OR KWISCIV_CONFITVL_ALLIQ = '' THEN 'x' ELSE KWISCIV_CONFITVL_ALLIQ END KWISCIV_CONFITVL_ALLIQ,		
							
							
							CASE WHEN KWISCIV_QD_LU = '#' THEN '-' WHEN KWISCIV_QD_LU IS NULL OR KWISCIV_QD_LU = '' THEN 'x' ELSE KWISCIV_QD_LU END KWISCIV_QD_LU,						      
							CASE WHEN KWISCIV_QD_PR = '#' THEN '-' WHEN KWISCIV_QD_PR IS NULL OR KWISCIV_QD_PR = '' THEN 'x' ELSE KWISCIV_QD_PR END KWISCIV_QD_PR,				          
							CASE WHEN KWISCIV_QD_WR = '#' THEN '-' WHEN KWISCIV_QD_WR IS NULL OR KWISCIV_QD_WR = '' THEN 'x' ELSE KWISCIV_QD_WR END KWISCIV_QD_WR,				          
							CASE WHEN KWISCIV_QD_PS = '#' THEN '-' WHEN KWISCIV_QD_PS IS NULL OR KWISCIV_QD_PS = '' THEN 'x' ELSE KWISCIV_QD_PS END KWISCIV_QD_PS,				          
							CASE WHEN KWISCIV_QD_ALLIQ = '#' THEN '-' WHEN KWISCIV_QD_ALLIQ IS NULL OR KWISCIV_QD_ALLIQ = '' THEN 'x' ELSE KWISCIV_QD_ALLIQ END KWISCIV_QD_ALLIQ,		

				
							CASE WHEN KWISCIV_SIOS = '#' THEN '-' WHEN KWISCIV_SIOS IS NULL OR KWISCIV_SIOS = '' THEN 'x' ELSE KWISCIV_SIOS END KWISCIV_SIOS,
							CASE WHEN KWISCIV_VCOS = '#' THEN '-' WHEN KWISCIV_VCOS IS NULL OR KWISCIV_VCOS = '' THEN 'x' ELSE KWISCIV_VCOS END KWISCIV_VCOS,
							CASE WHEN KWISCIV_INOS = '#' THEN '-' WHEN KWISCIV_INOS IS NULL OR KWISCIV_INOS = '' THEN 'x' ELSE KWISCIV_INOS END KWISCIV_INOS,
							CASE WHEN KWISCIV_BDOS = '#' THEN '-' WHEN KWISCIV_BDOS IS NULL OR KWISCIV_BDOS = '' THEN 'x' ELSE KWISCIV_BDOS END KWISCIV_BDOS,
							CASE WHEN KWISCIV_MROS = '#' THEN '-' WHEN KWISCIV_MROS IS NULL OR KWISCIV_MROS = '' THEN 'x' ELSE KWISCIV_MROS END KWISCIV_MROS,
							CASE WHEN KWISCIV_VPOS = '#' THEN '-' WHEN KWISCIV_VPOS IS NULL OR KWISCIV_VPOS = '' THEN 'x' ELSE KWISCIV_VPOS END KWISCIV_VPOS,
							CASE WHEN KWISCIV_DSOS = '#' THEN '-' WHEN KWISCIV_DSOS IS NULL OR KWISCIV_DSOS = '' THEN 'x' ELSE KWISCIV_DSOS END KWISCIV_DSOS,
							CASE WHEN KWISCIV_AROS = '#' THEN '-' WHEN KWISCIV_AROS IS NULL OR KWISCIV_AROS = '' THEN 'x' ELSE KWISCIV_AROS END KWISCIV_AROS,
							CASE WHEN KWISCIV_SSOS = '#' THEN '-' WHEN KWISCIV_SSOS IS NULL OR KWISCIV_SSOS = '' THEN 'x' ELSE KWISCIV_SSOS END KWISCIV_SSOS,
							CASE WHEN KWISCIV_CDOS = '#' THEN '-' WHEN KWISCIV_CDOS IS NULL OR KWISCIV_CDOS = '' THEN 'x' ELSE KWISCIV_CDOS END KWISCIV_CDOS,
							CASE WHEN KWISCIV_SIES = '#' THEN '-' WHEN KWISCIV_SIES IS NULL OR KWISCIV_SIES = '' THEN 'x' ELSE KWISCIV_SIES END KWISCIV_SIES,
							CASE WHEN KWISCIV_VCES = '#' THEN '-' WHEN KWISCIV_VCES IS NULL OR KWISCIV_VCES = '' THEN 'x' ELSE KWISCIV_VCES END KWISCIV_VCES,
							CASE WHEN KWISCIV_INES = '#' THEN '-' WHEN KWISCIV_INES IS NULL OR KWISCIV_INES = '' THEN 'x' ELSE KWISCIV_INES END KWISCIV_INES,
							CASE WHEN KWISCIV_BDES = '#' THEN '-' WHEN KWISCIV_BDES IS NULL OR KWISCIV_BDES = '' THEN 'x' ELSE KWISCIV_BDES END KWISCIV_BDES,
							CASE WHEN KWISCIV_MRES = '#' THEN '-' WHEN KWISCIV_MRES IS NULL OR KWISCIV_MRES = '' THEN 'x' ELSE KWISCIV_MRES END KWISCIV_MRES,
							CASE WHEN KWISCIV_VPES = '#' THEN '-' WHEN KWISCIV_VPES IS NULL OR KWISCIV_VPES = '' THEN 'x' ELSE KWISCIV_VPES END KWISCIV_VPES,
							CASE WHEN KWISCIV_DSES = '#' THEN '-' WHEN KWISCIV_DSES IS NULL OR KWISCIV_DSES = '' THEN 'x' ELSE KWISCIV_DSES END KWISCIV_DSES,
							CASE WHEN KWISCIV_ARES = '#' THEN '-' WHEN KWISCIV_ARES IS NULL OR KWISCIV_ARES = '' THEN 'x' ELSE KWISCIV_ARES END KWISCIV_ARES,
							CASE WHEN KWISCIV_SSES = '#' THEN '-' WHEN KWISCIV_SSES IS NULL OR KWISCIV_SSES = '' THEN 'x' ELSE KWISCIV_SSES END KWISCIV_SSES,
							CASE WHEN KWISCIV_CDES = '#' THEN '-' WHEN KWISCIV_CDES IS NULL OR KWISCIV_CDES = '' THEN 'x' ELSE KWISCIV_CDES END KWISCIV_CDES,
					
							
							CASE WHEN KWISCIV2_ESAD_LU = '#' THEN '-' WHEN KWISCIV2_ESAD_LU IS NULL OR KWISCIV2_ESAD_LU = '' THEN 'x' ELSE KWISCIV2_ESAD_LU END KWISCIV2_ESAD_LU,						
							CASE WHEN KWISCIV2_ESAD_PR = '#' THEN '-' WHEN KWISCIV2_ESAD_PR IS NULL OR KWISCIV2_ESAD_PR = '' THEN 'x' ELSE KWISCIV2_ESAD_PR END KWISCIV2_ESAD_PR,				
							CASE WHEN KWISCIV2_ESAD_WR = '#' THEN '-' WHEN KWISCIV2_ESAD_WR IS NULL OR KWISCIV2_ESAD_WR = '' THEN 'x' ELSE KWISCIV2_ESAD_WR END KWISCIV2_ESAD_WR,				
							CASE WHEN KWISCIV2_ESAD_PS = '#' THEN '-' WHEN KWISCIV2_ESAD_PS IS NULL OR KWISCIV2_ESAD_PS = '' THEN 'x' ELSE KWISCIV2_ESAD_PS END KWISCIV2_ESAD_PS,				
							CASE WHEN KWISCIV2_ESAD_ALLIQ = '#' THEN '-' WHEN KWISCIV2_ESAD_ALLIQ IS NULL OR KWISCIV2_ESAD_ALLIQ = '' THEN 'x' ELSE KWISCIV2_ESAD_ALLIQ END KWISCIV2_ESAD_ALLIQ,				
							
										
							CASE WHEN KWISCIV2_IDXS_LU = '#' THEN '-' WHEN KWISCIV2_IDXS_LU IS NULL OR KWISCIV2_IDXS_LU = '' THEN 'x' ELSE KWISCIV2_IDXS_LU END KWISCIV2_IDXS_LU,						      
							CASE WHEN KWISCIV2_IDXS_PR = '#' THEN '-' WHEN KWISCIV2_IDXS_PR IS NULL OR KWISCIV2_IDXS_PR = '' THEN 'x' ELSE KWISCIV2_IDXS_PR END KWISCIV2_IDXS_PR,				          
							CASE WHEN KWISCIV2_IDXS_WR = '#' THEN '-' WHEN KWISCIV2_IDXS_WR IS NULL OR KWISCIV2_IDXS_WR = '' THEN 'x' ELSE KWISCIV2_IDXS_WR END KWISCIV2_IDXS_WR,				          
							CASE WHEN KWISCIV2_IDXS_PS = '#' THEN '-' WHEN KWISCIV2_IDXS_PS IS NULL OR KWISCIV2_IDXS_PS = '' THEN 'x' ELSE KWISCIV2_IDXS_PS END KWISCIV2_IDXS_PS,				          
							CASE WHEN KWISCIV2_IDXS_ALLIQ = '#' THEN '-' WHEN KWISCIV2_IDXS_ALLIQ IS NULL OR KWISCIV2_IDXS_ALLIQ = '' THEN 'x' ELSE KWISCIV2_IDXS_ALLIQ END KWISCIV2_IDXS_ALLIQ,		
										
							
							CASE WHEN KWISCIV2_PERCNT_LU = '#' THEN '-' WHEN KWISCIV2_PERCNT_LU IS NULL OR KWISCIV2_PERCNT_LU = '' THEN 'x' ELSE KWISCIV2_PERCNT_LU END KWISCIV2_PERCNT_LU,						      
							CASE WHEN KWISCIV2_PERCNT_PR = '#' THEN '-' WHEN KWISCIV2_PERCNT_PR IS NULL OR KWISCIV2_PERCNT_PR = '' THEN 'x' ELSE KWISCIV2_PERCNT_PR END KWISCIV2_PERCNT_PR,				          
							CASE WHEN KWISCIV2_PERCNT_WR = '#' THEN '-' WHEN KWISCIV2_PERCNT_WR IS NULL OR KWISCIV2_PERCNT_WR = '' THEN 'x' ELSE KWISCIV2_PERCNT_WR END KWISCIV2_PERCNT_WR,				          
							CASE WHEN KWISCIV2_PERCNT_PS = '#' THEN '-' WHEN KWISCIV2_PERCNT_PS IS NULL OR KWISCIV2_PERCNT_PS = '' THEN 'x' ELSE KWISCIV2_PERCNT_PS END KWISCIV2_PERCNT_PS,				          
							CASE WHEN KWISCIV2_PERCNT_ALLIQ = '#' THEN '-' WHEN KWISCIV2_PERCNT_ALLIQ IS NULL OR KWISCIV2_PERCNT_ALLIQ = '' THEN 'x' ELSE KWISCIV2_PERCNT_ALLIQ END KWISCIV2_PERCNT_ALLIQ,		
							
							
							CASE WHEN KWISCIV2_CONFITVL_LU = '#' THEN '-' WHEN KWISCIV2_CONFITVL_LU IS NULL OR KWISCIV2_CONFITVL_LU = '' THEN 'x' ELSE KWISCIV2_CONFITVL_LU END KWISCIV2_CONFITVL_LU,						      
							CASE WHEN KWISCIV2_CONFITVL_PR = '#' THEN '-' WHEN KWISCIV2_CONFITVL_PR IS NULL OR KWISCIV2_CONFITVL_PR = '' THEN 'x' ELSE KWISCIV2_CONFITVL_PR END KWISCIV2_CONFITVL_PR,				          
							CASE WHEN KWISCIV2_CONFITVL_WR = '#' THEN '-' WHEN KWISCIV2_CONFITVL_WR IS NULL OR KWISCIV2_CONFITVL_WR = '' THEN 'x' ELSE KWISCIV2_CONFITVL_WR END KWISCIV2_CONFITVL_WR,				          
							CASE WHEN KWISCIV2_CONFITVL_PS = '#' THEN '-' WHEN KWISCIV2_CONFITVL_PS IS NULL OR KWISCIV2_CONFITVL_PS = '' THEN 'x' ELSE KWISCIV2_CONFITVL_PS END KWISCIV2_CONFITVL_PS,				          
							CASE WHEN KWISCIV2_CONFITVL_ALLIQ = '#' THEN '-' WHEN KWISCIV2_CONFITVL_ALLIQ IS NULL OR KWISCIV2_CONFITVL_ALLIQ = '' THEN 'x' ELSE KWISCIV2_CONFITVL_ALLIQ END KWISCIV2_CONFITVL_ALLIQ,		
							
								
							S1.REMARKS,
							CASE WHEN EXCT_ALL_INTELL = '#' THEN '-' WHEN EXCT_ALL_INTELL IS NULL OR EXCT_ALL_INTELL = '' THEN 'x' ELSE EXCT_ALL_INTELL END EXCT_ALL_INTELL,
							CASE WHEN EXCT_SHORT_INTELL = '#' THEN '-' WHEN EXCT_SHORT_INTELL IS NULL OR EXCT_SHORT_INTELL = '' THEN 'x' ELSE EXCT_SHORT_INTELL END EXCT_SHORT_INTELL,
							CASE WHEN EXCT_FLUID_INFER = '#' THEN '-' WHEN EXCT_FLUID_INFER IS NULL OR EXCT_FLUID_INFER = '' THEN 'x' ELSE EXCT_FLUID_INFER END EXCT_FLUID_INFER,
							CASE WHEN EXCT_BASIC_VISUAL = '#' THEN '-' WHEN EXCT_BASIC_VISUAL IS NULL OR EXCT_BASIC_VISUAL = '' THEN 'x' ELSE EXCT_BASIC_VISUAL END EXCT_BASIC_VISUAL,
							CASE WHEN ICID_ALL_INTELL = '#' THEN '-' WHEN ICID_ALL_INTELL IS NULL OR ICID_ALL_INTELL = '' THEN 'x' ELSE ICID_ALL_INTELL END ICID_ALL_INTELL,
							CASE WHEN ICID_SHORT_INTELL = '#' THEN '-' WHEN ICID_SHORT_INTELL IS NULL OR ICID_SHORT_INTELL = '' THEN 'x' ELSE ICID_SHORT_INTELL END ICID_SHORT_INTELL,
							CASE WHEN ICID_FLUID_INFER = '#' THEN '-' WHEN ICID_FLUID_INFER IS NULL OR ICID_FLUID_INFER = '' THEN 'x' ELSE ICID_FLUID_INFER END ICID_FLUID_INFER,
							CASE WHEN ICID_BASIC_VISUAL = '#' THEN '-' WHEN ICID_BASIC_VISUAL IS NULL OR ICID_BASIC_VISUAL = '' THEN 'x' ELSE ICID_BASIC_VISUAL END ICID_BASIC_VISUAL,
							CASE WHEN VIFS_FORE_BACK = '#' THEN '-' WHEN VIFS_FORE_BACK IS NULL OR VIFS_FORE_BACK = '' THEN 'x' ELSE VIFS_FORE_BACK END VIFS_FORE_BACK,
							CASE WHEN VIFS_SHAPE_COMP = '#' THEN '-' WHEN VIFS_SHAPE_COMP IS NULL OR VIFS_SHAPE_COMP = '' THEN 'x' ELSE VIFS_SHAPE_COMP END VIFS_SHAPE_COMP,
							CASE WHEN VIFS_MATCH = '#' THEN '-' WHEN VIFS_MATCH IS NULL OR VIFS_MATCH = '' THEN 'x' ELSE VIFS_MATCH END VIFS_MATCH,
							CASE WHEN VIFS_ORDER_INFER = '#' THEN '-' WHEN VIFS_ORDER_INFER IS NULL OR VIFS_ORDER_INFER = '' THEN 'x' ELSE VIFS_ORDER_INFER END VIFS_ORDER_INFER,
							CASE WHEN VIFS_PATT_FIND = '#' THEN '-' WHEN VIFS_PATT_FIND IS NULL OR VIFS_PATT_FIND = '' THEN 'x' ELSE VIFS_PATT_FIND END VIFS_PATT_FIND,
							CASE WHEN VIFS_DRAW_INFER = '#' THEN '-' WHEN VIFS_DRAW_INFER IS NULL OR VIFS_DRAW_INFER = '' THEN 'x' ELSE VIFS_DRAW_INFER END VIFS_DRAW_INFER,
							CASE WHEN VIFS_CATEGORIZ = '#' THEN '-' WHEN VIFS_CATEGORIZ IS NULL OR VIFS_CATEGORIZ = '' THEN 'x' ELSE VIFS_CATEGORIZ END VIFS_CATEGORIZ,
							CASE WHEN VIEXC_FORE_BACK = '#' THEN '-' WHEN VIEXC_FORE_BACK IS NULL OR VIEXC_FORE_BACK = '' THEN 'x' ELSE VIEXC_FORE_BACK END VIEXC_FORE_BACK,
							CASE WHEN VIEXC_SHAPE_COMP = '#' THEN '-' WHEN VIEXC_SHAPE_COMP IS NULL OR VIEXC_SHAPE_COMP = '' THEN 'x' ELSE VIEXC_SHAPE_COMP END VIEXC_SHAPE_COMP,
							CASE WHEN VIEXC_MATCH = '#' THEN '-' WHEN VIEXC_MATCH IS NULL OR VIEXC_MATCH = '' THEN 'x' ELSE VIEXC_MATCH END VIEXC_MATCH,
							CASE WHEN VIEXC_ORDER_INFER = '#' THEN '-' WHEN VIEXC_ORDER_INFER IS NULL OR VIEXC_ORDER_INFER = '' THEN 'x' ELSE VIEXC_ORDER_INFER END VIEXC_ORDER_INFER,
							CASE WHEN VIEXC_PATT_FIND = '#' THEN '-' WHEN VIEXC_PATT_FIND IS NULL OR VIEXC_PATT_FIND = '' THEN 'x' ELSE VIEXC_PATT_FIND END VIEXC_PATT_FIND,
							CASE WHEN VIEXC_DRAW_INFER = '#' THEN '-' WHEN VIEXC_DRAW_INFER IS NULL OR VIEXC_DRAW_INFER = '' THEN 'x' ELSE VIEXC_DRAW_INFER END VIEXC_DRAW_INFER,
							CASE WHEN VIEXC_CATEGORIZ = '#' THEN '-' WHEN VIEXC_CATEGORIZ IS NULL OR VIEXC_CATEGORIZ = '' THEN 'x' ELSE VIEXC_CATEGORIZ END VIEXC_CATEGORIZ,
							CASE WHEN CEXC_MEMORY_SELECT = '#' THEN '-' WHEN CEXC_MEMORY_SELECT IS NULL OR CEXC_MEMORY_SELECT = '' THEN 'x' ELSE CEXC_MEMORY_SELECT END CEXC_MEMORY_SELECT,
							CASE WHEN CEXC_RECOG_MEMORY = '#' THEN '-' WHEN CEXC_RECOG_MEMORY IS NULL OR CEXC_RECOG_MEMORY = '' THEN 'x' ELSE CEXC_RECOG_MEMORY END CEXC_RECOG_MEMORY,
							CASE WHEN CCOMP_MEMORY_SELECT = '#' THEN '-' WHEN CCOMP_MEMORY_SELECT IS NULL OR CCOMP_MEMORY_SELECT = '' THEN 'x' ELSE CCOMP_MEMORY_SELECT END CCOMP_MEMORY_SELECT,
							CASE WHEN CCOMP_RECOG_MEMORY = '#' THEN '-' WHEN CCOMP_RECOG_MEMORY IS NULL OR CCOMP_RECOG_MEMORY = '' THEN 'x' ELSE CCOMP_RECOG_MEMORY END CCOMP_RECOG_MEMORY,
							CASE WHEN SC_PAIR_ASSO = '#' THEN '-' WHEN SC_PAIR_ASSO IS NULL OR SC_PAIR_ASSO = '' THEN 'x' ELSE SC_PAIR_ASSO END SC_PAIR_ASSO,
							CASE WHEN SC_IMMED_RECOG = '#' THEN '-' WHEN SC_IMMED_RECOG IS NULL OR SC_IMMED_RECOG = '' THEN 'x' ELSE SC_IMMED_RECOG END SC_IMMED_RECOG,
							CASE WHEN SC_IMMED_REMEMBER = '#' THEN '-' WHEN SC_IMMED_REMEMBER IS NULL OR SC_IMMED_REMEMBER = '' THEN 'x' ELSE SC_IMMED_REMEMBER END SC_IMMED_REMEMBER,
							CASE WHEN SC_SUSTAIN_ATT = '#' THEN '-' WHEN SC_SUSTAIN_ATT IS NULL OR SC_SUSTAIN_ATT = '' THEN 'x' ELSE SC_SUSTAIN_ATT END SC_SUSTAIN_ATT,
							CASE WHEN SC_DELAY_RECOG = '#' THEN '-' WHEN SC_DELAY_RECOG IS NULL OR SC_DELAY_RECOG = '' THEN 'x' ELSE SC_DELAY_RECOG END SC_DELAY_RECOG,
							CASE WHEN EXC_PAIR_ASSO = '#' THEN '-' WHEN EXC_PAIR_ASSO IS NULL OR EXC_PAIR_ASSO = '' THEN 'x' ELSE EXC_PAIR_ASSO END EXC_PAIR_ASSO,
							CASE WHEN EXC_IMMED_RECOG = '#' THEN '-' WHEN EXC_IMMED_RECOG IS NULL OR EXC_IMMED_RECOG = '' THEN 'x' ELSE EXC_IMMED_RECOG END EXC_IMMED_RECOG,
							CASE WHEN EXC_IMMED_REMEMBER = '#' THEN '-' WHEN EXC_IMMED_REMEMBER IS NULL OR EXC_IMMED_REMEMBER = '' THEN 'x' ELSE EXC_IMMED_REMEMBER END EXC_IMMED_REMEMBER,
							CASE WHEN EXC_SUSTAIN_ATT = '#' THEN '-' WHEN EXC_SUSTAIN_ATT IS NULL OR EXC_SUSTAIN_ATT = '' THEN 'x' ELSE EXC_SUSTAIN_ATT END EXC_SUSTAIN_ATT,
							CASE WHEN EXC_DELAY_RECOG = '#' THEN '-' WHEN EXC_DELAY_RECOG IS NULL OR EXC_DELAY_RECOG = '' THEN 'x' ELSE EXC_DELAY_RECOG END EXC_DELAY_RECOG,
							CASE WHEN P_RS_COMPSC = '#' THEN '-' WHEN P_RS_COMPSC IS NULL OR P_RS_COMPSC = '' THEN 'x' ELSE P_RS_COMPSC END P_RS_COMPSC,
							CASE WHEN P_EC_COMPSC = '#' THEN '-' WHEN P_EC_COMPSC IS NULL OR P_EC_COMPSC = '' THEN 'x' ELSE P_EC_COMPSC END P_EC_COMPSC,
							CASE WHEN SC_ATTENTION = '#' THEN '-' WHEN SC_ATTENTION IS NULL OR SC_ATTENTION = '' THEN 'x' ELSE SC_ATTENTION END SC_ATTENTION,
							CASE WHEN SC_ACTIV_LEVEL = '#' THEN '-' WHEN SC_ACTIV_LEVEL IS NULL OR SC_ACTIV_LEVEL = '' THEN 'x' ELSE SC_ACTIV_LEVEL END SC_ACTIV_LEVEL,
							CASE WHEN SC_IMPULS = '#' THEN '-' WHEN SC_IMPULS IS NULL OR SC_IMPULS = '' THEN 'x' ELSE SC_IMPULS END SC_IMPULS,
							CASE WHEN SC_ADAPTABILITY = '#' THEN '-' WHEN SC_ADAPTABILITY IS NULL OR SC_ADAPTABILITY = '' THEN 'x' ELSE SC_ADAPTABILITY END SC_ADAPTABILITY,
							CASE WHEN SC_MOOD_CONFID = '#' THEN '-' WHEN SC_MOOD_CONFID IS NULL OR SC_MOOD_CONFID = '' THEN 'x' ELSE SC_MOOD_CONFID END SC_MOOD_CONFID,
							CASE WHEN SC_FEEL_EMO = '#' THEN '-' WHEN SC_FEEL_EMO IS NULL OR SC_FEEL_EMO = '' THEN 'x' ELSE SC_FEEL_EMO END SC_FEEL_EMO,
							CASE WHEN SC_SOCIABILITY = '#' THEN '-' WHEN SC_SOCIABILITY IS NULL OR SC_SOCIABILITY = '' THEN 'x' ELSE SC_SOCIABILITY END SC_SOCIABILITY,
							CASE WHEN SC_CONTROL = '#' THEN '-' WHEN SC_CONTROL IS NULL OR SC_CONTROL = '' THEN 'x' ELSE SC_CONTROL END SC_CONTROL,
							CASE WHEN EXC_ATTENTION = '#' THEN '-' WHEN EXC_ATTENTION IS NULL OR EXC_ATTENTION = '' THEN 'x' ELSE EXC_ATTENTION END EXC_ATTENTION,
							CASE WHEN EXC_ACTIV_LEVEL = '#' THEN '-' WHEN EXC_ACTIV_LEVEL IS NULL OR EXC_ACTIV_LEVEL = '' THEN 'x' ELSE EXC_ACTIV_LEVEL END EXC_ACTIV_LEVEL,
							CASE WHEN EXC_IMPULS = '#' THEN '-' WHEN EXC_IMPULS IS NULL OR EXC_IMPULS = '' THEN 'x' ELSE EXC_IMPULS END EXC_IMPULS,
							CASE WHEN EXC_ADAPTABILITY = '#' THEN '-' WHEN EXC_ADAPTABILITY IS NULL OR EXC_ADAPTABILITY = '' THEN 'x' ELSE EXC_ADAPTABILITY END EXC_ADAPTABILITY,
							CASE WHEN EXC_MOOD_CONFID = '#' THEN '-' WHEN EXC_MOOD_CONFID IS NULL OR EXC_MOOD_CONFID = '' THEN 'x' ELSE EXC_MOOD_CONFID END EXC_MOOD_CONFID,
							CASE WHEN EXC_FEEL_EMO = '#' THEN '-' WHEN EXC_FEEL_EMO IS NULL OR EXC_FEEL_EMO = '' THEN 'x' ELSE EXC_FEEL_EMO END EXC_FEEL_EMO,
							CASE WHEN EXC_SOCIABILITY = '#' THEN '-' WHEN EXC_SOCIABILITY IS NULL OR EXC_SOCIABILITY = '' THEN 'x' ELSE EXC_SOCIABILITY END EXC_SOCIABILITY,
							CASE WHEN EXC_CONTROL = '#' THEN '-' WHEN EXC_CONTROL IS NULL OR EXC_CONTROL = '' THEN 'x' ELSE EXC_CONTROL END EXC_CONTROL
						FROM T_NEUROPSY_S1 S1 
                        JOIN T_PERFORM_TERM PT
						ON S1.PERFORM_CNT = PT.PERFORM_CNT
                        JOIN T_S1_IKLEITER SI
                        ON S1.TARGET_ID = SI.TARGET_ID
                        AND S1.PERFORM_CNT = SI.PERFORM_CNT
                        AND S1.RND_ID = SI.RND_ID
						LEFT JOIN T_TARGET_MST TM
						ON S1.TARGET_ID = TM.TARGET_ID
						AND S1.RND_ID = TM.RND_ID
                        LEFT JOIN T_TARGET_DIS_MST TDM
                        ON TM.TARGET_ID = TDM.TARGET_ORG_ID
                        AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					    LEFT JOIN T_CODE_DTL DISE1
				        ON DISE1.CLASS_CD = 'DISE1'
				        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
				        LEFT JOIN T_CODE_DTL PTC
				        ON PTC.CLASS_CD = 'PT001'
				        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
				        LEFT JOIN T_PERFORM_MST PM
						ON TM.RND_ID = PM.RND_ID
						AND TM.TARGET_ID = PM.TARGET_ID
						AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
						AND S1.PERFORM_CNT = PM.PERFORM_CNT
				        WHERE 1=1
				        	AND TM.RND_ID = #{rndId}
				        	AND PM.STATUS != '0004'
				        	AND NOT PM.PERFORM_CNT = 2
				            AND NOT PM.PERFORM_CNT = 3
				            <if test="disClassDtl !=null and disClassDtl != '' ">
                            AND DISE1.CLASS_CD_DTL = #{disClassDtl}
                            </if>
					        <if test="targetId !=null and targetId != '' ">
								AND TM.TARGET_ID = #{targetId}
							</if>
							<if test="targetDisId !=null and targetDisId != '' ">
								AND TM.TARGET_DIS_ID = #{targetDisId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND TM.SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND S1.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (S1.TARGET_ID, S1.PERFORM_CNT, S1.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						) A
					) B
			WHERE 1=1 
				 AND NOT B.ALL_CHK = '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
		ORDER BY B.TARGET_ID, B.PERFORM_CNT
		LIMIT #{start}, #{limit}
	</select>
	
	<update id="insertNeuropsyS1" parameterType="map">
		INSERT INTO T_NEUROPSY_S1(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,TIC_SUBTYPE
			,S1_EXEC_DATE
			,FSIQ
			,ENROLL_AGE
			<!-- ,KEDIWAIS_REF -->
			,KEDIWAIS_VOCA_OS
			,KEDIWAIS_ARITH_OS
			,KEDIWAIS_ORDER_OS
			,KEDIWAIS_PIECE_OS
			,KEDIWAIS_VOCA_ES
			,KEDIWAIS_ARITH_ES
			,KEDIWAIS_ORDER_ES
			,KEDIWAIS_PIECE_ES
			,KWISCIV_COS
			,KWISCIV_VOS
			,KWISCIV_UOS
			,KWISCIV_POS
			,KWISCIV_CPOS
			,KWISCIV_MOS
			,KWISCIV_NOS
			,KWISCIV_SCOS
			,KWISCIV_SOS
			,KWISCIV_STOS
			,KWISCIV_CES
			,KWISCIV_VES
			,KWISCIV_UES
			,KWISCIV_PES
			,KWISCIV_CPES
			,KWISCIV_MES
			,KWISCIV_NES
			,KWISCIV_SCES
			,KWISCIV_SES
			,KWISCIV_STES
			,KWISCIV_ESAD_LU               
			,KWISCIV_ESAD_PR               
			,KWISCIV_ESAD_WR               
			,KWISCIV_ESAD_PS         
			,KWISCIV_ESAD_ALLIQ      
			                            
			,KWISCIV_IDXS_LU             
			,KWISCIV_IDXS_PR             
			,KWISCIV_IDXS_WR             
			,KWISCIV_IDXS_PS             
			,KWISCIV_IDXS_ALLIQ      
			                       
			,KWISCIV_PERCNT_LU           
			,KWISCIV_PERCNT_PR           
			,KWISCIV_PERCNT_WR           
			,KWISCIV_PERCNT_PS           
			,KWISCIV_PERCNT_ALLIQ      
			                            
			,KWISCIV_CONFITVL_LU         
			,KWISCIV_CONFITVL_PR         
			,KWISCIV_CONFITVL_WR         
			,KWISCIV_CONFITVL_PS         
			,KWISCIV_CONFITVL_ALLIQ
			                              
			,KWISCIV_QD_LU                 
			,KWISCIV_QD_PR                 
			,KWISCIV_QD_WR                 
			,KWISCIV_QD_PS                 
			,KWISCIV_QD_ALLIQ     
			
			,KWISCIV_SIOS
			,KWISCIV_VCOS
			,KWISCIV_INOS
			,KWISCIV_BDOS
			,KWISCIV_MROS
			,KWISCIV_VPOS
			,KWISCIV_DSOS
			,KWISCIV_AROS
			,KWISCIV_SSOS
			,KWISCIV_CDOS
			,KWISCIV_SIES
			,KWISCIV_VCES
			,KWISCIV_INES
			,KWISCIV_BDES
			,KWISCIV_MRES
			,KWISCIV_VPES
			,KWISCIV_DSES
			,KWISCIV_ARES
			,KWISCIV_SSES
			,KWISCIV_CDES
			
			,KWISCIV2_ESAD_LU                   
			,KWISCIV2_ESAD_PR           
			,KWISCIV2_ESAD_WR           
			,KWISCIV2_ESAD_PS           
			,KWISCIV2_ESAD_ALLIQ        
			                           
			                           
			,KWISCIV2_IDXS_LU           
			,KWISCIV2_IDXS_PR           
			,KWISCIV2_IDXS_WR           
			,KWISCIV2_IDXS_PS           
			,KWISCIV2_IDXS_ALLIQ        
			                           
			                           
			,KWISCIV2_PERCNT_LU       
			,KWISCIV2_PERCNT_PR       
			,KWISCIV2_PERCNT_WR       
			,KWISCIV2_PERCNT_PS       
			,KWISCIV2_PERCNT_ALLIQ    
			                         
			,KWISCIV2_CONFITVL_LU     
			,KWISCIV2_CONFITVL_PR     
			,KWISCIV2_CONFITVL_WR     
			,KWISCIV2_CONFITVL_PS     
			,KWISCIV2_CONFITVL_ALLIQ
			
			
			
			,KSADS_BLUES
			,KSADS_ANGER
			,KSADS_LOSSM
			,KSADS_DEATH
			,KSADS_SUICIDE
			,KSADS_SUI_SEVERITY
			,KSADS_SUI_CRITICALITY
			,KSADS_SELFHARM
			,KSADS_UPLIFT
			,KSADS_DEC_SLEEP
			,KSADS_GOAL_ACTIVITY
			,KSADS_GALLOP
			,KSADS_HALLUCINATION
			,KSADS_DELUSION
			,KSADS_PANIC
			,KSADS_SEPARATION_FEAR
			,KSADS_ATTACH_FEAR
			,KSADS_REJECT_SCHOOL
			,KSADS_SLEEP_FEAR
			,KSADS_ALONE_FEAR
			,KSADS_ATROPHY
			,KSADS_SITUATION_FEAR
			,KSADS_PAIN
			,KSADS_AVOID
			,KSADS_FUTURE_WORRY
			,KSADS_BODY_COMPLAIN
			,KSADS_SELF_CONSCIOUS
			,KSADS_TENSION
			,KSADS_COMPLUSIVE_ACT
			,KSADS_COMPLUSIVE_THINK
			,KSADS_PEE_NIGHT
			,KSADS_PEE_DAY
			,KSADS_PEE_TOTAL
			,KSADS_SHIT_NIGHT
			,KSADS_SHIT_DAY
			,KSADS_SHIT_TOTAL
			,KSADS_FAT_FEAR
			,KSADS_LOW_WEIGHT
			,KSADS_WEIGHT_LOSS
			,KSADS_VORACITY
			,KSADS_ADHD_CF
			,KSADS_ADHD_ED
			,KSADS_ADHD_SF
			,KSADS_ADHD_IMPULSIVITY
			,KSADS_ODD_ANGRY
			,KSADS_ODD_AA
			,KSADS_ODD_NOTRULES
			,KSADS_CD_LIE
			,KSADS_CD_TRUANCY
			,KSADS_CD_FIGHT
			,KSADS_CD_TORMENT
			,KSADS_CD_THIEVERY
			,KSADS_EXERCISE_TIC
			,KSADS_EXERCISE_VOICE
			,GAS
			,ADHDRQ1_MISTAKE
			,ADHDRQ2_NOTLISTEN
			,ADHDRQ3_FOLLOW_DIFF
			,ADHDRQ4_ARRANGE_DIFF
			,ADHDRQ5_ASSIGN_AVOID
			,ADHDRQ6_LOST_ITEM
			,ADHDRQ7_FORGETFULNESS
			,ADHDRQ8_UNREST
			,ADHDRQ9_OVERRUN
			,ADHDRQ10_ENDLESS_ACT
			,ADHDRQ11_SILENT_DIFF
			,ADHDRQ12_SUDDEN_ANS
			,ADHDRQ13_WAIT_DIFF
			,ADHDRQ14_INTERRUPT
			,ADHDRQ15_FICKLE
			,ADHDRQ16_CHATTER
			,ADHDRQ17_DANGER_ACT
			,DIAGNOSIS
			,DIAGNOSIS_ETC
			,TIC_APPENDIX
			,SACT_TIC1_CE
			,SACT_TIC1_MSP
			,SACT_TIC2_CE
			,SACT_TIC2_MSP
			,SACT_TIC3_CE
			,SACT_TIC3_MSP
			,SACT_TIC4_CE
			,SACT_TIC4_MSP
			,SACT_TIC5_CE
			,SACT_TIC5_MSP
			,SACT_TIC6_CE
			,SACT_TIC6_MSP
			,SACT_TIC7_CE
			,SACT_TIC7_MSP
			,SACT_TIC8_CE
			,SACT_TIC8_MSP
			,CACT_TIC1_CE
			,CACT_TIC1_MSP
			,CACT_TIC2_CE
			,CACT_TIC2_MSP
			,CACT_TIC3_CE
			,CACT_TIC3_MSP
			,CACT_TIC4_CE
			,CACT_TIC4_MSP
			,CACT_TIC5_CE
			,CACT_TIC5_MSP
			,SVOICE_TIC1_CE
			,SVOICE_TIC1_MSP
			,SVOICE_TIC2_CE
			,SVOICE_TIC2_MSP
			,SVOICE_TIC3_CE
			,SVOICE_TIC3_MSP
			,CVOICE_TIC1_CE
			,CVOICE_TIC1_MSP
			,CVOICE_TIC2_CE
			,CVOICE_TIC2_MSP
			,CVOICE_TIC3_CE
			,CVOICE_TIC3_MSP
			,CVOICE_TIC4_CE
			,CVOICE_TIC4_MSP
			,CVOICE_TIC5_CE
			,CVOICE_TIC5_MSP
			,CVOICE_TIC6A_CE
			,CVOICE_TIC6A_MSP
			,CVOICE_TIC6B_CE
			,CVOICE_TIC6B_MSP
			,CVOICE_TIC6C_CE
			,CVOICE_TIC6C_MSP
			,TOURETTE_7A_CE
			,TOURETTE_7A_MSP
			,TOURETTE_7B_CE
			,TOURETTE_7B_MSP
			,CHRONIC_TIC8A_CE
			,CHRONIC_TIC8A_MSP
			,CHRONIC_TIC8B_CE
			,CHRONIC_TIC8B_MSP
			,DAILY_TIC9A_CE
			,DAILY_TIC9A_MSP
			,DAILY_TIC9B_CE
			,DAILY_TIC9B_MSP
			,REMARKS
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{ticSubtype, jdbcType=VARCHAR}), 'x')
			, #{s1ExecDate, jdbcType=VARCHAR}
			, #{enrollAge, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{fsiq, jdbcType=VARCHAR}), 'x')
			<!-- , IFNULL(LOWER(#{kediwaisRef, jdbcType=VARCHAR}), 'x') -->
			, IFNULL(LOWER(#{kediwaisVocaOs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kediwaisArithOs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kediwaisOrderOs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kediwaisPieceOs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kediwaisVocaEs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kediwaisArithEs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kediwaisOrderEs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kediwaisPieceEs, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivCos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivVos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivUos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivPos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivCpos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivMos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivNos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivScos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivSos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivStos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivCes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivVes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivUes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivPes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivCpes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivMes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivNes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivSces, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivSes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivStes, jdbcType=VARCHAR}), 'x')
			
			,IFNULL(LOWER(#{kwiscivEsadlu	, jdbcType=VARCHAR}), 'X')            
			,IFNULL(LOWER(#{kwiscivEsadpr	, jdbcType=VARCHAR}), 'X')            
			,IFNULL(LOWER(#{kwiscivEsadwr	, jdbcType=VARCHAR}), 'X')            
			,IFNULL(LOWER(#{kwiscivEsadps , jdbcType=VARCHAR}), 'X')             
			,IFNULL(LOWER(#{kwiscivEsadalliq , jdbcType=VARCHAR}), 'X')                                         
			,IFNULL(LOWER(#{kwiscivIdxslu	,  jdbcType=VARCHAR}), 'X')            
			,IFNULL(LOWER(#{kwiscivIdxspr	,  jdbcType=VARCHAR}), 'X')            
			,IFNULL(LOWER(#{kwiscivIdxswr	,  jdbcType=VARCHAR}), 'X')            
			,IFNULL(LOWER(#{kwiscivIdxsps	,  jdbcType=VARCHAR}), 'X')            
			,IFNULL(LOWER(#{kwiscivIdxsalliq , jdbcType=VARCHAR}), 'X')                                                      
			,IFNULL(LOWER(#{kwiscivPercntlu	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwiscivPercntpr	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwiscivPercntwr	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwiscivPercntps	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwiscivPercntalliq	,  jdbcType=VARCHAR}), 'X')                                                          
			,IFNULL(LOWER(#{kwiscivConfitvllu	,  jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwiscivConfitvlpr	,  jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwiscivConfitvlwr	,  jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwiscivConfitvlps	,  jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwiscivConfitvlalliq , jdbcType=VARCHAR}), 'X')                                                           
			,IFNULL(LOWER(#{kwiscivQdlu	, jdbcType=VARCHAR}), 'X')          
			,IFNULL(LOWER(#{kwiscivQdpr	, jdbcType=VARCHAR}), 'X')          
			,IFNULL(LOWER(#{kwiscivQdwr	, jdbcType=VARCHAR}), 'X')          
			,IFNULL(LOWER(#{kwiscivQdps	, jdbcType=VARCHAR}), 'X') 
			,IFNULL(LOWER(#{kwiscivQdalliq	, jdbcType=VARCHAR}), 'X')  
			
			, IFNULL(LOWER(#{kwiscivSios, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivVcos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivInos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivBdos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivMros, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivVpos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivDsos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivAros, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivSsos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivCdos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivSies, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivVces, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivInes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivBdes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivMres, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivVpes, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivDses, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivAres, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivSses, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{kwiscivCdes, jdbcType=VARCHAR}), 'x')
			
			,IFNULL(LOWER(#{kwisciv2Esadlu	, jdbcType=VARCHAR}), 'X')
			,IFNULL(LOWER(#{kwisciv2Esadpr	, jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwisciv2Esadwr	, jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwisciv2Esadps	, jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwisciv2Esadalliq	, jdbcType=VARCHAR}), 'X')                                                 
			,IFNULL(LOWER(#{kwisciv2Idxslu	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwisciv2Idxspr	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwisciv2Idxswr	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwisciv2Idxsps	,  jdbcType=VARCHAR}), 'X')              
			,IFNULL(LOWER(#{kwisciv2Idxsalliq	, jdbcType=VARCHAR}), 'X')                                                       
			,IFNULL(LOWER(#{kwisciv2Percntlu	, jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwisciv2Percntpr	, jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwisciv2Percntwr	, jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwisciv2Percntps	, jdbcType=VARCHAR}), 'X')                
			,IFNULL(LOWER(#{kwisciv2Percntalliq , jdbcType=VARCHAR}), 'X')                                                           
			,IFNULL(LOWER(#{kwisciv2Confitvllu , jdbcType=VARCHAR}), 'X')                 
			,IFNULL(LOWER(#{kwisciv2Confitvlpr , jdbcType=VARCHAR}), 'X')                 
			,IFNULL(LOWER(#{kwisciv2Confitvlwr , jdbcType=VARCHAR}), 'X')                 
			,IFNULL(LOWER(#{kwisciv2Confitvlps , jdbcType=VARCHAR}), 'X')                 
			,IFNULL(LOWER(#{kwisciv2Confitvlalliq, jdbcType=VARCHAR}), 'X')           
			
			
			, IFNULL(LOWER(#{ksadsBlues, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAnger, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsLossm, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsDeath, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSuicide, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSuiSeverity, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSuiCriticality, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSelfharm, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsUplift, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsDecSleep, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsGoalActivity, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsGallop, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsHallucination, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsDelusion, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsPanic, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSeparationFear, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAttachFear, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsRejectSchool, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSleepFear, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAloneFear, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAtrophy, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSituationFear, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsPain, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAvoid, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsFutureWorry, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsBodyComplain, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsSelfConsious, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsTension, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsComplusiveAct, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsComplusiveThink, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsPeeNight, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsPeeDay, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsPeeTotal, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsShitNight, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsShitDay, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsShitTotal, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsFatFear, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsLowWeight, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsWeightLoss, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsVoracity, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAdhdCf, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAdhdEd, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAdhdSf, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsAdhdImpulsivity, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsOddAngry, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsOddAa, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsOddNotrules, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsCdLie, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsCdTruancy, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsCdFight, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsCdTorment, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsCdThievery, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsExerciseTic, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ksadsExerciseVoice, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{gas, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq1Mistake, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq2Notlisten, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq3FollowDiff, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq4ArrangeDiff, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq5AssignAvoid, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq6LostItem, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq7Forgetfulness, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq8Unrest, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq9Overrun, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq10EndlessAct, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq11SilentDiff, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq12SuddenAns, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq13WaitDiff, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq14Interrupt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq15Fickle, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq16Chatter, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{adhdrq17DangerAct, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{diagnosis, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{diagnosisEtc, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ticAppendix, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic1Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic1Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic2Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic2Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic3Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic3Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic4Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic4Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic5Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic5Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic6Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic6Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic7Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic7Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic8Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{sactTic8Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic1Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic1Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic2Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic2Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic3Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic3Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic4Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic4Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic5Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cactTic5Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{svoiceTic1Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{svoiceTic1Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{svoiceTic2Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{svoiceTic2Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{svoiceTic3Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{svoiceTic3Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic1Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic1Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic2Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic2Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic3Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic3Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic4Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic4Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic5Ce, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic5Msp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic6aCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic6aMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic6bCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic6bMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic6cCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cvoiceTic6cMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{tourette7aCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{tourette7aMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{tourette7bCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{tourette7bMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{chronicTic8aCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{chronicTic8aMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{chronicTic8bCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{chronicTic8bMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{dailyTic9aCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{dailyTic9aMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{dailyTic9bCe, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{dailyTic9bMsp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			TIC_SUBTYPE = IFNULL(LOWER(#{ticSubtype,jdbcType=VARCHAR}), 'x')
			,S1_EXEC_DATE = #{s1ExecDate,jdbcType=VARCHAR}
			,ENROLL_AGE = #{enrollAge, jdbcType=VARCHAR}
			,FSIQ = IFNULL(LOWER(#{fsiq,jdbcType=VARCHAR}), 'x')
			<!-- ,KEDIWAIS_REF = IFNULL(LOWER(#{kediwaisRef,jdbcType=VARCHAR}), 'x') -->
			,KEDIWAIS_VOCA_OS = IFNULL(LOWER(#{kediwaisVocaOs,jdbcType=VARCHAR}), 'x')
			,KEDIWAIS_ARITH_OS = IFNULL(LOWER(#{kediwaisArithOs,jdbcType=VARCHAR}), 'x')
			,KEDIWAIS_ORDER_OS = IFNULL(LOWER(#{kediwaisOrderOs,jdbcType=VARCHAR}), 'x')
			,KEDIWAIS_PIECE_OS = IFNULL(LOWER(#{kediwaisPieceOs,jdbcType=VARCHAR}), 'x')
			,KEDIWAIS_VOCA_ES = IFNULL(LOWER(#{kediwaisVocaEs,jdbcType=VARCHAR}), 'x')
			,KEDIWAIS_ARITH_ES = IFNULL(LOWER(#{kediwaisArithEs,jdbcType=VARCHAR}), 'x')
			,KEDIWAIS_ORDER_ES = IFNULL(LOWER(#{kediwaisOrderEs,jdbcType=VARCHAR}), 'x')
			,KEDIWAIS_PIECE_ES = IFNULL(LOWER(#{kediwaisPieceEs,jdbcType=VARCHAR}), 'x')
			,KWISCIV_COS = IFNULL(LOWER(#{kwiscivCos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_VOS = IFNULL(LOWER(#{kwiscivVos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_UOS = IFNULL(LOWER(#{kwiscivUos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_POS = IFNULL(LOWER(#{kwiscivPos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_CPOS = IFNULL(LOWER(#{kwiscivCpos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_MOS = IFNULL(LOWER(#{kwiscivMos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_NOS = IFNULL(LOWER(#{kwiscivNos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SCOS = IFNULL(LOWER(#{kwiscivScos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SOS = IFNULL(LOWER(#{kwiscivSos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_STOS = IFNULL(LOWER(#{kwiscivStos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_CES = IFNULL(LOWER(#{kwiscivCes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_VES = IFNULL(LOWER(#{kwiscivVes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_UES = IFNULL(LOWER(#{kwiscivUes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_PES = IFNULL(LOWER(#{kwiscivPes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_CPES = IFNULL(LOWER(#{kwiscivCpes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_MES = IFNULL(LOWER(#{kwiscivMes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_NES = IFNULL(LOWER(#{kwiscivNes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SCES = IFNULL(LOWER(#{kwiscivSces,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SES = IFNULL(LOWER(#{kwiscivSes,jdbcType=VARCHAR}), 'x')
			
			,KWISCIV_ESAD_LU = IFNULL(LOWER(#{kwiscivEsadlu	, jdbcType=VARCHAR}), 'X')            
			,KWISCIV_ESAD_PR = IFNULL(LOWER(#{kwiscivEsadpr	, jdbcType=VARCHAR}), 'X')            
			,KWISCIV_ESAD_WR = IFNULL(LOWER(#{kwiscivEsadwr	, jdbcType=VARCHAR}), 'X')            
			,KWISCIV_ESAD_PS = IFNULL(LOWER(#{kwiscivEsadps , jdbcType=VARCHAR}), 'X')             
			,KWISCIV_ESAD_ALLIQ  = IFNULL(LOWER(#{kwiscivEsadalliq , jdbcType=VARCHAR}), 'X')                                         
			,KWISCIV_IDXS_LU  = IFNULL(LOWER(#{kwiscivIdxslu	,  jdbcType=VARCHAR}), 'X')            
			,KWISCIV_IDXS_PR  = IFNULL(LOWER(#{kwiscivIdxspr	,  jdbcType=VARCHAR}), 'X')            
			,KWISCIV_IDXS_WR  = IFNULL(LOWER(#{kwiscivIdxswr	,  jdbcType=VARCHAR}), 'X')            
			,KWISCIV_IDXS_PS  = IFNULL(LOWER(#{kwiscivIdxsps	,  jdbcType=VARCHAR}), 'X')            
			,KWISCIV_IDXS_ALLIQ = IFNULL(LOWER(#{kwiscivIdxsalliq , jdbcType=VARCHAR}), 'X')                                                      
			,KWISCIV_PERCNT_LU = IFNULL(LOWER(#{kwiscivPercntlu	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV_PERCNT_PR = IFNULL(LOWER(#{kwiscivPercntpr	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV_PERCNT_WR = IFNULL(LOWER(#{kwiscivPercntwr	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV_PERCNT_PS = IFNULL(LOWER(#{kwiscivPercntps	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV_PERCNT_ALLIQ = IFNULL(LOWER(#{kwiscivPercntalliq	,  jdbcType=VARCHAR}), 'X')                                                          
			,KWISCIV_CONFITVL_LU  = IFNULL(LOWER(#{kwiscivConfitvllu	,  jdbcType=VARCHAR}), 'X')                
			,KWISCIV_CONFITVL_PR  = IFNULL(LOWER(#{kwiscivConfitvlpr	,  jdbcType=VARCHAR}), 'X')                
			,KWISCIV_CONFITVL_WR  = IFNULL(LOWER(#{kwiscivConfitvlwr	,  jdbcType=VARCHAR}), 'X')                
			,KWISCIV_CONFITVL_PS  = IFNULL(LOWER(#{kwiscivConfitvlps	,  jdbcType=VARCHAR}), 'X')                
			,KWISCIV_CONFITVL_ALLIQ = IFNULL(LOWER(#{kwiscivConfitvlalliq , jdbcType=VARCHAR}), 'X')                                                           
			,KWISCIV_QD_LU = IFNULL(LOWER(#{kwiscivQdlu	, jdbcType=VARCHAR}), 'X')          
			,KWISCIV_QD_PR = IFNULL(LOWER(#{kwiscivQdpr	, jdbcType=VARCHAR}), 'X')          
			,KWISCIV_QD_WR = IFNULL(LOWER(#{kwiscivQdwr	, jdbcType=VARCHAR}), 'X')          
			,KWISCIV_QD_PS = IFNULL(LOWER(#{kwiscivQdps	, jdbcType=VARCHAR}), 'X')          
			,KWISCIV_QD_ALLIQ = IFNULL(LOWER(#{kwiscivQdalliq	, jdbcType=VARCHAR}), 'X')   
			
			,KWISCIV_STES = IFNULL(LOWER(#{kwiscivStes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SIOS = IFNULL(LOWER(#{kwiscivSios,jdbcType=VARCHAR}), 'x')
			,KWISCIV_VCOS = IFNULL(LOWER(#{kwiscivVcos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_INOS = IFNULL(LOWER(#{kwiscivInos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_BDOS = IFNULL(LOWER(#{kwiscivBdos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_MROS = IFNULL(LOWER(#{kwiscivMros,jdbcType=VARCHAR}), 'x')
			,KWISCIV_VPOS = IFNULL(LOWER(#{kwiscivVpos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_DSOS = IFNULL(LOWER(#{kwiscivDsos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_AROS = IFNULL(LOWER(#{kwiscivAros,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SSOS = IFNULL(LOWER(#{kwiscivSsos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_CDOS = IFNULL(LOWER(#{kwiscivCdos,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SIES = IFNULL(LOWER(#{kwiscivSies,jdbcType=VARCHAR}), 'x')
			,KWISCIV_VCES = IFNULL(LOWER(#{kwiscivVces,jdbcType=VARCHAR}), 'x')
			,KWISCIV_INES = IFNULL(LOWER(#{kwiscivInes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_BDES = IFNULL(LOWER(#{kwiscivBdes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_MRES = IFNULL(LOWER(#{kwiscivMres,jdbcType=VARCHAR}), 'x')
			,KWISCIV_VPES = IFNULL(LOWER(#{kwiscivVpes,jdbcType=VARCHAR}), 'x')
			,KWISCIV_DSES = IFNULL(LOWER(#{kwiscivDses,jdbcType=VARCHAR}), 'x')
			,KWISCIV_ARES = IFNULL(LOWER(#{kwiscivAres,jdbcType=VARCHAR}), 'x')
			,KWISCIV_SSES = IFNULL(LOWER(#{kwiscivSses,jdbcType=VARCHAR}), 'x')
			,KWISCIV_CDES = IFNULL(LOWER(#{kwiscivCdes,jdbcType=VARCHAR}), 'x')
			
			,KWISCIV2_ESAD_LU = IFNULL(LOWER(#{kwisciv2Esadlu	, jdbcType=VARCHAR}), 'X')
			,KWISCIV2_ESAD_PR = IFNULL(LOWER(#{kwisciv2Esadpr	, jdbcType=VARCHAR}), 'X')              
			,KWISCIV2_ESAD_WR = IFNULL(LOWER(#{kwisciv2Esadwr	, jdbcType=VARCHAR}), 'X')              
			,KWISCIV2_ESAD_PS = IFNULL(LOWER(#{kwisciv2Esadps	, jdbcType=VARCHAR}), 'X')              
			,KWISCIV2_ESAD_ALLIQ = IFNULL(LOWER(#{kwisciv2Esadalliq	, jdbcType=VARCHAR}), 'X')                                                 
			,KWISCIV2_IDXS_LU = IFNULL(LOWER(#{kwisciv2Idxslu	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV2_IDXS_PR = IFNULL(LOWER(#{kwisciv2Idxspr	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV2_IDXS_WR = IFNULL(LOWER(#{kwisciv2Idxswr	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV2_IDXS_PS = IFNULL(LOWER(#{kwisciv2Idxsps	,  jdbcType=VARCHAR}), 'X')              
			,KWISCIV2_IDXS_ALLIQ = IFNULL(LOWER(#{kwisciv2Idxsalliq	, jdbcType=VARCHAR}), 'X')                                                       
			,KWISCIV2_PERCNT_LU = IFNULL(LOWER(#{kwisciv2Percntlu	, jdbcType=VARCHAR}), 'X')                
			,KWISCIV2_PERCNT_PR = IFNULL(LOWER(#{kwisciv2Percntpr	, jdbcType=VARCHAR}), 'X')                
			,KWISCIV2_PERCNT_WR = IFNULL(LOWER(#{kwisciv2Percntwr	, jdbcType=VARCHAR}), 'X')                
			,KWISCIV2_PERCNT_PS = IFNULL(LOWER(#{kwisciv2Percntps	, jdbcType=VARCHAR}), 'X')                
			,KWISCIV2_PERCNT_ALLIQ  = IFNULL(LOWER(#{kwisciv2Percntalliq , jdbcType=VARCHAR}), 'X')                                                           
			,KWISCIV2_CONFITVL_LU = IFNULL(LOWER(#{kwisciv2Confitvllu , jdbcType=VARCHAR}), 'X')                 
			,KWISCIV2_CONFITVL_PR = IFNULL(LOWER(#{kwisciv2Confitvlpr , jdbcType=VARCHAR}), 'X')                 
			,KWISCIV2_CONFITVL_WR = IFNULL(LOWER(#{kwisciv2Confitvlwr , jdbcType=VARCHAR}), 'X')                 
			,KWISCIV2_CONFITVL_PS = IFNULL(LOWER(#{kwisciv2Confitvlps , jdbcType=VARCHAR}), 'X')                 
			,KWISCIV2_CONFITVL_ALLIQ = IFNULL(LOWER(#{kwisciv2Confitvlalliq, jdbcType=VARCHAR}), 'X')     
			
			,KSADS_BLUES = IFNULL(LOWER(#{ksadsBlues,jdbcType=VARCHAR}), 'x')
			,KSADS_ANGER = IFNULL(LOWER(#{ksadsAnger,jdbcType=VARCHAR}), 'x')
			,KSADS_LOSSM = IFNULL(LOWER(#{ksadsLossm,jdbcType=VARCHAR}), 'x')
			,KSADS_DEATH = IFNULL(LOWER(#{ksadsDeath,jdbcType=VARCHAR}), 'x')
			,KSADS_SUICIDE = IFNULL(LOWER(#{ksadsSuicide,jdbcType=VARCHAR}), 'x')
			,KSADS_SUI_SEVERITY = IFNULL(LOWER(#{ksadsSuiSeverity,jdbcType=VARCHAR}), 'x')
			,KSADS_SUI_CRITICALITY = IFNULL(LOWER(#{ksadsSuiCriticality,jdbcType=VARCHAR}), 'x')
			,KSADS_SELFHARM = IFNULL(LOWER(#{ksadsSelfharm,jdbcType=VARCHAR}), 'x')
			,KSADS_UPLIFT = IFNULL(LOWER(#{ksadsUplift,jdbcType=VARCHAR}), 'x')
			,KSADS_DEC_SLEEP = IFNULL(LOWER(#{ksadsDecSleep,jdbcType=VARCHAR}), 'x')
			,KSADS_GOAL_ACTIVITY = IFNULL(LOWER(#{ksadsGoalActivity,jdbcType=VARCHAR}), 'x')
			,KSADS_GALLOP = IFNULL(LOWER(#{ksadsGallop,jdbcType=VARCHAR}), 'x')
			,KSADS_HALLUCINATION = IFNULL(LOWER(#{ksadsHallucination,jdbcType=VARCHAR}), 'x')
			,KSADS_DELUSION = IFNULL(LOWER(#{ksadsDelusion,jdbcType=VARCHAR}), 'x')
			,KSADS_PANIC = IFNULL(LOWER(#{ksadsPanic,jdbcType=VARCHAR}), 'x')
			,KSADS_SEPARATION_FEAR = IFNULL(LOWER(#{ksadsSeparationFear,jdbcType=VARCHAR}), 'x')
			,KSADS_ATTACH_FEAR = IFNULL(LOWER(#{ksadsAttachFear,jdbcType=VARCHAR}), 'x')
			,KSADS_REJECT_SCHOOL = IFNULL(LOWER(#{ksadsRejectSchool,jdbcType=VARCHAR}), 'x')
			,KSADS_SLEEP_FEAR = IFNULL(LOWER(#{ksadsSleepFear,jdbcType=VARCHAR}), 'x')
			,KSADS_ALONE_FEAR = IFNULL(LOWER(#{ksadsAloneFear,jdbcType=VARCHAR}), 'x')
			,KSADS_ATROPHY = IFNULL(LOWER(#{ksadsAtrophy,jdbcType=VARCHAR}), 'x')
			,KSADS_SITUATION_FEAR = IFNULL(LOWER(#{ksadsSituationFear,jdbcType=VARCHAR}), 'x')
			,KSADS_PAIN = IFNULL(LOWER(#{ksadsPain,jdbcType=VARCHAR}), 'x')
			,KSADS_AVOID = IFNULL(LOWER(#{ksadsAvoid,jdbcType=VARCHAR}), 'x')
			,KSADS_FUTURE_WORRY = IFNULL(LOWER(#{ksadsFutureWorry,jdbcType=VARCHAR}), 'x')
			,KSADS_BODY_COMPLAIN = IFNULL(LOWER(#{ksadsBodyComplain,jdbcType=VARCHAR}), 'x')
			,KSADS_SELF_CONSCIOUS = IFNULL(LOWER(#{ksadsSelfConsious,jdbcType=VARCHAR}), 'x')
			,KSADS_TENSION = IFNULL(LOWER(#{ksadsTension,jdbcType=VARCHAR}), 'x')
			,KSADS_COMPLUSIVE_ACT = IFNULL(LOWER(#{ksadsComplusiveAct,jdbcType=VARCHAR}), 'x')
			,KSADS_COMPLUSIVE_THINK = IFNULL(LOWER(#{ksadsComplusiveThink,jdbcType=VARCHAR}), 'x')
			,KSADS_PEE_NIGHT = IFNULL(LOWER(#{ksadsPeeNight,jdbcType=VARCHAR}), 'x')
			,KSADS_PEE_DAY = IFNULL(LOWER(#{ksadsPeeDay,jdbcType=VARCHAR}), 'x')
			,KSADS_PEE_TOTAL = IFNULL(LOWER(#{ksadsPeeTotal,jdbcType=VARCHAR}), 'x')
			,KSADS_SHIT_NIGHT = IFNULL(LOWER(#{ksadsShitNight,jdbcType=VARCHAR}), 'x')
			,KSADS_SHIT_DAY = IFNULL(LOWER(#{ksadsShitDay,jdbcType=VARCHAR}), 'x')
			,KSADS_SHIT_TOTAL = IFNULL(LOWER(#{ksadsShitTotal,jdbcType=VARCHAR}), 'x')
			,KSADS_FAT_FEAR = IFNULL(LOWER(#{ksadsFatFear,jdbcType=VARCHAR}), 'x')
			,KSADS_LOW_WEIGHT = IFNULL(LOWER(#{ksadsLowWeight,jdbcType=VARCHAR}), 'x')
			,KSADS_WEIGHT_LOSS = IFNULL(LOWER(#{ksadsWeightLoss,jdbcType=VARCHAR}), 'x')
			,KSADS_VORACITY = IFNULL(LOWER(#{ksadsVoracity,jdbcType=VARCHAR}), 'x')
			,KSADS_ADHD_CF = IFNULL(LOWER(#{ksadsAdhdCf,jdbcType=VARCHAR}), 'x')
			,KSADS_ADHD_ED = IFNULL(LOWER(#{ksadsAdhdEd,jdbcType=VARCHAR}), 'x')
			,KSADS_ADHD_SF = IFNULL(LOWER(#{ksadsAdhdSf,jdbcType=VARCHAR}), 'x')
			,KSADS_ADHD_IMPULSIVITY = IFNULL(LOWER(#{ksadsAdhdImpulsivity,jdbcType=VARCHAR}), 'x')
			,KSADS_ODD_ANGRY = IFNULL(LOWER(#{ksadsOddAngry,jdbcType=VARCHAR}), 'x')
			,KSADS_ODD_AA = IFNULL(LOWER(#{ksadsOddAa,jdbcType=VARCHAR}), 'x')
			,KSADS_ODD_NOTRULES = IFNULL(LOWER(#{ksadsOddNotrules,jdbcType=VARCHAR}), 'x')
			,KSADS_CD_LIE = IFNULL(LOWER(#{ksadsCdLie,jdbcType=VARCHAR}), 'x')
			,KSADS_CD_TRUANCY = IFNULL(LOWER(#{ksadsCdTruancy,jdbcType=VARCHAR}), 'x')
			,KSADS_CD_FIGHT = IFNULL(LOWER(#{ksadsCdFight,jdbcType=VARCHAR}), 'x')
			,KSADS_CD_TORMENT = IFNULL(LOWER(#{ksadsCdTorment,jdbcType=VARCHAR}), 'x')
			,KSADS_CD_THIEVERY = IFNULL(LOWER(#{ksadsCdThievery,jdbcType=VARCHAR}), 'x')
			,KSADS_EXERCISE_TIC = IFNULL(LOWER(#{ksadsExerciseTic,jdbcType=VARCHAR}), 'x')
			,KSADS_EXERCISE_VOICE = IFNULL(LOWER(#{ksadsExerciseVoice,jdbcType=VARCHAR}), 'x')
			,GAS = IFNULL(LOWER(#{gas,jdbcType=VARCHAR}), 'x')
			,ADHDRQ1_MISTAKE = IFNULL(LOWER(#{adhdrq1Mistake,jdbcType=VARCHAR}), 'x')
			,ADHDRQ2_NOTLISTEN = IFNULL(LOWER(#{adhdrq2Notlisten,jdbcType=VARCHAR}), 'x')
			,ADHDRQ3_FOLLOW_DIFF = IFNULL(LOWER(#{adhdrq3FollowDiff,jdbcType=VARCHAR}), 'x')
			,ADHDRQ4_ARRANGE_DIFF = IFNULL(LOWER(#{adhdrq4ArrangeDiff,jdbcType=VARCHAR}), 'x')
			,ADHDRQ5_ASSIGN_AVOID = IFNULL(LOWER(#{adhdrq5AssignAvoid,jdbcType=VARCHAR}), 'x')
			,ADHDRQ6_LOST_ITEM = IFNULL(LOWER(#{adhdrq6LostItem,jdbcType=VARCHAR}), 'x')
			,ADHDRQ7_FORGETFULNESS = IFNULL(LOWER(#{adhdrq7Forgetfulness,jdbcType=VARCHAR}), 'x')
			,ADHDRQ8_UNREST = IFNULL(LOWER(#{adhdrq8Unrest,jdbcType=VARCHAR}), 'x')
			,ADHDRQ9_OVERRUN = IFNULL(LOWER(#{adhdrq9Overrun,jdbcType=VARCHAR}), 'x')
			,ADHDRQ10_ENDLESS_ACT = IFNULL(LOWER(#{adhdrq10EndlessAct,jdbcType=VARCHAR}), 'x')
			,ADHDRQ11_SILENT_DIFF = IFNULL(LOWER(#{adhdrq11SilentDiff,jdbcType=VARCHAR}), 'x')
			,ADHDRQ12_SUDDEN_ANS = IFNULL(LOWER(#{adhdrq12SuddenAns,jdbcType=VARCHAR}), 'x')
			,ADHDRQ13_WAIT_DIFF = IFNULL(LOWER(#{adhdrq13WaitDiff,jdbcType=VARCHAR}), 'x')
			,ADHDRQ14_INTERRUPT = IFNULL(LOWER(#{adhdrq14Interrupt,jdbcType=VARCHAR}), 'x')
			,ADHDRQ15_FICKLE = IFNULL(LOWER(#{adhdrq15Fickle,jdbcType=VARCHAR}), 'x')
			,ADHDRQ16_CHATTER = IFNULL(LOWER(#{adhdrq16Chatter,jdbcType=VARCHAR}), 'x')
			,ADHDRQ17_DANGER_ACT = IFNULL(LOWER(#{adhdrq17DangerAct,jdbcType=VARCHAR}), 'x')
			,DIAGNOSIS = IFNULL(LOWER(#{diagnosis,jdbcType=VARCHAR}), 'x')
			,DIAGNOSIS_ETC = IFNULL(LOWER(#{diagnosisEtc,jdbcType=VARCHAR}), 'x')
			,TIC_APPENDIX = IFNULL(LOWER(#{ticAppendix,jdbcType=VARCHAR}), 'x')
			,SACT_TIC1_CE = IFNULL(LOWER(#{sactTic1Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC1_MSP = IFNULL(LOWER(#{sactTic1Msp,jdbcType=VARCHAR}), 'x')
			,SACT_TIC2_CE = IFNULL(LOWER(#{sactTic2Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC2_MSP = IFNULL(LOWER(#{sactTic2Msp,jdbcType=VARCHAR}), 'x')
			,SACT_TIC3_CE = IFNULL(LOWER(#{sactTic3Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC3_MSP = IFNULL(LOWER(#{sactTic3Msp,jdbcType=VARCHAR}), 'x')
			,SACT_TIC4_CE = IFNULL(LOWER(#{sactTic4Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC4_MSP = IFNULL(LOWER(#{sactTic4Msp,jdbcType=VARCHAR}), 'x')
			,SACT_TIC5_CE = IFNULL(LOWER(#{sactTic5Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC5_MSP = IFNULL(LOWER(#{sactTic5Msp,jdbcType=VARCHAR}), 'x')
			,SACT_TIC6_CE = IFNULL(LOWER(#{sactTic6Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC6_MSP = IFNULL(LOWER(#{sactTic6Msp,jdbcType=VARCHAR}), 'x')
			,SACT_TIC7_CE = IFNULL(LOWER(#{sactTic7Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC7_MSP = IFNULL(LOWER(#{sactTic7Msp,jdbcType=VARCHAR}), 'x')
			,SACT_TIC8_CE = IFNULL(LOWER(#{sactTic8Ce,jdbcType=VARCHAR}), 'x')
			,SACT_TIC8_MSP = IFNULL(LOWER(#{sactTic8Msp,jdbcType=VARCHAR}), 'x')
			,CACT_TIC1_CE = IFNULL(LOWER(#{cactTic1Ce,jdbcType=VARCHAR}), 'x')
			,CACT_TIC1_MSP = IFNULL(LOWER(#{cactTic1Msp,jdbcType=VARCHAR}), 'x')
			,CACT_TIC2_CE = IFNULL(LOWER(#{cactTic2Ce,jdbcType=VARCHAR}), 'x')
			,CACT_TIC2_MSP = IFNULL(LOWER(#{cactTic2Msp,jdbcType=VARCHAR}), 'x')
			,CACT_TIC3_CE = IFNULL(LOWER(#{cactTic3Ce,jdbcType=VARCHAR}), 'x')
			,CACT_TIC3_MSP = IFNULL(LOWER(#{cactTic3Msp,jdbcType=VARCHAR}), 'x')
			,CACT_TIC4_CE = IFNULL(LOWER(#{cactTic4Ce,jdbcType=VARCHAR}), 'x')
			,CACT_TIC4_MSP = IFNULL(LOWER(#{cactTic4Msp,jdbcType=VARCHAR}), 'x')
			,CACT_TIC5_CE = IFNULL(LOWER(#{cactTic5Ce,jdbcType=VARCHAR}), 'x')
			,CACT_TIC5_MSP = IFNULL(LOWER(#{cactTic5Msp,jdbcType=VARCHAR}), 'x')
			,SVOICE_TIC1_CE = IFNULL(LOWER(#{svoiceTic1Ce,jdbcType=VARCHAR}), 'x')
			,SVOICE_TIC1_MSP = IFNULL(LOWER(#{svoiceTic1Msp,jdbcType=VARCHAR}), 'x')
			,SVOICE_TIC2_CE = IFNULL(LOWER(#{svoiceTic2Ce,jdbcType=VARCHAR}), 'x')
			,SVOICE_TIC2_MSP = IFNULL(LOWER(#{svoiceTic2Msp,jdbcType=VARCHAR}), 'x')
			,SVOICE_TIC3_CE = IFNULL(LOWER(#{svoiceTic3Ce,jdbcType=VARCHAR}), 'x')
			,SVOICE_TIC3_MSP = IFNULL(LOWER(#{svoiceTic3Msp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC1_CE = IFNULL(LOWER(#{cvoiceTic1Ce,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC1_MSP = IFNULL(LOWER(#{cvoiceTic1Msp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC2_CE = IFNULL(LOWER(#{cvoiceTic2Ce,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC2_MSP = IFNULL(LOWER(#{cvoiceTic2Msp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC3_CE = IFNULL(LOWER(#{cvoiceTic3Ce,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC3_MSP = IFNULL(LOWER(#{cvoiceTic3Msp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC4_CE = IFNULL(LOWER(#{cvoiceTic4Ce,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC4_MSP = IFNULL(LOWER(#{cvoiceTic4Msp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC5_CE = IFNULL(LOWER(#{cvoiceTic5Ce,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC5_MSP = IFNULL(LOWER(#{cvoiceTic5Msp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC6A_CE = IFNULL(LOWER(#{cvoiceTic6aCe,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC6A_MSP = IFNULL(LOWER(#{cvoiceTic6aMsp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC6B_CE = IFNULL(LOWER(#{cvoiceTic6bCe,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC6B_MSP = IFNULL(LOWER(#{cvoiceTic6bMsp,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC6C_CE = IFNULL(LOWER(#{cvoiceTic6cCe,jdbcType=VARCHAR}), 'x')
			,CVOICE_TIC6C_MSP = IFNULL(LOWER(#{cvoiceTic6cMsp,jdbcType=VARCHAR}), 'x')
			,TOURETTE_7A_CE = IFNULL(LOWER(#{tourette7aCe,jdbcType=VARCHAR}), 'x')
			,TOURETTE_7A_MSP = IFNULL(LOWER(#{tourette7aMsp,jdbcType=VARCHAR}), 'x')
			,TOURETTE_7B_CE = IFNULL(LOWER(#{tourette7bCe,jdbcType=VARCHAR}), 'x')
			,TOURETTE_7B_MSP = IFNULL(LOWER(#{tourette7bMsp,jdbcType=VARCHAR}), 'x')
			,CHRONIC_TIC8A_CE = IFNULL(LOWER(#{chronicTic8aCe,jdbcType=VARCHAR}), 'x')
			,CHRONIC_TIC8A_MSP = IFNULL(LOWER(#{chronicTic8aMsp,jdbcType=VARCHAR}), 'x')
			,CHRONIC_TIC8B_CE = IFNULL(LOWER(#{chronicTic8bCe,jdbcType=VARCHAR}), 'x')
			,CHRONIC_TIC8B_MSP = IFNULL(LOWER(#{chronicTic8bMsp,jdbcType=VARCHAR}), 'x')
			,DAILY_TIC9A_CE = IFNULL(LOWER(#{dailyTic9aCe,jdbcType=VARCHAR}), 'x')
			,DAILY_TIC9A_MSP = IFNULL(LOWER(#{dailyTic9aMsp,jdbcType=VARCHAR}), 'x')
			,DAILY_TIC9B_CE = IFNULL(LOWER(#{dailyTic9bCe,jdbcType=VARCHAR}), 'x')
			,DAILY_TIC9B_MSP = IFNULL(LOWER(#{dailyTic9bMsp,jdbcType=VARCHAR}), 'x')
			,REMARKS =IFNULL(LOWER(#{remarks,jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<select id="selectNeuropsyS1ListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT B.*
			FROM
				(SELECT
					A.*,
					CONCAT(
						TIC_SUBTYPE,
						FSIQ
						,KEDIWAIS_ARITH_OS
						,KEDIWAIS_ORDER_OS
						,KEDIWAIS_PIECE_OS
						,KEDIWAIS_VOCA_ES
						,KEDIWAIS_ARITH_ES
						,KEDIWAIS_ORDER_ES
						,KEDIWAIS_PIECE_ES
						,KWISCIV_COS
						,KWISCIV_VOS
						,KWISCIV_UOS
						,KWISCIV_POS
						,KWISCIV_CPOS
						,KWISCIV_MOS
						,KWISCIV_NOS
						,KWISCIV_SCOS
						,KWISCIV_SOS
						,KWISCIV_STOS
						,KWISCIV_CES
						,KWISCIV_VES
						,KWISCIV_UES
						,KWISCIV_PES
						,KWISCIV_CPES
						,KWISCIV_MES
						,KWISCIV_NES
						,KWISCIV_SCES
						,KWISCIV_SES
						,KWISCIV_STES
						,KWISCIV_SIOS
						,KWISCIV_VCOS
						,KWISCIV_INOS
						,KWISCIV_BDOS
						,KWISCIV_MROS
						,KWISCIV_VPOS
						,KWISCIV_DSOS
						,KWISCIV_AROS
						,KWISCIV_SSOS
						,KWISCIV_CDOS
						,KWISCIV_SIES
						,KWISCIV_VCES
						,KWISCIV_INES
						,KWISCIV_BDES
						,KWISCIV_MRES
						,KWISCIV_VPES
						,KWISCIV_DSES
						,KWISCIV_ARES
						,KWISCIV_SSES
						,KWISCIV_CDES
						,KSADS_BLUES
						,KSADS_ANGER
						,KSADS_LOSSM
						,KSADS_DEATH
						,KSADS_SUICIDE
						,KSADS_SUI_SEVERITY
						,KSADS_SUI_CRITICALITY
						,KSADS_SELFHARM
						,KSADS_UPLIFT
						,KSADS_DEC_SLEEP
						,KSADS_GOAL_ACTIVITY
						,KSADS_GALLOP
						,KSADS_HALLUCINATION
						,KSADS_DELUSION
						,KSADS_PANIC
						,KSADS_SEPARATION_FEAR
						,KSADS_ATTACH_FEAR
						,KSADS_REJECT_SCHOOL
						,KSADS_SLEEP_FEAR
						,KSADS_ALONE_FEAR
						,KSADS_ATROPHY
						,KSADS_SITUATION_FEAR
						,KSADS_PAIN
						,KSADS_AVOID
						,KSADS_FUTURE_WORRY
						,KSADS_BODY_COMPLAIN
						,KSADS_SELF_CONSCIOUS
						,KSADS_TENSION
						,KSADS_COMPLUSIVE_ACT
						,KSADS_COMPLUSIVE_THINK
						,KSADS_PEE_NIGHT
						,KSADS_PEE_DAY
						,KSADS_PEE_TOTAL
						,KSADS_SHIT_NIGHT
						,KSADS_SHIT_DAY
						,KSADS_SHIT_TOTAL
						,KSADS_FAT_FEAR
						,KSADS_LOW_WEIGHT
						,KSADS_WEIGHT_LOSS
						,KSADS_VORACITY
						,KSADS_ADHD_CF
						,KSADS_ADHD_ED
						,KSADS_ADHD_SF
						,KSADS_ADHD_IMPULSIVITY
						,KSADS_ODD_ANGRY
						,KSADS_ODD_AA
						,KSADS_ODD_NOTRULES
						,KSADS_CD_LIE
						,KSADS_CD_TRUANCY
						,KSADS_CD_FIGHT
						,KSADS_CD_TORMENT
						,KSADS_CD_THIEVERY
						,KSADS_EXERCISE_TIC
						,KSADS_EXERCISE_VOICE
						,GAS
						,ADHDRQ1_MISTAKE
						,ADHDRQ2_NOTLISTEN
						,ADHDRQ3_FOLLOW_DIFF
						,ADHDRQ4_ARRANGE_DIFF
						,ADHDRQ5_ASSIGN_AVOID
						,ADHDRQ6_LOST_ITEM
						,ADHDRQ7_FORGETFULNESS
						,ADHDRQ8_UNREST
						,ADHDRQ9_OVERRUN
						,ADHDRQ10_ENDLESS_ACT
						,ADHDRQ11_SILENT_DIFF
						,ADHDRQ12_SUDDEN_ANS
						,ADHDRQ13_WAIT_DIFF
						,ADHDRQ14_INTERRUPT
						,ADHDRQ15_FICKLE
						,ADHDRQ16_CHATTER
						,ADHDRQ17_DANGER_ACT
						,DIAGNOSIS
						,DIAGNOSIS_ETC
						,SACT_TIC1_CE
						,SACT_TIC1_MSP
						,SACT_TIC2_CE
						,SACT_TIC2_MSP
						,SACT_TIC3_CE
						,SACT_TIC3_MSP
						,SACT_TIC4_CE
						,SACT_TIC4_MSP
						,SACT_TIC5_CE
						,SACT_TIC5_MSP
						,SACT_TIC6_CE
						,SACT_TIC6_MSP
						,SACT_TIC7_CE
						,SACT_TIC7_MSP
						,SACT_TIC8_CE
						,SACT_TIC8_MSP
						,CACT_TIC1_CE
						,CACT_TIC1_MSP
						,CACT_TIC2_CE
						,CACT_TIC2_MSP
						,CACT_TIC3_CE
						,CACT_TIC3_MSP
						,CACT_TIC4_CE
						,CACT_TIC4_MSP
						,CACT_TIC5_CE
						,CACT_TIC5_MSP
						,SVOICE_TIC1_CE
						,SVOICE_TIC1_MSP
						,SVOICE_TIC2_CE
						,SVOICE_TIC2_MSP
						,SVOICE_TIC3_CE
						,SVOICE_TIC3_MSP
						,CVOICE_TIC1_CE
						,CVOICE_TIC1_MSP
						,CVOICE_TIC2_CE
						,CVOICE_TIC2_MSP
						,CVOICE_TIC3_CE
						,CVOICE_TIC3_MSP
						,CVOICE_TIC4_CE
						,CVOICE_TIC4_MSP
						,CVOICE_TIC5_CE
						,CVOICE_TIC5_MSP
						,CVOICE_TIC6A_CE
						,CVOICE_TIC6A_MSP
						,CVOICE_TIC6B_CE
						,CVOICE_TIC6B_MSP
						,CVOICE_TIC6C_CE
						,CVOICE_TIC6C_MSP
						,TOURETTE_7A_CE
						,TOURETTE_7A_MSP
						,TOURETTE_7B_CE
						,TOURETTE_7B_MSP
						,CHRONIC_TIC8A_CE
						,CHRONIC_TIC8A_MSP
						,CHRONIC_TIC8B_CE
						,CHRONIC_TIC8B_MSP
						,DAILY_TIC9A_CE
						,DAILY_TIC9A_MSP
						,DAILY_TIC9B_CE
						,DAILY_TIC9B_MSP) ALL_CHK
					FROM (
						SELECT
							S1.TARGET_ID,
							TM.TARGET_DIS_ID,
							DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
							CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
							PTC.CLASS_CD_DTL_NM PROTOCOL,
							TM.BIRTH_YM,
							PT.PERFORM_NM PERFORM_CNT_NM,
							PT.PERFORM_CNT,
							FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) AGE,
							CONCAT(SUBSTR(S1_EXEC_DATE,1,4) ,'-',SUBSTR(S1_EXEC_DATE,5,2),'-',SUBSTR(S1_EXEC_DATE,7,2)) S1_EXEC_DATE,
							CASE WHEN TIC_SUBTYPE = '#' THEN '-' WHEN TIC_SUBTYPE = '' THEN 'x' ELSE TIC_SUBTYPE END TIC_SUBTYPE,
							CASE WHEN FSIQ = '#' THEN '-' WHEN FSIQ = '' THEN 'x' ELSE FSIQ END FSIQ,
							<!-- CASE WHEN KEDIWAIS_REF = '#' THEN '-' WHEN KEDIWAIS_REF IS NULL OR KEDIWAIS_REF = '' THEN 'x' ELSE KEDIWAIS_REF END KEDIWAIS_REF, -->
							CASE WHEN KEDIWAIS_VOCA_OS = '#' THEN '-' WHEN KEDIWAIS_VOCA_OS IS NULL OR KEDIWAIS_VOCA_OS = '' THEN 'x' ELSE KEDIWAIS_VOCA_OS END KEDIWAIS_VOCA_OS,
							CASE WHEN KEDIWAIS_ARITH_OS = '#' THEN '-' WHEN KEDIWAIS_ARITH_OS IS NULL OR KEDIWAIS_ARITH_OS = '' THEN 'x' ELSE KEDIWAIS_ARITH_OS END KEDIWAIS_ARITH_OS,
							CASE WHEN KEDIWAIS_ORDER_OS = '#' THEN '-' WHEN KEDIWAIS_ORDER_OS IS NULL OR KEDIWAIS_ORDER_OS = '' THEN 'x' ELSE KEDIWAIS_ORDER_OS END KEDIWAIS_ORDER_OS,
							CASE WHEN KEDIWAIS_PIECE_OS = '#' THEN '-' WHEN KEDIWAIS_PIECE_OS IS NULL OR KEDIWAIS_PIECE_OS = '' THEN 'x' ELSE KEDIWAIS_PIECE_OS END KEDIWAIS_PIECE_OS,
							CASE WHEN KEDIWAIS_VOCA_ES = '#' THEN '-' WHEN KEDIWAIS_VOCA_ES IS NULL OR KEDIWAIS_VOCA_ES = '' THEN 'x' ELSE KEDIWAIS_VOCA_ES END KEDIWAIS_VOCA_ES,
							CASE WHEN KEDIWAIS_ARITH_ES = '#' THEN '-' WHEN KEDIWAIS_ARITH_ES IS NULL OR KEDIWAIS_ARITH_ES = '' THEN 'x' ELSE KEDIWAIS_ARITH_ES END KEDIWAIS_ARITH_ES,
							CASE WHEN KEDIWAIS_ORDER_ES = '#' THEN '-' WHEN KEDIWAIS_ORDER_ES IS NULL OR KEDIWAIS_ORDER_ES = '' THEN 'x' ELSE KEDIWAIS_ORDER_ES END KEDIWAIS_ORDER_ES,
							CASE WHEN KEDIWAIS_PIECE_ES = '#' THEN '-' WHEN KEDIWAIS_PIECE_ES IS NULL OR KEDIWAIS_PIECE_ES = '' THEN 'x' ELSE KEDIWAIS_PIECE_ES END KEDIWAIS_PIECE_ES,
							CASE WHEN KWISCIV_COS = '#' THEN '-' WHEN KWISCIV_COS IS NULL OR KWISCIV_COS = '' THEN 'x' ELSE KWISCIV_COS END KWISCIV_COS,
							CASE WHEN KWISCIV_VOS = '#' THEN '-' WHEN KWISCIV_VOS IS NULL OR KWISCIV_VOS = '' THEN 'x' ELSE KWISCIV_VOS END KWISCIV_VOS,
							CASE WHEN KWISCIV_UOS = '#' THEN '-' WHEN KWISCIV_UOS IS NULL OR KWISCIV_UOS = '' THEN 'x' ELSE KWISCIV_UOS END KWISCIV_UOS,
							CASE WHEN KWISCIV_POS = '#' THEN '-' WHEN KWISCIV_POS IS NULL OR KWISCIV_POS = '' THEN 'x' ELSE KWISCIV_POS END KWISCIV_POS,
							CASE WHEN KWISCIV_CPOS = '#' THEN '-' WHEN KWISCIV_CPOS IS NULL OR KWISCIV_CPOS = '' THEN 'x' ELSE KWISCIV_CPOS END KWISCIV_CPOS,
							CASE WHEN KWISCIV_MOS = '#' THEN '-' WHEN KWISCIV_MOS IS NULL OR KWISCIV_MOS = '' THEN 'x' ELSE KWISCIV_MOS END KWISCIV_MOS,
							CASE WHEN KWISCIV_NOS = '#' THEN '-' WHEN KWISCIV_NOS IS NULL OR KWISCIV_NOS = '' THEN 'x' ELSE KWISCIV_NOS END KWISCIV_NOS,
							CASE WHEN KWISCIV_SCOS = '#' THEN '-' WHEN KWISCIV_SCOS IS NULL OR KWISCIV_SCOS = '' THEN 'x' ELSE KWISCIV_SCOS END KWISCIV_SCOS,
							CASE WHEN KWISCIV_SOS = '#' THEN '-' WHEN KWISCIV_SOS IS NULL OR KWISCIV_SOS = '' THEN 'x' ELSE KWISCIV_SOS END KWISCIV_SOS,
							CASE WHEN KWISCIV_STOS = '#' THEN '-' WHEN KWISCIV_STOS IS NULL OR KWISCIV_STOS = '' THEN 'x' ELSE KWISCIV_STOS END KWISCIV_STOS,
							CASE WHEN KWISCIV_CES = '#' THEN '-' WHEN KWISCIV_CES IS NULL OR KWISCIV_CES = '' THEN 'x' ELSE KWISCIV_CES END KWISCIV_CES,
							CASE WHEN KWISCIV_VES = '#' THEN '-' WHEN KWISCIV_VES IS NULL OR KWISCIV_VES = '' THEN 'x' ELSE KWISCIV_VES END KWISCIV_VES,
							CASE WHEN KWISCIV_UES = '#' THEN '-' WHEN KWISCIV_UES IS NULL OR KWISCIV_UES = '' THEN 'x' ELSE KWISCIV_UES END KWISCIV_UES,
							CASE WHEN KWISCIV_PES = '#' THEN '-' WHEN KWISCIV_PES IS NULL OR KWISCIV_PES = '' THEN 'x' ELSE KWISCIV_PES END KWISCIV_PES,
							CASE WHEN KWISCIV_CPES = '#' THEN '-' WHEN KWISCIV_CPES IS NULL OR KWISCIV_CPES = '' THEN 'x' ELSE KWISCIV_CPES END KWISCIV_CPES,
							CASE WHEN KWISCIV_MES = '#' THEN '-' WHEN KWISCIV_MES IS NULL OR KWISCIV_MES = '' THEN 'x' ELSE KWISCIV_MES END KWISCIV_MES,
							CASE WHEN KWISCIV_NES = '#' THEN '-' WHEN KWISCIV_NES IS NULL OR KWISCIV_NES = '' THEN 'x' ELSE KWISCIV_NES END KWISCIV_NES,
							CASE WHEN KWISCIV_SCES = '#' THEN '-' WHEN KWISCIV_SCES IS NULL OR KWISCIV_SCES = '' THEN 'x' ELSE KWISCIV_SCES END KWISCIV_SCES,
							CASE WHEN KWISCIV_SES = '#' THEN '-' WHEN KWISCIV_SES IS NULL OR KWISCIV_SES = '' THEN 'x' ELSE KWISCIV_SES END KWISCIV_SES,
							CASE WHEN KWISCIV_STES = '#' THEN '-' WHEN KWISCIV_STES IS NULL OR KWISCIV_STES = '' THEN 'x' ELSE KWISCIV_STES END KWISCIV_STES,
							CASE WHEN KWISCIV_SIOS = '#' THEN '-' WHEN KWISCIV_SIOS IS NULL OR KWISCIV_SIOS = '' THEN 'x' ELSE KWISCIV_SIOS END KWISCIV_SIOS,
							CASE WHEN KWISCIV_VCOS = '#' THEN '-' WHEN KWISCIV_VCOS IS NULL OR KWISCIV_VCOS = '' THEN 'x' ELSE KWISCIV_VCOS END KWISCIV_VCOS,
							CASE WHEN KWISCIV_INOS = '#' THEN '-' WHEN KWISCIV_INOS IS NULL OR KWISCIV_INOS = '' THEN 'x' ELSE KWISCIV_INOS END KWISCIV_INOS,
							CASE WHEN KWISCIV_BDOS = '#' THEN '-' WHEN KWISCIV_BDOS IS NULL OR KWISCIV_BDOS = '' THEN 'x' ELSE KWISCIV_BDOS END KWISCIV_BDOS,
							CASE WHEN KWISCIV_MROS = '#' THEN '-' WHEN KWISCIV_MROS IS NULL OR KWISCIV_MROS = '' THEN 'x' ELSE KWISCIV_MROS END KWISCIV_MROS,
							CASE WHEN KWISCIV_VPOS = '#' THEN '-' WHEN KWISCIV_VPOS IS NULL OR KWISCIV_VPOS = '' THEN 'x' ELSE KWISCIV_VPOS END KWISCIV_VPOS,
							CASE WHEN KWISCIV_DSOS = '#' THEN '-' WHEN KWISCIV_DSOS IS NULL OR KWISCIV_DSOS = '' THEN 'x' ELSE KWISCIV_DSOS END KWISCIV_DSOS,
							CASE WHEN KWISCIV_AROS = '#' THEN '-' WHEN KWISCIV_AROS IS NULL OR KWISCIV_AROS = '' THEN 'x' ELSE KWISCIV_AROS END KWISCIV_AROS,
							CASE WHEN KWISCIV_SSOS = '#' THEN '-' WHEN KWISCIV_SSOS IS NULL OR KWISCIV_SSOS = '' THEN 'x' ELSE KWISCIV_SSOS END KWISCIV_SSOS,
							CASE WHEN KWISCIV_CDOS = '#' THEN '-' WHEN KWISCIV_CDOS IS NULL OR KWISCIV_CDOS = '' THEN 'x' ELSE KWISCIV_CDOS END KWISCIV_CDOS,
							CASE WHEN KWISCIV_SIES = '#' THEN '-' WHEN KWISCIV_SIES IS NULL OR KWISCIV_SIES = '' THEN 'x' ELSE KWISCIV_SIES END KWISCIV_SIES,
							CASE WHEN KWISCIV_VCES = '#' THEN '-' WHEN KWISCIV_VCES IS NULL OR KWISCIV_VCES = '' THEN 'x' ELSE KWISCIV_VCES END KWISCIV_VCES,
							CASE WHEN KWISCIV_INES = '#' THEN '-' WHEN KWISCIV_INES IS NULL OR KWISCIV_INES = '' THEN 'x' ELSE KWISCIV_INES END KWISCIV_INES,
							CASE WHEN KWISCIV_BDES = '#' THEN '-' WHEN KWISCIV_BDES IS NULL OR KWISCIV_BDES = '' THEN 'x' ELSE KWISCIV_BDES END KWISCIV_BDES,
							CASE WHEN KWISCIV_MRES = '#' THEN '-' WHEN KWISCIV_MRES IS NULL OR KWISCIV_MRES = '' THEN 'x' ELSE KWISCIV_MRES END KWISCIV_MRES,
							CASE WHEN KWISCIV_VPES = '#' THEN '-' WHEN KWISCIV_VPES IS NULL OR KWISCIV_VPES = '' THEN 'x' ELSE KWISCIV_VPES END KWISCIV_VPES,
							CASE WHEN KWISCIV_DSES = '#' THEN '-' WHEN KWISCIV_DSES IS NULL OR KWISCIV_DSES = '' THEN 'x' ELSE KWISCIV_DSES END KWISCIV_DSES,
							CASE WHEN KWISCIV_ARES = '#' THEN '-' WHEN KWISCIV_ARES IS NULL OR KWISCIV_ARES = '' THEN 'x' ELSE KWISCIV_ARES END KWISCIV_ARES,
							CASE WHEN KWISCIV_SSES = '#' THEN '-' WHEN KWISCIV_SSES IS NULL OR KWISCIV_SSES = '' THEN 'x' ELSE KWISCIV_SSES END KWISCIV_SSES,
							CASE WHEN KWISCIV_CDES = '#' THEN '-' WHEN KWISCIV_CDES IS NULL OR KWISCIV_CDES = '' THEN 'x' ELSE KWISCIV_CDES END KWISCIV_CDES,
							CASE WHEN KSADS_BLUES = '#' THEN '-' WHEN KSADS_BLUES IS NULL OR KSADS_BLUES = '' THEN 'x' ELSE KSADS_BLUES END KSADS_BLUES,
							CASE WHEN KSADS_ANGER = '#' THEN '-' WHEN KSADS_ANGER IS NULL OR KSADS_ANGER = '' THEN 'x' ELSE KSADS_ANGER END KSADS_ANGER,
							CASE WHEN KSADS_LOSSM = '#' THEN '-' WHEN KSADS_LOSSM IS NULL OR KSADS_LOSSM = '' THEN 'x' ELSE KSADS_LOSSM END KSADS_LOSSM,
							CASE WHEN KSADS_DEATH = '#' THEN '-' WHEN KSADS_DEATH IS NULL OR KSADS_DEATH = '' THEN 'x' ELSE KSADS_DEATH END KSADS_DEATH,
							CASE WHEN KSADS_SUICIDE = '#' THEN '-' WHEN KSADS_SUICIDE IS NULL OR KSADS_SUICIDE = '' THEN 'x' ELSE KSADS_SUICIDE END KSADS_SUICIDE,
							CASE WHEN KSADS_SUI_SEVERITY = '#' THEN '-' WHEN KSADS_SUI_SEVERITY IS NULL OR KSADS_SUI_SEVERITY = '' THEN 'x' ELSE KSADS_SUI_SEVERITY END KSADS_SUI_SEVERITY,
							CASE WHEN KSADS_SUI_CRITICALITY = '#' THEN '-' WHEN KSADS_SUI_CRITICALITY IS NULL OR KSADS_SUI_CRITICALITY = '' THEN 'x' ELSE KSADS_SUI_CRITICALITY END KSADS_SUI_CRITICALITY,
							CASE WHEN KSADS_SELFHARM = '#' THEN '-' WHEN KSADS_SELFHARM IS NULL OR KSADS_SELFHARM = '' THEN 'x' ELSE KSADS_SELFHARM END KSADS_SELFHARM,
							CASE WHEN KSADS_UPLIFT = '#' THEN '-' WHEN KSADS_UPLIFT IS NULL OR KSADS_UPLIFT = '' THEN 'x' ELSE KSADS_UPLIFT END KSADS_UPLIFT,
							CASE WHEN KSADS_DEC_SLEEP = '#' THEN '-' WHEN KSADS_DEC_SLEEP IS NULL OR KSADS_DEC_SLEEP = '' THEN 'x' ELSE KSADS_DEC_SLEEP END KSADS_DEC_SLEEP,
							CASE WHEN KSADS_GOAL_ACTIVITY = '#' THEN '-' WHEN KSADS_GOAL_ACTIVITY IS NULL OR KSADS_GOAL_ACTIVITY = '' THEN 'x' ELSE KSADS_GOAL_ACTIVITY END KSADS_GOAL_ACTIVITY,
							CASE WHEN KSADS_GALLOP = '#' THEN '-' WHEN KSADS_GALLOP IS NULL OR KSADS_GALLOP = '' THEN 'x' ELSE KSADS_GALLOP END KSADS_GALLOP,
							CASE WHEN KSADS_HALLUCINATION = '#' THEN '-' WHEN KSADS_HALLUCINATION IS NULL OR KSADS_HALLUCINATION = '' THEN 'x' ELSE KSADS_HALLUCINATION END KSADS_HALLUCINATION,
							CASE WHEN KSADS_DELUSION = '#' THEN '-' WHEN KSADS_DELUSION IS NULL OR KSADS_DELUSION = '' THEN 'x' ELSE KSADS_DELUSION END KSADS_DELUSION,
							CASE WHEN KSADS_PANIC = '#' THEN '-' WHEN KSADS_PANIC IS NULL OR KSADS_PANIC = '' THEN 'x' ELSE KSADS_PANIC END KSADS_PANIC,
							CASE WHEN KSADS_SEPARATION_FEAR = '#' THEN '-' WHEN KSADS_SEPARATION_FEAR IS NULL OR KSADS_SEPARATION_FEAR = '' THEN 'x' ELSE KSADS_SEPARATION_FEAR END KSADS_SEPARATION_FEAR,
							CASE WHEN KSADS_ATTACH_FEAR = '#' THEN '-' WHEN KSADS_ATTACH_FEAR IS NULL OR KSADS_ATTACH_FEAR = '' THEN 'x' ELSE KSADS_ATTACH_FEAR END KSADS_ATTACH_FEAR,
							CASE WHEN KSADS_REJECT_SCHOOL = '#' THEN '-' WHEN KSADS_REJECT_SCHOOL IS NULL OR KSADS_REJECT_SCHOOL = '' THEN 'x' ELSE KSADS_REJECT_SCHOOL END KSADS_REJECT_SCHOOL,
							CASE WHEN KSADS_SLEEP_FEAR = '#' THEN '-' WHEN KSADS_SLEEP_FEAR IS NULL OR KSADS_SLEEP_FEAR = '' THEN 'x' ELSE KSADS_SLEEP_FEAR END KSADS_SLEEP_FEAR,
							CASE WHEN KSADS_ALONE_FEAR = '#' THEN '-' WHEN KSADS_ALONE_FEAR IS NULL OR KSADS_ALONE_FEAR = '' THEN 'x' ELSE KSADS_ALONE_FEAR END KSADS_ALONE_FEAR,
							CASE WHEN KSADS_ATROPHY = '#' THEN '-' WHEN KSADS_ATROPHY IS NULL OR KSADS_ATROPHY = '' THEN 'x' ELSE KSADS_ATROPHY END KSADS_ATROPHY,
							CASE WHEN KSADS_SITUATION_FEAR = '#' THEN '-' WHEN KSADS_SITUATION_FEAR IS NULL OR KSADS_SITUATION_FEAR = '' THEN 'x' ELSE KSADS_SITUATION_FEAR END KSADS_SITUATION_FEAR,
							CASE WHEN KSADS_PAIN = '#' THEN '-' WHEN KSADS_PAIN IS NULL OR KSADS_PAIN = '' THEN 'x' ELSE KSADS_PAIN END KSADS_PAIN,
							CASE WHEN KSADS_AVOID = '#' THEN '-' WHEN KSADS_AVOID IS NULL OR KSADS_AVOID = '' THEN 'x' ELSE KSADS_AVOID END KSADS_AVOID,
							CASE WHEN KSADS_FUTURE_WORRY = '#' THEN '-' WHEN KSADS_FUTURE_WORRY IS NULL OR KSADS_FUTURE_WORRY = '' THEN 'x' ELSE KSADS_FUTURE_WORRY END KSADS_FUTURE_WORRY,
							CASE WHEN KSADS_BODY_COMPLAIN = '#' THEN '-' WHEN KSADS_BODY_COMPLAIN IS NULL OR KSADS_BODY_COMPLAIN = '' THEN 'x' ELSE KSADS_BODY_COMPLAIN END KSADS_BODY_COMPLAIN,
							CASE WHEN KSADS_SELF_CONSCIOUS = '#' THEN '-' WHEN KSADS_SELF_CONSCIOUS IS NULL OR KSADS_SELF_CONSCIOUS = '' THEN 'x' ELSE KSADS_SELF_CONSCIOUS END KSADS_SELF_CONSCIOUS,
							CASE WHEN KSADS_TENSION = '#' THEN '-' WHEN KSADS_TENSION IS NULL OR KSADS_TENSION = '' THEN 'x' ELSE KSADS_TENSION END KSADS_TENSION,
							CASE WHEN KSADS_COMPLUSIVE_ACT = '#' THEN '-' WHEN KSADS_COMPLUSIVE_ACT IS NULL OR KSADS_COMPLUSIVE_ACT = '' THEN 'x' ELSE KSADS_COMPLUSIVE_ACT END KSADS_COMPLUSIVE_ACT,
							CASE WHEN KSADS_COMPLUSIVE_THINK = '#' THEN '-' WHEN KSADS_COMPLUSIVE_THINK IS NULL OR KSADS_COMPLUSIVE_THINK = '' THEN 'x' ELSE KSADS_COMPLUSIVE_THINK END KSADS_COMPLUSIVE_THINK,
							CASE WHEN KSADS_PEE_NIGHT = '#' THEN '-' WHEN KSADS_PEE_NIGHT IS NULL OR KSADS_PEE_NIGHT = '' THEN 'x' ELSE KSADS_PEE_NIGHT END KSADS_PEE_NIGHT,
							CASE WHEN KSADS_PEE_DAY = '#' THEN '-' WHEN KSADS_PEE_DAY IS NULL OR KSADS_PEE_DAY = '' THEN 'x' ELSE KSADS_PEE_DAY END KSADS_PEE_DAY,
							CASE WHEN KSADS_PEE_TOTAL = '#' THEN '-' WHEN KSADS_PEE_TOTAL IS NULL OR KSADS_PEE_TOTAL = '' THEN 'x' ELSE KSADS_PEE_TOTAL END KSADS_PEE_TOTAL,
							CASE WHEN KSADS_SHIT_NIGHT = '#' THEN '-' WHEN KSADS_SHIT_NIGHT IS NULL OR KSADS_SHIT_NIGHT = '' THEN 'x' ELSE KSADS_SHIT_NIGHT END KSADS_SHIT_NIGHT,
							CASE WHEN KSADS_SHIT_DAY = '#' THEN '-' WHEN KSADS_SHIT_DAY IS NULL OR KSADS_SHIT_DAY = '' THEN 'x' ELSE KSADS_SHIT_DAY END KSADS_SHIT_DAY,
							CASE WHEN KSADS_SHIT_TOTAL = '#' THEN '-' WHEN KSADS_SHIT_TOTAL IS NULL OR KSADS_SHIT_TOTAL = '' THEN 'x' ELSE KSADS_SHIT_TOTAL END KSADS_SHIT_TOTAL,
							CASE WHEN KSADS_FAT_FEAR = '#' THEN '-' WHEN KSADS_FAT_FEAR IS NULL OR KSADS_FAT_FEAR = '' THEN 'x' ELSE KSADS_FAT_FEAR END KSADS_FAT_FEAR,
							CASE WHEN KSADS_LOW_WEIGHT = '#' THEN '-' WHEN KSADS_LOW_WEIGHT IS NULL OR KSADS_LOW_WEIGHT = '' THEN 'x' ELSE KSADS_LOW_WEIGHT END KSADS_LOW_WEIGHT,
							CASE WHEN KSADS_WEIGHT_LOSS = '#' THEN '-' WHEN KSADS_WEIGHT_LOSS IS NULL OR KSADS_WEIGHT_LOSS = '' THEN 'x' ELSE KSADS_WEIGHT_LOSS END KSADS_WEIGHT_LOSS,
							CASE WHEN KSADS_VORACITY = '#' THEN '-' WHEN KSADS_VORACITY IS NULL OR KSADS_VORACITY = '' THEN 'x' ELSE KSADS_VORACITY END KSADS_VORACITY,
							CASE WHEN KSADS_ADHD_CF = '#' THEN '-' WHEN KSADS_ADHD_CF IS NULL OR KSADS_ADHD_CF = '' THEN 'x' ELSE KSADS_ADHD_CF END KSADS_ADHD_CF,
							CASE WHEN KSADS_ADHD_ED = '#' THEN '-' WHEN KSADS_ADHD_ED IS NULL OR KSADS_ADHD_ED = '' THEN 'x' ELSE KSADS_ADHD_ED END KSADS_ADHD_ED,
							CASE WHEN KSADS_ADHD_SF = '#' THEN '-' WHEN KSADS_ADHD_SF IS NULL OR KSADS_ADHD_SF = '' THEN 'x' ELSE KSADS_ADHD_SF END KSADS_ADHD_SF,
							CASE WHEN KSADS_ADHD_IMPULSIVITY = '#' THEN '-' WHEN KSADS_ADHD_IMPULSIVITY IS NULL OR KSADS_ADHD_IMPULSIVITY = '' THEN 'x' ELSE KSADS_ADHD_IMPULSIVITY END KSADS_ADHD_IMPULSIVITY,
							CASE WHEN KSADS_ODD_ANGRY = '#' THEN '-' WHEN KSADS_ODD_ANGRY IS NULL OR KSADS_ODD_ANGRY = '' THEN 'x' ELSE KSADS_ODD_ANGRY END KSADS_ODD_ANGRY,
							CASE WHEN KSADS_ODD_AA = '#' THEN '-' WHEN KSADS_ODD_AA IS NULL OR KSADS_ODD_AA = '' THEN 'x' ELSE KSADS_ODD_AA END KSADS_ODD_AA,
							CASE WHEN KSADS_ODD_NOTRULES = '#' THEN '-' WHEN KSADS_ODD_NOTRULES IS NULL OR KSADS_ODD_NOTRULES = '' THEN 'x' ELSE KSADS_ODD_NOTRULES END KSADS_ODD_NOTRULES,
							CASE WHEN KSADS_CD_LIE = '#' THEN '-' WHEN KSADS_CD_LIE IS NULL OR KSADS_CD_LIE = '' THEN 'x' ELSE KSADS_CD_LIE END KSADS_CD_LIE,
							CASE WHEN KSADS_CD_TRUANCY = '#' THEN '-' WHEN KSADS_CD_TRUANCY IS NULL OR KSADS_CD_TRUANCY = '' THEN 'x' ELSE KSADS_CD_TRUANCY END KSADS_CD_TRUANCY,
							CASE WHEN KSADS_CD_FIGHT = '#' THEN '-' WHEN KSADS_CD_FIGHT IS NULL OR KSADS_CD_FIGHT = '' THEN 'x' ELSE KSADS_CD_FIGHT END KSADS_CD_FIGHT,
							CASE WHEN KSADS_CD_TORMENT = '#' THEN '-' WHEN KSADS_CD_TORMENT IS NULL OR KSADS_CD_TORMENT = '' THEN 'x' ELSE KSADS_CD_TORMENT END KSADS_CD_TORMENT,
							CASE WHEN KSADS_CD_THIEVERY = '#' THEN '-' WHEN KSADS_CD_THIEVERY IS NULL OR KSADS_CD_THIEVERY = '' THEN 'x' ELSE KSADS_CD_THIEVERY END KSADS_CD_THIEVERY,
							CASE WHEN KSADS_EXERCISE_TIC = '#' THEN '-' WHEN KSADS_EXERCISE_TIC IS NULL OR KSADS_EXERCISE_TIC = '' THEN 'x' ELSE KSADS_EXERCISE_TIC END KSADS_EXERCISE_TIC,
							CASE WHEN KSADS_EXERCISE_VOICE = '#' THEN '-' WHEN KSADS_EXERCISE_VOICE IS NULL OR KSADS_EXERCISE_VOICE = '' THEN 'x' ELSE KSADS_EXERCISE_VOICE END KSADS_EXERCISE_VOICE,
							CASE WHEN GAS = '#' THEN '-' WHEN GAS IS NULL OR GAS = '' THEN 'x' ELSE GAS END GAS,
							CASE WHEN ADHDRQ1_MISTAKE = '#' THEN '-' WHEN ADHDRQ1_MISTAKE IS NULL OR ADHDRQ1_MISTAKE = '' THEN 'x' ELSE ADHDRQ1_MISTAKE END ADHDRQ1_MISTAKE,
							CASE WHEN ADHDRQ2_NOTLISTEN = '#' THEN '-' WHEN ADHDRQ2_NOTLISTEN IS NULL OR ADHDRQ2_NOTLISTEN = '' THEN 'x' ELSE ADHDRQ2_NOTLISTEN END ADHDRQ2_NOTLISTEN,
							CASE WHEN ADHDRQ3_FOLLOW_DIFF = '#' THEN '-' WHEN ADHDRQ3_FOLLOW_DIFF IS NULL OR ADHDRQ3_FOLLOW_DIFF = '' THEN 'x' ELSE ADHDRQ3_FOLLOW_DIFF END ADHDRQ3_FOLLOW_DIFF,
							CASE WHEN ADHDRQ4_ARRANGE_DIFF = '#' THEN '-' WHEN ADHDRQ4_ARRANGE_DIFF IS NULL OR ADHDRQ4_ARRANGE_DIFF = '' THEN 'x' ELSE ADHDRQ4_ARRANGE_DIFF END ADHDRQ4_ARRANGE_DIFF,
							CASE WHEN ADHDRQ5_ASSIGN_AVOID = '#' THEN '-' WHEN ADHDRQ5_ASSIGN_AVOID IS NULL OR ADHDRQ5_ASSIGN_AVOID = '' THEN 'x' ELSE ADHDRQ5_ASSIGN_AVOID END ADHDRQ5_ASSIGN_AVOID,
							CASE WHEN ADHDRQ6_LOST_ITEM = '#' THEN '-' WHEN ADHDRQ6_LOST_ITEM IS NULL OR ADHDRQ6_LOST_ITEM = '' THEN 'x' ELSE ADHDRQ6_LOST_ITEM END ADHDRQ6_LOST_ITEM,
							CASE WHEN ADHDRQ7_FORGETFULNESS = '#' THEN '-' WHEN ADHDRQ7_FORGETFULNESS IS NULL OR ADHDRQ7_FORGETFULNESS = '' THEN 'x' ELSE ADHDRQ7_FORGETFULNESS END ADHDRQ7_FORGETFULNESS,
							CASE WHEN ADHDRQ8_UNREST = '#' THEN '-' WHEN ADHDRQ8_UNREST IS NULL OR ADHDRQ8_UNREST = '' THEN 'x' ELSE ADHDRQ8_UNREST END ADHDRQ8_UNREST,
							CASE WHEN ADHDRQ9_OVERRUN = '#' THEN '-' WHEN ADHDRQ9_OVERRUN IS NULL OR ADHDRQ9_OVERRUN = '' THEN 'x' ELSE ADHDRQ9_OVERRUN END ADHDRQ9_OVERRUN,
							CASE WHEN ADHDRQ10_ENDLESS_ACT = '#' THEN '-' WHEN ADHDRQ10_ENDLESS_ACT IS NULL OR ADHDRQ10_ENDLESS_ACT = '' THEN 'x' ELSE ADHDRQ10_ENDLESS_ACT END ADHDRQ10_ENDLESS_ACT,
							CASE WHEN ADHDRQ11_SILENT_DIFF = '#' THEN '-' WHEN ADHDRQ11_SILENT_DIFF IS NULL OR ADHDRQ11_SILENT_DIFF = '' THEN 'x' ELSE ADHDRQ11_SILENT_DIFF END ADHDRQ11_SILENT_DIFF,
							CASE WHEN ADHDRQ12_SUDDEN_ANS = '#' THEN '-' WHEN ADHDRQ12_SUDDEN_ANS IS NULL OR ADHDRQ12_SUDDEN_ANS = '' THEN 'x' ELSE ADHDRQ12_SUDDEN_ANS END ADHDRQ12_SUDDEN_ANS,
							CASE WHEN ADHDRQ13_WAIT_DIFF = '#' THEN '-' WHEN ADHDRQ13_WAIT_DIFF IS NULL OR ADHDRQ13_WAIT_DIFF = '' THEN 'x' ELSE ADHDRQ13_WAIT_DIFF END ADHDRQ13_WAIT_DIFF,
							CASE WHEN ADHDRQ14_INTERRUPT = '#' THEN '-' WHEN ADHDRQ14_INTERRUPT IS NULL OR ADHDRQ14_INTERRUPT = '' THEN 'x' ELSE ADHDRQ14_INTERRUPT END ADHDRQ14_INTERRUPT,
							CASE WHEN ADHDRQ15_FICKLE = '#' THEN '-' WHEN ADHDRQ15_FICKLE IS NULL OR ADHDRQ15_FICKLE = '' THEN 'x' ELSE ADHDRQ15_FICKLE END ADHDRQ15_FICKLE,
							CASE WHEN ADHDRQ16_CHATTER = '#' THEN '-' WHEN ADHDRQ16_CHATTER IS NULL OR ADHDRQ16_CHATTER = '' THEN 'x' ELSE ADHDRQ16_CHATTER END ADHDRQ16_CHATTER,
							CASE WHEN ADHDRQ17_DANGER_ACT = '#' THEN '-' WHEN ADHDRQ17_DANGER_ACT IS NULL OR ADHDRQ17_DANGER_ACT = '' THEN 'x' ELSE ADHDRQ17_DANGER_ACT END ADHDRQ17_DANGER_ACT,
							CASE WHEN DIAGNOSIS = '#' THEN '-' WHEN DIAGNOSIS IS NULL OR DIAGNOSIS = '' THEN 'x' ELSE DIAGNOSIS END DIAGNOSIS,
							CASE WHEN DIAGNOSIS_ETC = '#' THEN '-' WHEN DIAGNOSIS_ETC IS NULL OR DIAGNOSIS_ETC = '' THEN 'x' ELSE DIAGNOSIS_ETC END DIAGNOSIS_ETC,
							<!-- CASE WHEN TIC_APPENDIX = '#' THEN '-' WHEN TIC_APPENDIX IS NULL OR TIC_APPENDIX = '' THEN 'x' ELSE TIC_APPENDIX END TIC_APPENDIX, -->
							CASE WHEN SACT_TIC1_CE = '#' THEN '-' WHEN SACT_TIC1_CE IS NULL OR SACT_TIC1_CE = '' THEN 'x' ELSE SACT_TIC1_CE END SACT_TIC1_CE,
							CASE WHEN SACT_TIC1_MSP = '#' THEN '-' WHEN SACT_TIC1_MSP IS NULL OR SACT_TIC1_MSP = '' THEN 'x' ELSE SACT_TIC1_MSP END SACT_TIC1_MSP,
							CASE WHEN SACT_TIC2_CE = '#' THEN '-' WHEN SACT_TIC2_CE IS NULL OR SACT_TIC2_CE = '' THEN 'x' ELSE SACT_TIC2_CE END SACT_TIC2_CE,
							CASE WHEN SACT_TIC2_MSP = '#' THEN '-' WHEN SACT_TIC2_MSP IS NULL OR SACT_TIC2_MSP = '' THEN 'x' ELSE SACT_TIC2_MSP END SACT_TIC2_MSP,
							CASE WHEN SACT_TIC3_CE = '#' THEN '-' WHEN SACT_TIC3_CE IS NULL OR SACT_TIC3_CE = '' THEN 'x' ELSE SACT_TIC3_CE END SACT_TIC3_CE,
							CASE WHEN SACT_TIC3_MSP = '#' THEN '-' WHEN SACT_TIC3_MSP IS NULL OR SACT_TIC3_MSP = '' THEN 'x' ELSE SACT_TIC3_MSP END SACT_TIC3_MSP,
							CASE WHEN SACT_TIC4_CE = '#' THEN '-' WHEN SACT_TIC4_CE IS NULL OR SACT_TIC4_CE = '' THEN 'x' ELSE SACT_TIC4_CE END SACT_TIC4_CE,
							CASE WHEN SACT_TIC4_MSP = '#' THEN '-' WHEN SACT_TIC4_MSP IS NULL OR SACT_TIC4_MSP = '' THEN 'x' ELSE SACT_TIC4_MSP END SACT_TIC4_MSP,
							CASE WHEN SACT_TIC5_CE = '#' THEN '-' WHEN SACT_TIC5_CE IS NULL OR SACT_TIC5_CE = '' THEN 'x' ELSE SACT_TIC5_CE END SACT_TIC5_CE,
							CASE WHEN SACT_TIC5_MSP = '#' THEN '-' WHEN SACT_TIC5_MSP IS NULL OR SACT_TIC5_MSP = '' THEN 'x' ELSE SACT_TIC5_MSP END SACT_TIC5_MSP,
							CASE WHEN SACT_TIC6_CE = '#' THEN '-' WHEN SACT_TIC6_CE IS NULL OR SACT_TIC6_CE = '' THEN 'x' ELSE SACT_TIC6_CE END SACT_TIC6_CE,
							CASE WHEN SACT_TIC6_MSP = '#' THEN '-' WHEN SACT_TIC6_MSP IS NULL OR SACT_TIC6_MSP = '' THEN 'x' ELSE SACT_TIC6_MSP END SACT_TIC6_MSP,
							CASE WHEN SACT_TIC7_CE = '#' THEN '-' WHEN SACT_TIC7_CE IS NULL OR SACT_TIC7_CE = '' THEN 'x' ELSE SACT_TIC7_CE END SACT_TIC7_CE,
							CASE WHEN SACT_TIC7_MSP = '#' THEN '-' WHEN SACT_TIC7_MSP IS NULL OR SACT_TIC7_MSP = '' THEN 'x' ELSE SACT_TIC7_MSP END SACT_TIC7_MSP,
							CASE WHEN SACT_TIC8_CE = '#' THEN '-' WHEN SACT_TIC8_CE IS NULL OR SACT_TIC8_CE = '' THEN 'x' ELSE SACT_TIC8_CE END SACT_TIC8_CE,
							CASE WHEN SACT_TIC8_MSP = '#' THEN '-' WHEN SACT_TIC8_MSP IS NULL OR SACT_TIC8_MSP = '' THEN 'x' ELSE SACT_TIC8_MSP END SACT_TIC8_MSP,
							CASE WHEN CACT_TIC1_CE = '#' THEN '-' WHEN CACT_TIC1_CE IS NULL OR CACT_TIC1_CE = '' THEN 'x' ELSE CACT_TIC1_CE END CACT_TIC1_CE,
							CASE WHEN CACT_TIC1_MSP = '#' THEN '-' WHEN CACT_TIC1_MSP IS NULL OR CACT_TIC1_MSP = '' THEN 'x' ELSE CACT_TIC1_MSP END CACT_TIC1_MSP,
							CASE WHEN CACT_TIC2_CE = '#' THEN '-' WHEN CACT_TIC2_CE IS NULL OR CACT_TIC2_CE = '' THEN 'x' ELSE CACT_TIC2_CE END CACT_TIC2_CE,
							CASE WHEN CACT_TIC2_MSP = '#' THEN '-' WHEN CACT_TIC2_MSP IS NULL OR CACT_TIC2_MSP = '' THEN 'x' ELSE CACT_TIC2_MSP END CACT_TIC2_MSP,
							CASE WHEN CACT_TIC3_CE = '#' THEN '-' WHEN CACT_TIC3_CE IS NULL OR CACT_TIC3_CE = '' THEN 'x' ELSE CACT_TIC3_CE END CACT_TIC3_CE,
							CASE WHEN CACT_TIC3_MSP = '#' THEN '-' WHEN CACT_TIC3_MSP IS NULL OR CACT_TIC3_MSP = '' THEN 'x' ELSE CACT_TIC3_MSP END CACT_TIC3_MSP,
							CASE WHEN CACT_TIC4_CE = '#' THEN '-' WHEN CACT_TIC4_CE IS NULL OR CACT_TIC4_CE = '' THEN 'x' ELSE CACT_TIC4_CE END CACT_TIC4_CE,
							CASE WHEN CACT_TIC4_MSP = '#' THEN '-' WHEN CACT_TIC4_MSP IS NULL OR CACT_TIC4_MSP = '' THEN 'x' ELSE CACT_TIC4_MSP END CACT_TIC4_MSP,
							CASE WHEN CACT_TIC5_CE = '#' THEN '-' WHEN CACT_TIC5_CE IS NULL OR CACT_TIC5_CE = '' THEN 'x' ELSE CACT_TIC5_CE END CACT_TIC5_CE,
							CASE WHEN CACT_TIC5_MSP = '#' THEN '-' WHEN CACT_TIC5_MSP IS NULL OR CACT_TIC5_MSP = '' THEN 'x' ELSE CACT_TIC5_MSP END CACT_TIC5_MSP,
							CASE WHEN SVOICE_TIC1_CE = '#' THEN '-' WHEN SVOICE_TIC1_CE IS NULL OR SVOICE_TIC1_CE = '' THEN 'x' ELSE SVOICE_TIC1_CE END SVOICE_TIC1_CE,
							CASE WHEN SVOICE_TIC1_MSP = '#' THEN '-' WHEN SVOICE_TIC1_MSP IS NULL OR SVOICE_TIC1_MSP = '' THEN 'x' ELSE SVOICE_TIC1_MSP END SVOICE_TIC1_MSP,
							CASE WHEN SVOICE_TIC2_CE = '#' THEN '-' WHEN SVOICE_TIC2_CE IS NULL OR SVOICE_TIC2_CE = '' THEN 'x' ELSE SVOICE_TIC2_CE END SVOICE_TIC2_CE,
							CASE WHEN SVOICE_TIC2_MSP = '#' THEN '-' WHEN SVOICE_TIC2_MSP IS NULL OR SVOICE_TIC2_MSP = '' THEN 'x' ELSE SVOICE_TIC2_MSP END SVOICE_TIC2_MSP,
							CASE WHEN SVOICE_TIC3_CE = '#' THEN '-' WHEN SVOICE_TIC3_CE IS NULL OR SVOICE_TIC3_CE = '' THEN 'x' ELSE SVOICE_TIC3_CE END SVOICE_TIC3_CE,
							CASE WHEN SVOICE_TIC3_MSP = '#' THEN '-' WHEN SVOICE_TIC3_MSP IS NULL OR SVOICE_TIC3_MSP = '' THEN 'x' ELSE SVOICE_TIC3_MSP END SVOICE_TIC3_MSP,
							CASE WHEN CVOICE_TIC1_CE = '#' THEN '-' WHEN CVOICE_TIC1_CE IS NULL OR CVOICE_TIC1_CE = '' THEN 'x' ELSE CVOICE_TIC1_CE END CVOICE_TIC1_CE,
							CASE WHEN CVOICE_TIC1_MSP = '#' THEN '-' WHEN CVOICE_TIC1_MSP IS NULL OR CVOICE_TIC1_MSP = '' THEN 'x' ELSE CVOICE_TIC1_MSP END CVOICE_TIC1_MSP,
							CASE WHEN CVOICE_TIC2_CE = '#' THEN '-' WHEN CVOICE_TIC2_CE IS NULL OR CVOICE_TIC2_CE = '' THEN 'x' ELSE CVOICE_TIC2_CE END CVOICE_TIC2_CE,
							CASE WHEN CVOICE_TIC2_MSP = '#' THEN '-' WHEN CVOICE_TIC2_MSP IS NULL OR CVOICE_TIC2_MSP = '' THEN 'x' ELSE CVOICE_TIC2_MSP END CVOICE_TIC2_MSP,
							CASE WHEN CVOICE_TIC3_CE = '#' THEN '-' WHEN CVOICE_TIC3_CE IS NULL OR CVOICE_TIC3_CE = '' THEN 'x' ELSE CVOICE_TIC3_CE END CVOICE_TIC3_CE,
							CASE WHEN CVOICE_TIC3_MSP = '#' THEN '-' WHEN CVOICE_TIC3_MSP IS NULL OR CVOICE_TIC3_MSP = '' THEN 'x' ELSE CVOICE_TIC3_MSP END CVOICE_TIC3_MSP,
							CASE WHEN CVOICE_TIC4_CE = '#' THEN '-' WHEN CVOICE_TIC4_CE IS NULL OR CVOICE_TIC4_CE = '' THEN 'x' ELSE CVOICE_TIC4_CE END CVOICE_TIC4_CE,
							CASE WHEN CVOICE_TIC4_MSP = '#' THEN '-' WHEN CVOICE_TIC4_MSP IS NULL OR CVOICE_TIC4_MSP = '' THEN 'x' ELSE CVOICE_TIC4_MSP END CVOICE_TIC4_MSP,
							CASE WHEN CVOICE_TIC5_CE = '#' THEN '-' WHEN CVOICE_TIC5_CE IS NULL OR CVOICE_TIC5_CE = '' THEN 'x' ELSE CVOICE_TIC5_CE END CVOICE_TIC5_CE,
							CASE WHEN CVOICE_TIC5_MSP = '#' THEN '-' WHEN CVOICE_TIC5_MSP IS NULL OR CVOICE_TIC5_MSP = '' THEN 'x' ELSE CVOICE_TIC5_MSP END CVOICE_TIC5_MSP,
							CASE WHEN CVOICE_TIC6A_CE = '#' THEN '-' WHEN CVOICE_TIC6A_CE IS NULL OR CVOICE_TIC6A_CE = '' THEN 'x' ELSE CVOICE_TIC6A_CE END CVOICE_TIC6A_CE,
							CASE WHEN CVOICE_TIC6A_MSP = '#' THEN '-' WHEN CVOICE_TIC6A_MSP IS NULL OR CVOICE_TIC6A_MSP = '' THEN 'x' ELSE CVOICE_TIC6A_MSP END CVOICE_TIC6A_MSP,
							CASE WHEN CVOICE_TIC6B_CE = '#' THEN '-' WHEN CVOICE_TIC6B_CE IS NULL OR CVOICE_TIC6B_CE = '' THEN 'x' ELSE CVOICE_TIC6B_CE END CVOICE_TIC6B_CE,
							CASE WHEN CVOICE_TIC6B_MSP = '#' THEN '-' WHEN CVOICE_TIC6B_MSP IS NULL OR CVOICE_TIC6B_MSP = '' THEN 'x' ELSE CVOICE_TIC6B_MSP END CVOICE_TIC6B_MSP,
							CASE WHEN CVOICE_TIC6C_CE = '#' THEN '-' WHEN CVOICE_TIC6C_CE IS NULL OR CVOICE_TIC6C_CE = '' THEN 'x' ELSE CVOICE_TIC6C_CE END CVOICE_TIC6C_CE,
							CASE WHEN CVOICE_TIC6C_MSP = '#' THEN '-' WHEN CVOICE_TIC6C_MSP IS NULL OR CVOICE_TIC6C_MSP = '' THEN 'x' ELSE CVOICE_TIC6C_MSP END CVOICE_TIC6C_MSP,
							CASE WHEN TOURETTE_7A_CE = '#' THEN '-' WHEN TOURETTE_7A_CE IS NULL OR TOURETTE_7A_CE = '' THEN 'x' ELSE TOURETTE_7A_CE END TOURETTE_7A_CE,
							CASE WHEN TOURETTE_7A_MSP = '#' THEN '-' WHEN TOURETTE_7A_MSP IS NULL OR TOURETTE_7A_MSP = '' THEN 'x' ELSE TOURETTE_7A_MSP END TOURETTE_7A_MSP,
							CASE WHEN TOURETTE_7B_CE = '#' THEN '-' WHEN TOURETTE_7B_CE IS NULL OR TOURETTE_7B_CE = '' THEN 'x' ELSE TOURETTE_7B_CE END TOURETTE_7B_CE,
							CASE WHEN TOURETTE_7B_MSP = '#' THEN '-' WHEN TOURETTE_7B_MSP IS NULL OR TOURETTE_7B_MSP = '' THEN 'x' ELSE TOURETTE_7B_MSP END TOURETTE_7B_MSP,
							CASE WHEN CHRONIC_TIC8A_CE = '#' THEN '-' WHEN CHRONIC_TIC8A_CE IS NULL OR CHRONIC_TIC8A_CE = '' THEN 'x' ELSE CHRONIC_TIC8A_CE END CHRONIC_TIC8A_CE,
							CASE WHEN CHRONIC_TIC8A_MSP = '#' THEN '-' WHEN CHRONIC_TIC8A_MSP IS NULL OR CHRONIC_TIC8A_MSP = '' THEN 'x' ELSE CHRONIC_TIC8A_MSP END CHRONIC_TIC8A_MSP,
							CASE WHEN CHRONIC_TIC8B_CE = '#' THEN '-' WHEN CHRONIC_TIC8B_CE IS NULL OR CHRONIC_TIC8B_CE = '' THEN 'x' ELSE CHRONIC_TIC8B_CE END CHRONIC_TIC8B_CE,
							CASE WHEN CHRONIC_TIC8B_MSP = '#' THEN '-' WHEN CHRONIC_TIC8B_MSP IS NULL OR CHRONIC_TIC8B_MSP = '' THEN 'x' ELSE CHRONIC_TIC8B_MSP END CHRONIC_TIC8B_MSP,
							CASE WHEN DAILY_TIC9A_CE = '#' THEN '-' WHEN DAILY_TIC9A_CE IS NULL OR DAILY_TIC9A_CE = '' THEN 'x' ELSE DAILY_TIC9A_CE END DAILY_TIC9A_CE,
							CASE WHEN DAILY_TIC9A_MSP = '#' THEN '-' WHEN DAILY_TIC9A_MSP IS NULL OR DAILY_TIC9A_MSP = '' THEN 'x' ELSE DAILY_TIC9A_MSP END DAILY_TIC9A_MSP,
							CASE WHEN DAILY_TIC9B_CE = '#' THEN '-' WHEN DAILY_TIC9B_CE IS NULL OR DAILY_TIC9B_CE = '' THEN 'x' ELSE DAILY_TIC9B_CE END DAILY_TIC9B_CE,
							CASE WHEN DAILY_TIC9B_MSP = '#' THEN '-' WHEN DAILY_TIC9B_MSP IS NULL OR DAILY_TIC9B_MSP = '' THEN 'x' ELSE DAILY_TIC9B_MSP END DAILY_TIC9B_MSP,
							S1.REMARKS  
						FROM T_NEUROPSY_S1 S1 
                        JOIN T_PERFORM_TERM PT
						ON S1.PERFORM_CNT = PT.PERFORM_CNT
						LEFT JOIN T_TARGET_MST TM
						ON S1.TARGET_ID = TM.TARGET_ID
						AND S1.RND_ID = TM.RND_ID
                        LEFT JOIN T_TARGET_DIS_MST TDM
                        ON TM.TARGET_ID = TDM.TARGET_ORG_ID
                        AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					    LEFT JOIN T_CODE_DTL DISE1
				        ON DISE1.CLASS_CD = 'DISE1'
				        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
				        LEFT JOIN T_CODE_DTL PTC
				        ON PTC.CLASS_CD = 'PT001'
				        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
				        LEFT JOIN T_PERFORM_MST PM
						ON TM.RND_ID = PM.RND_ID
						AND TM.TARGET_ID = PM.TARGET_ID
						AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
						AND S1.PERFORM_CNT = PM.PERFORM_CNT
				        WHERE 1=1
				        	AND TM.RND_ID = #{rndId}
				        	AND PM.STATUS != '0004'
				        	AND NOT PM.PERFORM_CNT = 2
				            AND NOT PM.PERFORM_CNT = 3
                            <if test="disClassDtl !=null and disClassDtl != '' ">
                            AND DISE1.CLASS_CD_DTL = #{disClassDtl}
                            </if>
					        <if test="targetId !=null and targetId != '' ">
								AND TM.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND TM.SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND S1.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (S1.TARGET_ID, S1.PERFORM_CNT, S1.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						) A
					) B
			WHERE 1=1 
				 AND NOT B.ALL_CHK = '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
		) T

	</select>
	
	<select id="selectNeuropsyS1AsdListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT B.*
			FROM
				(SELECT
					A.*,
					CONCAT(
						FSIQ
                        ,KEDIWAIS_VOCA_OS
						,KEDIWAIS_ARITH_OS
						,KEDIWAIS_ORDER_OS
						,KEDIWAIS_PIECE_OS
						,KEDIWAIS_VOCA_ES
						,KEDIWAIS_ARITH_ES
						,KEDIWAIS_ORDER_ES
						,KEDIWAIS_PIECE_ES
						,KWISCIV_COS
						,KWISCIV_VOS
						,KWISCIV_UOS
						,KWISCIV_POS
						,KWISCIV_CPOS
						,KWISCIV_MOS
						,KWISCIV_NOS
						,KWISCIV_SCOS
						,KWISCIV_SOS
						,KWISCIV_STOS
						,KWISCIV_CES
						,KWISCIV_VES
						,KWISCIV_UES
						,KWISCIV_PES
						,KWISCIV_CPES
						,KWISCIV_MES
						,KWISCIV_NES
						,KWISCIV_SCES
						,KWISCIV_SES
						,KWISCIV_STES
						
						,KWISCIV_ESAD_LU
						,KWISCIV_ESAD_PR
						,KWISCIV_ESAD_WR
						,KWISCIV_ESAD_PS
						,KWISCIV_ESAD_ALLIQ
						,KWISCIV_IDXS_LU
						,KWISCIV_IDXS_PR
						,KWISCIV_IDXS_WR
						,KWISCIV_IDXS_PS
						,KWISCIV_IDXS_ALLIQ
						,KWISCIV_PERCNT_LU
						,KWISCIV_PERCNT_PR
						,KWISCIV_PERCNT_WR
						,KWISCIV_PERCNT_PS
						,KWISCIV_PERCNT_ALLIQ
						,KWISCIV_CONFITVL_LU
						,KWISCIV_CONFITVL_PR
						,KWISCIV_CONFITVL_WR
						,KWISCIV_CONFITVL_PS
						,KWISCIV_CONFITVL_ALLIQ
						,KWISCIV_QD_LU
						,KWISCIV_QD_PR
						,KWISCIV_QD_WR
						,KWISCIV_QD_PS
						,KWISCIV_QD_ALLIQ

						
						,KWISCIV_SIOS
						,KWISCIV_VCOS
						,KWISCIV_INOS
						,KWISCIV_BDOS
						,KWISCIV_MROS
						,KWISCIV_VPOS
						,KWISCIV_DSOS
						,KWISCIV_AROS
						,KWISCIV_SSOS
						,KWISCIV_CDOS
						,KWISCIV_SIES
						,KWISCIV_VCES
						,KWISCIV_INES
						,KWISCIV_BDES
						,KWISCIV_MRES
						,KWISCIV_VPES
						,KWISCIV_DSES
						,KWISCIV_ARES
						,KWISCIV_SSES
						,KWISCIV_CDES
						
						,KWISCIV2_ESAD_LU
						,KWISCIV2_ESAD_PR
						,KWISCIV2_ESAD_WR
						,KWISCIV2_ESAD_PS
						,KWISCIV2_ESAD_ALLIQ
						,KWISCIV2_IDXS_LU
						,KWISCIV2_IDXS_PR
						,KWISCIV2_IDXS_WR
						,KWISCIV2_IDXS_PS
						,KWISCIV2_IDXS_ALLIQ
						,KWISCIV2_PERCNT_LU
						,KWISCIV2_PERCNT_PR
						,KWISCIV2_PERCNT_WR
						,KWISCIV2_PERCNT_PS
						,KWISCIV2_PERCNT_ALLIQ
						,KWISCIV2_CONFITVL_LU
						,KWISCIV2_CONFITVL_PR
						,KWISCIV2_CONFITVL_WR
						,KWISCIV2_CONFITVL_PS
						,KWISCIV2_CONFITVL_ALLIQ,
						
                        EXCT_ALL_INTELL,
						EXCT_SHORT_INTELL,
						EXCT_FLUID_INFER,
						EXCT_BASIC_VISUAL,
						ICID_ALL_INTELL,
						ICID_SHORT_INTELL,
						ICID_FLUID_INFER,
						ICID_BASIC_VISUAL,
						VIFS_FORE_BACK,
						VIFS_SHAPE_COMP,
						VIFS_MATCH,
						VIFS_ORDER_INFER,
						VIFS_PATT_FIND,
						VIFS_DRAW_INFER,
						VIFS_CATEGORIZ,
						VIEXC_FORE_BACK,
						VIEXC_SHAPE_COMP,
						VIEXC_MATCH,
						VIEXC_ORDER_INFER,
						VIEXC_PATT_FIND,
						VIEXC_DRAW_INFER,
						VIEXC_CATEGORIZ,
						CEXC_MEMORY_SELECT,
						CEXC_RECOG_MEMORY,
						CCOMP_MEMORY_SELECT,
						CCOMP_RECOG_MEMORY,
						SC_PAIR_ASSO,
						SC_IMMED_RECOG,
						SC_IMMED_REMEMBER,
						SC_SUSTAIN_ATT,
						SC_DELAY_RECOG,
						EXC_PAIR_ASSO,
						EXC_IMMED_RECOG,
						EXC_IMMED_REMEMBER,
						EXC_SUSTAIN_ATT,
						EXC_DELAY_RECOG,
						P_RS_COMPSC,
						P_EC_COMPSC,
						SC_ATTENTION,
						SC_ACTIV_LEVEL,
						SC_IMPULS,
						SC_ADAPTABILITY,
						SC_MOOD_CONFID,
						SC_FEEL_EMO,
						SC_SOCIABILITY,
						SC_CONTROL,
						EXC_ATTENTION,
						EXC_ACTIV_LEVEL,
						EXC_IMPULS,
						EXC_ADAPTABILITY,
						EXC_MOOD_CONFID,
						EXC_FEEL_EMO,
						EXC_SOCIABILITY,
						EXC_CONTROL) ALL_CHK
					FROM (
						SELECT
							S1.TARGET_ID,
							TM.TARGET_DIS_ID,
							DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
							CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
							PTC.CLASS_CD_DTL_NM PROTOCOL,
							TM.BIRTH_YM,
							PT.PERFORM_NM PERFORM_CNT_NM,
							PT.PERFORM_CNT,
							FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) AGE,
							CONCAT(SUBSTR(S1_EXEC_DATE,1,4) ,'-',SUBSTR(S1_EXEC_DATE,5,2),'-',SUBSTR(S1_EXEC_DATE,7,2)) S1_EXEC_DATE,
							ENROLL_AGE,
							CASE WHEN FSIQ = '#' THEN '-' WHEN FSIQ = '' THEN 'x' ELSE FSIQ END FSIQ,
							CASE WHEN KEDIWAIS_VOCA_OS = '#' THEN '-' WHEN KEDIWAIS_VOCA_OS IS NULL OR KEDIWAIS_VOCA_OS = '' THEN 'x' ELSE KEDIWAIS_VOCA_OS END KEDIWAIS_VOCA_OS,
							CASE WHEN KEDIWAIS_ARITH_OS = '#' THEN '-' WHEN KEDIWAIS_ARITH_OS IS NULL OR KEDIWAIS_ARITH_OS = '' THEN 'x' ELSE KEDIWAIS_ARITH_OS END KEDIWAIS_ARITH_OS,
							CASE WHEN KEDIWAIS_ORDER_OS = '#' THEN '-' WHEN KEDIWAIS_ORDER_OS IS NULL OR KEDIWAIS_ORDER_OS = '' THEN 'x' ELSE KEDIWAIS_ORDER_OS END KEDIWAIS_ORDER_OS,
							CASE WHEN KEDIWAIS_PIECE_OS = '#' THEN '-' WHEN KEDIWAIS_PIECE_OS IS NULL OR KEDIWAIS_PIECE_OS = '' THEN 'x' ELSE KEDIWAIS_PIECE_OS END KEDIWAIS_PIECE_OS,
							CASE WHEN KEDIWAIS_VOCA_ES = '#' THEN '-' WHEN KEDIWAIS_VOCA_ES IS NULL OR KEDIWAIS_VOCA_ES = '' THEN 'x' ELSE KEDIWAIS_VOCA_ES END KEDIWAIS_VOCA_ES,
							CASE WHEN KEDIWAIS_ARITH_ES = '#' THEN '-' WHEN KEDIWAIS_ARITH_ES IS NULL OR KEDIWAIS_ARITH_ES = '' THEN 'x' ELSE KEDIWAIS_ARITH_ES END KEDIWAIS_ARITH_ES,
							CASE WHEN KEDIWAIS_ORDER_ES = '#' THEN '-' WHEN KEDIWAIS_ORDER_ES IS NULL OR KEDIWAIS_ORDER_ES = '' THEN 'x' ELSE KEDIWAIS_ORDER_ES END KEDIWAIS_ORDER_ES,
							CASE WHEN KEDIWAIS_PIECE_ES = '#' THEN '-' WHEN KEDIWAIS_PIECE_ES IS NULL OR KEDIWAIS_PIECE_ES = '' THEN 'x' ELSE KEDIWAIS_PIECE_ES END KEDIWAIS_PIECE_ES,
							CASE WHEN KWISCIV_COS = '#' THEN '-' WHEN KWISCIV_COS IS NULL OR KWISCIV_COS = '' THEN 'x' ELSE KWISCIV_COS END KWISCIV_COS,
							CASE WHEN KWISCIV_VOS = '#' THEN '-' WHEN KWISCIV_VOS IS NULL OR KWISCIV_VOS = '' THEN 'x' ELSE KWISCIV_VOS END KWISCIV_VOS,
							CASE WHEN KWISCIV_UOS = '#' THEN '-' WHEN KWISCIV_UOS IS NULL OR KWISCIV_UOS = '' THEN 'x' ELSE KWISCIV_UOS END KWISCIV_UOS,
							CASE WHEN KWISCIV_POS = '#' THEN '-' WHEN KWISCIV_POS IS NULL OR KWISCIV_POS = '' THEN 'x' ELSE KWISCIV_POS END KWISCIV_POS,
							CASE WHEN KWISCIV_CPOS = '#' THEN '-' WHEN KWISCIV_CPOS IS NULL OR KWISCIV_CPOS = '' THEN 'x' ELSE KWISCIV_CPOS END KWISCIV_CPOS,
							CASE WHEN KWISCIV_MOS = '#' THEN '-' WHEN KWISCIV_MOS IS NULL OR KWISCIV_MOS = '' THEN 'x' ELSE KWISCIV_MOS END KWISCIV_MOS,
							CASE WHEN KWISCIV_NOS = '#' THEN '-' WHEN KWISCIV_NOS IS NULL OR KWISCIV_NOS = '' THEN 'x' ELSE KWISCIV_NOS END KWISCIV_NOS,
							CASE WHEN KWISCIV_SCOS = '#' THEN '-' WHEN KWISCIV_SCOS IS NULL OR KWISCIV_SCOS = '' THEN 'x' ELSE KWISCIV_SCOS END KWISCIV_SCOS,
							CASE WHEN KWISCIV_SOS = '#' THEN '-' WHEN KWISCIV_SOS IS NULL OR KWISCIV_SOS = '' THEN 'x' ELSE KWISCIV_SOS END KWISCIV_SOS,
							CASE WHEN KWISCIV_STOS = '#' THEN '-' WHEN KWISCIV_STOS IS NULL OR KWISCIV_STOS = '' THEN 'x' ELSE KWISCIV_STOS END KWISCIV_STOS,
							CASE WHEN KWISCIV_CES = '#' THEN '-' WHEN KWISCIV_CES IS NULL OR KWISCIV_CES = '' THEN 'x' ELSE KWISCIV_CES END KWISCIV_CES,
							CASE WHEN KWISCIV_VES = '#' THEN '-' WHEN KWISCIV_VES IS NULL OR KWISCIV_VES = '' THEN 'x' ELSE KWISCIV_VES END KWISCIV_VES,
							CASE WHEN KWISCIV_UES = '#' THEN '-' WHEN KWISCIV_UES IS NULL OR KWISCIV_UES = '' THEN 'x' ELSE KWISCIV_UES END KWISCIV_UES,
							CASE WHEN KWISCIV_PES = '#' THEN '-' WHEN KWISCIV_PES IS NULL OR KWISCIV_PES = '' THEN 'x' ELSE KWISCIV_PES END KWISCIV_PES,
							CASE WHEN KWISCIV_CPES = '#' THEN '-' WHEN KWISCIV_CPES IS NULL OR KWISCIV_CPES = '' THEN 'x' ELSE KWISCIV_CPES END KWISCIV_CPES,
							CASE WHEN KWISCIV_MES = '#' THEN '-' WHEN KWISCIV_MES IS NULL OR KWISCIV_MES = '' THEN 'x' ELSE KWISCIV_MES END KWISCIV_MES,
							CASE WHEN KWISCIV_NES = '#' THEN '-' WHEN KWISCIV_NES IS NULL OR KWISCIV_NES = '' THEN 'x' ELSE KWISCIV_NES END KWISCIV_NES,
							CASE WHEN KWISCIV_SCES = '#' THEN '-' WHEN KWISCIV_SCES IS NULL OR KWISCIV_SCES = '' THEN 'x' ELSE KWISCIV_SCES END KWISCIV_SCES,
							CASE WHEN KWISCIV_SES = '#' THEN '-' WHEN KWISCIV_SES IS NULL OR KWISCIV_SES = '' THEN 'x' ELSE KWISCIV_SES END KWISCIV_SES,
							CASE WHEN KWISCIV_STES = '#' THEN '-' WHEN KWISCIV_STES IS NULL OR KWISCIV_STES = '' THEN 'x' ELSE KWISCIV_STES END KWISCIV_STES,
							
							
							CASE WHEN KWISCIV_ESAD_LU = '#' THEN '-' WHEN KWISCIV_ESAD_LU IS NULL OR KWISCIV_ESAD_LU = '' THEN 'x' ELSE KWISCIV_ESAD_LU END KWISCIV_ESAD_LU,						
							CASE WHEN KWISCIV_ESAD_PR = '#' THEN '-' WHEN KWISCIV_ESAD_PR IS NULL OR KWISCIV_ESAD_PR = '' THEN 'x' ELSE KWISCIV_ESAD_PR END KWISCIV_ESAD_PR,				
							CASE WHEN KWISCIV_ESAD_WR = '#' THEN '-' WHEN KWISCIV_ESAD_WR IS NULL OR KWISCIV_ESAD_WR = '' THEN 'x' ELSE KWISCIV_ESAD_WR END KWISCIV_ESAD_WR,				
							CASE WHEN KWISCIV_ESAD_PS = '#' THEN '-' WHEN KWISCIV_ESAD_PS IS NULL OR KWISCIV_ESAD_PS = '' THEN 'x' ELSE KWISCIV_ESAD_PS END KWISCIV_ESAD_PS,				
							CASE WHEN KWISCIV_ESAD_ALLIQ = '#' THEN '-' WHEN KWISCIV_ESAD_ALLIQ IS NULL OR KWISCIV_ESAD_ALLIQ = '' THEN 'x' ELSE KWISCIV_ESAD_ALLIQ END KWISCIV_ESAD_ALLIQ,				
								
							
							CASE WHEN KWISCIV_IDXS_LU = '#' THEN '-' WHEN KWISCIV_IDXS_LU IS NULL OR KWISCIV_IDXS_LU = '' THEN 'x' ELSE KWISCIV_IDXS_LU END KWISCIV_IDXS_LU,						      
							CASE WHEN KWISCIV_IDXS_PR = '#' THEN '-' WHEN KWISCIV_IDXS_PR IS NULL OR KWISCIV_IDXS_PR = '' THEN 'x' ELSE KWISCIV_IDXS_PR END KWISCIV_IDXS_PR,				          
							CASE WHEN KWISCIV_IDXS_WR = '#' THEN '-' WHEN KWISCIV_IDXS_WR IS NULL OR KWISCIV_IDXS_WR = '' THEN 'x' ELSE KWISCIV_IDXS_WR END KWISCIV_IDXS_WR,				          
							CASE WHEN KWISCIV_IDXS_PS = '#' THEN '-' WHEN KWISCIV_IDXS_PS IS NULL OR KWISCIV_IDXS_PS = '' THEN 'x' ELSE KWISCIV_IDXS_PS END KWISCIV_IDXS_PS,				          
							CASE WHEN KWISCIV_IDXS_ALLIQ = '#' THEN '-' WHEN KWISCIV_IDXS_ALLIQ IS NULL OR KWISCIV_IDXS_ALLIQ = '' THEN 'x' ELSE KWISCIV_IDXS_ALLIQ END KWISCIV_IDXS_ALLIQ,		
							
														
							CASE WHEN KWISCIV_PERCNT_LU = '#' THEN '-' WHEN KWISCIV_PERCNT_LU IS NULL OR KWISCIV_PERCNT_LU = '' THEN 'x' ELSE KWISCIV_PERCNT_LU END KWISCIV_PERCNT_LU,						      
							CASE WHEN KWISCIV_PERCNT_PR = '#' THEN '-' WHEN KWISCIV_PERCNT_PR IS NULL OR KWISCIV_PERCNT_PR = '' THEN 'x' ELSE KWISCIV_PERCNT_PR END KWISCIV_PERCNT_PR,				          
							CASE WHEN KWISCIV_PERCNT_WR = '#' THEN '-' WHEN KWISCIV_PERCNT_WR IS NULL OR KWISCIV_PERCNT_WR = '' THEN 'x' ELSE KWISCIV_PERCNT_WR END KWISCIV_PERCNT_WR,				          
							CASE WHEN KWISCIV_PERCNT_PS = '#' THEN '-' WHEN KWISCIV_PERCNT_PS IS NULL OR KWISCIV_PERCNT_PS = '' THEN 'x' ELSE KWISCIV_PERCNT_PS END KWISCIV_PERCNT_PS,				          
							CASE WHEN KWISCIV_PERCNT_ALLIQ = '#' THEN '-' WHEN KWISCIV_PERCNT_ALLIQ IS NULL OR KWISCIV_PERCNT_ALLIQ = '' THEN 'x' ELSE KWISCIV_PERCNT_ALLIQ END KWISCIV_PERCNT_ALLIQ,		
							
														
							CASE WHEN KWISCIV_CONFITVL_LU = '#' THEN '-' WHEN KWISCIV_CONFITVL_LU IS NULL OR KWISCIV_CONFITVL_LU = '' THEN 'x' ELSE KWISCIV_CONFITVL_LU END KWISCIV_CONFITVL_LU,						      
							CASE WHEN KWISCIV_CONFITVL_PR = '#' THEN '-' WHEN KWISCIV_CONFITVL_PR IS NULL OR KWISCIV_CONFITVL_PR = '' THEN 'x' ELSE KWISCIV_CONFITVL_PR END KWISCIV_CONFITVL_PR,				          
							CASE WHEN KWISCIV_CONFITVL_WR = '#' THEN '-' WHEN KWISCIV_CONFITVL_WR IS NULL OR KWISCIV_CONFITVL_WR = '' THEN 'x' ELSE KWISCIV_CONFITVL_WR END KWISCIV_CONFITVL_WR,				          
							CASE WHEN KWISCIV_CONFITVL_PS = '#' THEN '-' WHEN KWISCIV_CONFITVL_PS IS NULL OR KWISCIV_CONFITVL_PS = '' THEN 'x' ELSE KWISCIV_CONFITVL_PS END KWISCIV_CONFITVL_PS,				          
							CASE WHEN KWISCIV_CONFITVL_ALLIQ = '#' THEN '-' WHEN KWISCIV_CONFITVL_ALLIQ IS NULL OR KWISCIV_CONFITVL_ALLIQ = '' THEN 'x' ELSE KWISCIV_CONFITVL_ALLIQ END KWISCIV_CONFITVL_ALLIQ,		
							
							
							CASE WHEN KWISCIV_QD_LU = '#' THEN '-' WHEN KWISCIV_QD_LU IS NULL OR KWISCIV_QD_LU = '' THEN 'x' ELSE KWISCIV_QD_LU END KWISCIV_QD_LU,						      
							CASE WHEN KWISCIV_QD_PR = '#' THEN '-' WHEN KWISCIV_QD_PR IS NULL OR KWISCIV_QD_PR = '' THEN 'x' ELSE KWISCIV_QD_PR END KWISCIV_QD_PR,				          
							CASE WHEN KWISCIV_QD_WR = '#' THEN '-' WHEN KWISCIV_QD_WR IS NULL OR KWISCIV_QD_WR = '' THEN 'x' ELSE KWISCIV_QD_WR END KWISCIV_QD_WR,				          
							CASE WHEN KWISCIV_QD_PS = '#' THEN '-' WHEN KWISCIV_QD_PS IS NULL OR KWISCIV_QD_PS = '' THEN 'x' ELSE KWISCIV_QD_PS END KWISCIV_QD_PS,				          
							CASE WHEN KWISCIV_QD_ALLIQ = '#' THEN '-' WHEN KWISCIV_QD_ALLIQ IS NULL OR KWISCIV_QD_ALLIQ = '' THEN 'x' ELSE KWISCIV_QD_ALLIQ END KWISCIV_QD_ALLIQ,		
							
							
							CASE WHEN KWISCIV_SIOS = '#' THEN '-' WHEN KWISCIV_SIOS IS NULL OR KWISCIV_SIOS = '' THEN 'x' ELSE KWISCIV_SIOS END KWISCIV_SIOS,
							CASE WHEN KWISCIV_VCOS = '#' THEN '-' WHEN KWISCIV_VCOS IS NULL OR KWISCIV_VCOS = '' THEN 'x' ELSE KWISCIV_VCOS END KWISCIV_VCOS,
							CASE WHEN KWISCIV_INOS = '#' THEN '-' WHEN KWISCIV_INOS IS NULL OR KWISCIV_INOS = '' THEN 'x' ELSE KWISCIV_INOS END KWISCIV_INOS,
							CASE WHEN KWISCIV_BDOS = '#' THEN '-' WHEN KWISCIV_BDOS IS NULL OR KWISCIV_BDOS = '' THEN 'x' ELSE KWISCIV_BDOS END KWISCIV_BDOS,
							CASE WHEN KWISCIV_MROS = '#' THEN '-' WHEN KWISCIV_MROS IS NULL OR KWISCIV_MROS = '' THEN 'x' ELSE KWISCIV_MROS END KWISCIV_MROS,
							CASE WHEN KWISCIV_VPOS = '#' THEN '-' WHEN KWISCIV_VPOS IS NULL OR KWISCIV_VPOS = '' THEN 'x' ELSE KWISCIV_VPOS END KWISCIV_VPOS,
							CASE WHEN KWISCIV_DSOS = '#' THEN '-' WHEN KWISCIV_DSOS IS NULL OR KWISCIV_DSOS = '' THEN 'x' ELSE KWISCIV_DSOS END KWISCIV_DSOS,
							CASE WHEN KWISCIV_AROS = '#' THEN '-' WHEN KWISCIV_AROS IS NULL OR KWISCIV_AROS = '' THEN 'x' ELSE KWISCIV_AROS END KWISCIV_AROS,
							CASE WHEN KWISCIV_SSOS = '#' THEN '-' WHEN KWISCIV_SSOS IS NULL OR KWISCIV_SSOS = '' THEN 'x' ELSE KWISCIV_SSOS END KWISCIV_SSOS,
							CASE WHEN KWISCIV_CDOS = '#' THEN '-' WHEN KWISCIV_CDOS IS NULL OR KWISCIV_CDOS = '' THEN 'x' ELSE KWISCIV_CDOS END KWISCIV_CDOS,
							CASE WHEN KWISCIV_SIES = '#' THEN '-' WHEN KWISCIV_SIES IS NULL OR KWISCIV_SIES = '' THEN 'x' ELSE KWISCIV_SIES END KWISCIV_SIES,
							CASE WHEN KWISCIV_VCES = '#' THEN '-' WHEN KWISCIV_VCES IS NULL OR KWISCIV_VCES = '' THEN 'x' ELSE KWISCIV_VCES END KWISCIV_VCES,
							CASE WHEN KWISCIV_INES = '#' THEN '-' WHEN KWISCIV_INES IS NULL OR KWISCIV_INES = '' THEN 'x' ELSE KWISCIV_INES END KWISCIV_INES,
							CASE WHEN KWISCIV_BDES = '#' THEN '-' WHEN KWISCIV_BDES IS NULL OR KWISCIV_BDES = '' THEN 'x' ELSE KWISCIV_BDES END KWISCIV_BDES,
							CASE WHEN KWISCIV_MRES = '#' THEN '-' WHEN KWISCIV_MRES IS NULL OR KWISCIV_MRES = '' THEN 'x' ELSE KWISCIV_MRES END KWISCIV_MRES,
							CASE WHEN KWISCIV_VPES = '#' THEN '-' WHEN KWISCIV_VPES IS NULL OR KWISCIV_VPES = '' THEN 'x' ELSE KWISCIV_VPES END KWISCIV_VPES,
							CASE WHEN KWISCIV_DSES = '#' THEN '-' WHEN KWISCIV_DSES IS NULL OR KWISCIV_DSES = '' THEN 'x' ELSE KWISCIV_DSES END KWISCIV_DSES,
							CASE WHEN KWISCIV_ARES = '#' THEN '-' WHEN KWISCIV_ARES IS NULL OR KWISCIV_ARES = '' THEN 'x' ELSE KWISCIV_ARES END KWISCIV_ARES,
							CASE WHEN KWISCIV_SSES = '#' THEN '-' WHEN KWISCIV_SSES IS NULL OR KWISCIV_SSES = '' THEN 'x' ELSE KWISCIV_SSES END KWISCIV_SSES,
							CASE WHEN KWISCIV_CDES = '#' THEN '-' WHEN KWISCIV_CDES IS NULL OR KWISCIV_CDES = '' THEN 'x' ELSE KWISCIV_CDES END KWISCIV_CDES,
							
							CASE WHEN KWISCIV2_ESAD_LU = '#' THEN '-' WHEN KWISCIV2_ESAD_LU IS NULL OR KWISCIV2_ESAD_LU = '' THEN 'x' ELSE KWISCIV2_ESAD_LU END KWISCIV2_ESAD_LU,						
							CASE WHEN KWISCIV2_ESAD_PR = '#' THEN '-' WHEN KWISCIV2_ESAD_PR IS NULL OR KWISCIV2_ESAD_PR = '' THEN 'x' ELSE KWISCIV2_ESAD_PR END KWISCIV2_ESAD_PR,				
							CASE WHEN KWISCIV2_ESAD_WR = '#' THEN '-' WHEN KWISCIV2_ESAD_WR IS NULL OR KWISCIV2_ESAD_WR = '' THEN 'x' ELSE KWISCIV2_ESAD_WR END KWISCIV2_ESAD_WR,				
							CASE WHEN KWISCIV2_ESAD_PS = '#' THEN '-' WHEN KWISCIV2_ESAD_PS IS NULL OR KWISCIV2_ESAD_PS = '' THEN 'x' ELSE KWISCIV2_ESAD_PS END KWISCIV2_ESAD_PS,				
							CASE WHEN KWISCIV2_ESAD_ALLIQ = '#' THEN '-' WHEN KWISCIV2_ESAD_ALLIQ IS NULL OR KWISCIV2_ESAD_ALLIQ = '' THEN 'x' ELSE KWISCIV2_ESAD_ALLIQ END KWISCIV2_ESAD_ALLIQ,				
							
					
							CASE WHEN KWISCIV2_IDXS_LU = '#' THEN '-' WHEN KWISCIV2_IDXS_LU IS NULL OR KWISCIV2_IDXS_LU = '' THEN 'x' ELSE KWISCIV2_IDXS_LU END KWISCIV2_IDXS_LU,						      
							CASE WHEN KWISCIV2_IDXS_PR = '#' THEN '-' WHEN KWISCIV2_IDXS_PR IS NULL OR KWISCIV2_IDXS_PR = '' THEN 'x' ELSE KWISCIV2_IDXS_PR END KWISCIV2_IDXS_PR,				          
							CASE WHEN KWISCIV2_IDXS_WR = '#' THEN '-' WHEN KWISCIV2_IDXS_WR IS NULL OR KWISCIV2_IDXS_WR = '' THEN 'x' ELSE KWISCIV2_IDXS_WR END KWISCIV2_IDXS_WR,				          
							CASE WHEN KWISCIV2_IDXS_PS = '#' THEN '-' WHEN KWISCIV2_IDXS_PS IS NULL OR KWISCIV2_IDXS_PS = '' THEN 'x' ELSE KWISCIV2_IDXS_PS END KWISCIV2_IDXS_PS,				          
							CASE WHEN KWISCIV2_IDXS_ALLIQ = '#' THEN '-' WHEN KWISCIV2_IDXS_ALLIQ IS NULL OR KWISCIV2_IDXS_ALLIQ = '' THEN 'x' ELSE KWISCIV2_IDXS_ALLIQ END KWISCIV2_IDXS_ALLIQ,		
				
							CASE WHEN KWISCIV2_PERCNT_LU = '#' THEN '-' WHEN KWISCIV2_PERCNT_LU IS NULL OR KWISCIV2_PERCNT_LU = '' THEN 'x' ELSE KWISCIV2_PERCNT_LU END KWISCIV2_PERCNT_LU,						      
							CASE WHEN KWISCIV2_PERCNT_PR = '#' THEN '-' WHEN KWISCIV2_PERCNT_PR IS NULL OR KWISCIV2_PERCNT_PR = '' THEN 'x' ELSE KWISCIV2_PERCNT_PR END KWISCIV2_PERCNT_PR,				          
							CASE WHEN KWISCIV2_PERCNT_WR = '#' THEN '-' WHEN KWISCIV2_PERCNT_WR IS NULL OR KWISCIV2_PERCNT_WR = '' THEN 'x' ELSE KWISCIV2_PERCNT_WR END KWISCIV2_PERCNT_WR,				          
							CASE WHEN KWISCIV2_PERCNT_PS = '#' THEN '-' WHEN KWISCIV2_PERCNT_PS IS NULL OR KWISCIV2_PERCNT_PS = '' THEN 'x' ELSE KWISCIV2_PERCNT_PS END KWISCIV2_PERCNT_PS,				          
							CASE WHEN KWISCIV2_PERCNT_ALLIQ = '#' THEN '-' WHEN KWISCIV2_PERCNT_ALLIQ IS NULL OR KWISCIV2_PERCNT_ALLIQ = '' THEN 'x' ELSE KWISCIV2_PERCNT_ALLIQ END KWISCIV2_PERCNT_ALLIQ,		
				
							CASE WHEN KWISCIV2_CONFITVL_LU = '#' THEN '-' WHEN KWISCIV2_CONFITVL_LU IS NULL OR KWISCIV2_CONFITVL_LU = '' THEN 'x' ELSE KWISCIV2_CONFITVL_LU END KWISCIV2_CONFITVL_LU,						      
							CASE WHEN KWISCIV2_CONFITVL_PR = '#' THEN '-' WHEN KWISCIV2_CONFITVL_PR IS NULL OR KWISCIV2_CONFITVL_PR = '' THEN 'x' ELSE KWISCIV2_CONFITVL_PR END KWISCIV2_CONFITVL_PR,				          
							CASE WHEN KWISCIV2_CONFITVL_WR = '#' THEN '-' WHEN KWISCIV2_CONFITVL_WR IS NULL OR KWISCIV2_CONFITVL_WR = '' THEN 'x' ELSE KWISCIV2_CONFITVL_WR END KWISCIV2_CONFITVL_WR,				          
							CASE WHEN KWISCIV2_CONFITVL_PS = '#' THEN '-' WHEN KWISCIV2_CONFITVL_PS IS NULL OR KWISCIV2_CONFITVL_PS = '' THEN 'x' ELSE KWISCIV2_CONFITVL_PS END KWISCIV2_CONFITVL_PS,				          
							CASE WHEN KWISCIV2_CONFITVL_ALLIQ = '#' THEN '-' WHEN KWISCIV2_CONFITVL_ALLIQ IS NULL OR KWISCIV2_CONFITVL_ALLIQ = '' THEN 'x' ELSE KWISCIV2_CONFITVL_ALLIQ END KWISCIV2_CONFITVL_ALLIQ,		
							
							
							S1.REMARKS,
							CASE WHEN EXCT_ALL_INTELL = '#' THEN '-' WHEN EXCT_ALL_INTELL IS NULL OR EXCT_ALL_INTELL = '' THEN 'x' ELSE EXCT_ALL_INTELL END EXCT_ALL_INTELL,
							CASE WHEN EXCT_SHORT_INTELL = '#' THEN '-' WHEN EXCT_SHORT_INTELL IS NULL OR EXCT_SHORT_INTELL = '' THEN 'x' ELSE EXCT_SHORT_INTELL END EXCT_SHORT_INTELL,
							CASE WHEN EXCT_FLUID_INFER = '#' THEN '-' WHEN EXCT_FLUID_INFER IS NULL OR EXCT_FLUID_INFER = '' THEN 'x' ELSE EXCT_FLUID_INFER END EXCT_FLUID_INFER,
							CASE WHEN EXCT_BASIC_VISUAL = '#' THEN '-' WHEN EXCT_BASIC_VISUAL IS NULL OR EXCT_BASIC_VISUAL = '' THEN 'x' ELSE EXCT_BASIC_VISUAL END EXCT_BASIC_VISUAL,
							CASE WHEN ICID_ALL_INTELL = '#' THEN '-' WHEN ICID_ALL_INTELL IS NULL OR ICID_ALL_INTELL = '' THEN 'x' ELSE ICID_ALL_INTELL END ICID_ALL_INTELL,
							CASE WHEN ICID_SHORT_INTELL = '#' THEN '-' WHEN ICID_SHORT_INTELL IS NULL OR ICID_SHORT_INTELL = '' THEN 'x' ELSE ICID_SHORT_INTELL END ICID_SHORT_INTELL,
							CASE WHEN ICID_FLUID_INFER = '#' THEN '-' WHEN ICID_FLUID_INFER IS NULL OR ICID_FLUID_INFER = '' THEN 'x' ELSE ICID_FLUID_INFER END ICID_FLUID_INFER,
							CASE WHEN ICID_BASIC_VISUAL = '#' THEN '-' WHEN ICID_BASIC_VISUAL IS NULL OR ICID_BASIC_VISUAL = '' THEN 'x' ELSE ICID_BASIC_VISUAL END ICID_BASIC_VISUAL,
							CASE WHEN VIFS_FORE_BACK = '#' THEN '-' WHEN VIFS_FORE_BACK IS NULL OR VIFS_FORE_BACK = '' THEN 'x' ELSE VIFS_FORE_BACK END VIFS_FORE_BACK,
							CASE WHEN VIFS_SHAPE_COMP = '#' THEN '-' WHEN VIFS_SHAPE_COMP IS NULL OR VIFS_SHAPE_COMP = '' THEN 'x' ELSE VIFS_SHAPE_COMP END VIFS_SHAPE_COMP,
							CASE WHEN VIFS_MATCH = '#' THEN '-' WHEN VIFS_MATCH IS NULL OR VIFS_MATCH = '' THEN 'x' ELSE VIFS_MATCH END VIFS_MATCH,
							CASE WHEN VIFS_ORDER_INFER = '#' THEN '-' WHEN VIFS_ORDER_INFER IS NULL OR VIFS_ORDER_INFER = '' THEN 'x' ELSE VIFS_ORDER_INFER END VIFS_ORDER_INFER,
							CASE WHEN VIFS_PATT_FIND = '#' THEN '-' WHEN VIFS_PATT_FIND IS NULL OR VIFS_PATT_FIND = '' THEN 'x' ELSE VIFS_PATT_FIND END VIFS_PATT_FIND,
							CASE WHEN VIFS_DRAW_INFER = '#' THEN '-' WHEN VIFS_DRAW_INFER IS NULL OR VIFS_DRAW_INFER = '' THEN 'x' ELSE VIFS_DRAW_INFER END VIFS_DRAW_INFER,
							CASE WHEN VIFS_CATEGORIZ = '#' THEN '-' WHEN VIFS_CATEGORIZ IS NULL OR VIFS_CATEGORIZ = '' THEN 'x' ELSE VIFS_CATEGORIZ END VIFS_CATEGORIZ,
							CASE WHEN VIEXC_FORE_BACK = '#' THEN '-' WHEN VIEXC_FORE_BACK IS NULL OR VIEXC_FORE_BACK = '' THEN 'x' ELSE VIEXC_FORE_BACK END VIEXC_FORE_BACK,
							CASE WHEN VIEXC_SHAPE_COMP = '#' THEN '-' WHEN VIEXC_SHAPE_COMP IS NULL OR VIEXC_SHAPE_COMP = '' THEN 'x' ELSE VIEXC_SHAPE_COMP END VIEXC_SHAPE_COMP,
							CASE WHEN VIEXC_MATCH = '#' THEN '-' WHEN VIEXC_MATCH IS NULL OR VIEXC_MATCH = '' THEN 'x' ELSE VIEXC_MATCH END VIEXC_MATCH,
							CASE WHEN VIEXC_ORDER_INFER = '#' THEN '-' WHEN VIEXC_ORDER_INFER IS NULL OR VIEXC_ORDER_INFER = '' THEN 'x' ELSE VIEXC_ORDER_INFER END VIEXC_ORDER_INFER,
							CASE WHEN VIEXC_PATT_FIND = '#' THEN '-' WHEN VIEXC_PATT_FIND IS NULL OR VIEXC_PATT_FIND = '' THEN 'x' ELSE VIEXC_PATT_FIND END VIEXC_PATT_FIND,
							CASE WHEN VIEXC_DRAW_INFER = '#' THEN '-' WHEN VIEXC_DRAW_INFER IS NULL OR VIEXC_DRAW_INFER = '' THEN 'x' ELSE VIEXC_DRAW_INFER END VIEXC_DRAW_INFER,
							CASE WHEN VIEXC_CATEGORIZ = '#' THEN '-' WHEN VIEXC_CATEGORIZ IS NULL OR VIEXC_CATEGORIZ = '' THEN 'x' ELSE VIEXC_CATEGORIZ END VIEXC_CATEGORIZ,
							CASE WHEN CEXC_MEMORY_SELECT = '#' THEN '-' WHEN CEXC_MEMORY_SELECT IS NULL OR CEXC_MEMORY_SELECT = '' THEN 'x' ELSE CEXC_MEMORY_SELECT END CEXC_MEMORY_SELECT,
							CASE WHEN CEXC_RECOG_MEMORY = '#' THEN '-' WHEN CEXC_RECOG_MEMORY IS NULL OR CEXC_RECOG_MEMORY = '' THEN 'x' ELSE CEXC_RECOG_MEMORY END CEXC_RECOG_MEMORY,
							CASE WHEN CCOMP_MEMORY_SELECT = '#' THEN '-' WHEN CCOMP_MEMORY_SELECT IS NULL OR CCOMP_MEMORY_SELECT = '' THEN 'x' ELSE CCOMP_MEMORY_SELECT END CCOMP_MEMORY_SELECT,
							CASE WHEN CCOMP_RECOG_MEMORY = '#' THEN '-' WHEN CCOMP_RECOG_MEMORY IS NULL OR CCOMP_RECOG_MEMORY = '' THEN 'x' ELSE CCOMP_RECOG_MEMORY END CCOMP_RECOG_MEMORY,
							CASE WHEN SC_PAIR_ASSO = '#' THEN '-' WHEN SC_PAIR_ASSO IS NULL OR SC_PAIR_ASSO = '' THEN 'x' ELSE SC_PAIR_ASSO END SC_PAIR_ASSO,
							CASE WHEN SC_IMMED_RECOG = '#' THEN '-' WHEN SC_IMMED_RECOG IS NULL OR SC_IMMED_RECOG = '' THEN 'x' ELSE SC_IMMED_RECOG END SC_IMMED_RECOG,
							CASE WHEN SC_IMMED_REMEMBER = '#' THEN '-' WHEN SC_IMMED_REMEMBER IS NULL OR SC_IMMED_REMEMBER = '' THEN 'x' ELSE SC_IMMED_REMEMBER END SC_IMMED_REMEMBER,
							CASE WHEN SC_SUSTAIN_ATT = '#' THEN '-' WHEN SC_SUSTAIN_ATT IS NULL OR SC_SUSTAIN_ATT = '' THEN 'x' ELSE SC_SUSTAIN_ATT END SC_SUSTAIN_ATT,
							CASE WHEN SC_DELAY_RECOG = '#' THEN '-' WHEN SC_DELAY_RECOG IS NULL OR SC_DELAY_RECOG = '' THEN 'x' ELSE SC_DELAY_RECOG END SC_DELAY_RECOG,
							CASE WHEN EXC_PAIR_ASSO = '#' THEN '-' WHEN EXC_PAIR_ASSO IS NULL OR EXC_PAIR_ASSO = '' THEN 'x' ELSE EXC_PAIR_ASSO END EXC_PAIR_ASSO,
							CASE WHEN EXC_IMMED_RECOG = '#' THEN '-' WHEN EXC_IMMED_RECOG IS NULL OR EXC_IMMED_RECOG = '' THEN 'x' ELSE EXC_IMMED_RECOG END EXC_IMMED_RECOG,
							CASE WHEN EXC_IMMED_REMEMBER = '#' THEN '-' WHEN EXC_IMMED_REMEMBER IS NULL OR EXC_IMMED_REMEMBER = '' THEN 'x' ELSE EXC_IMMED_REMEMBER END EXC_IMMED_REMEMBER,
							CASE WHEN EXC_SUSTAIN_ATT = '#' THEN '-' WHEN EXC_SUSTAIN_ATT IS NULL OR EXC_SUSTAIN_ATT = '' THEN 'x' ELSE EXC_SUSTAIN_ATT END EXC_SUSTAIN_ATT,
							CASE WHEN EXC_DELAY_RECOG = '#' THEN '-' WHEN EXC_DELAY_RECOG IS NULL OR EXC_DELAY_RECOG = '' THEN 'x' ELSE EXC_DELAY_RECOG END EXC_DELAY_RECOG,
							CASE WHEN P_RS_COMPSC = '#' THEN '-' WHEN P_RS_COMPSC IS NULL OR P_RS_COMPSC = '' THEN 'x' ELSE P_RS_COMPSC END P_RS_COMPSC,
							CASE WHEN P_EC_COMPSC = '#' THEN '-' WHEN P_EC_COMPSC IS NULL OR P_EC_COMPSC = '' THEN 'x' ELSE P_EC_COMPSC END P_EC_COMPSC,
							CASE WHEN SC_ATTENTION = '#' THEN '-' WHEN SC_ATTENTION IS NULL OR SC_ATTENTION = '' THEN 'x' ELSE SC_ATTENTION END SC_ATTENTION,
							CASE WHEN SC_ACTIV_LEVEL = '#' THEN '-' WHEN SC_ACTIV_LEVEL IS NULL OR SC_ACTIV_LEVEL = '' THEN 'x' ELSE SC_ACTIV_LEVEL END SC_ACTIV_LEVEL,
							CASE WHEN SC_IMPULS = '#' THEN '-' WHEN SC_IMPULS IS NULL OR SC_IMPULS = '' THEN 'x' ELSE SC_IMPULS END SC_IMPULS,
							CASE WHEN SC_ADAPTABILITY = '#' THEN '-' WHEN SC_ADAPTABILITY IS NULL OR SC_ADAPTABILITY = '' THEN 'x' ELSE SC_ADAPTABILITY END SC_ADAPTABILITY,
							CASE WHEN SC_MOOD_CONFID = '#' THEN '-' WHEN SC_MOOD_CONFID IS NULL OR SC_MOOD_CONFID = '' THEN 'x' ELSE SC_MOOD_CONFID END SC_MOOD_CONFID,
							CASE WHEN SC_FEEL_EMO = '#' THEN '-' WHEN SC_FEEL_EMO IS NULL OR SC_FEEL_EMO = '' THEN 'x' ELSE SC_FEEL_EMO END SC_FEEL_EMO,
							CASE WHEN SC_SOCIABILITY = '#' THEN '-' WHEN SC_SOCIABILITY IS NULL OR SC_SOCIABILITY = '' THEN 'x' ELSE SC_SOCIABILITY END SC_SOCIABILITY,
							CASE WHEN SC_CONTROL = '#' THEN '-' WHEN SC_CONTROL IS NULL OR SC_CONTROL = '' THEN 'x' ELSE SC_CONTROL END SC_CONTROL,
							CASE WHEN EXC_ATTENTION = '#' THEN '-' WHEN EXC_ATTENTION IS NULL OR EXC_ATTENTION = '' THEN 'x' ELSE EXC_ATTENTION END EXC_ATTENTION,
							CASE WHEN EXC_ACTIV_LEVEL = '#' THEN '-' WHEN EXC_ACTIV_LEVEL IS NULL OR EXC_ACTIV_LEVEL = '' THEN 'x' ELSE EXC_ACTIV_LEVEL END EXC_ACTIV_LEVEL,
							CASE WHEN EXC_IMPULS = '#' THEN '-' WHEN EXC_IMPULS IS NULL OR EXC_IMPULS = '' THEN 'x' ELSE EXC_IMPULS END EXC_IMPULS,
							CASE WHEN EXC_ADAPTABILITY = '#' THEN '-' WHEN EXC_ADAPTABILITY IS NULL OR EXC_ADAPTABILITY = '' THEN 'x' ELSE EXC_ADAPTABILITY END EXC_ADAPTABILITY,
							CASE WHEN EXC_MOOD_CONFID = '#' THEN '-' WHEN EXC_MOOD_CONFID IS NULL OR EXC_MOOD_CONFID = '' THEN 'x' ELSE EXC_MOOD_CONFID END EXC_MOOD_CONFID,
							CASE WHEN EXC_FEEL_EMO = '#' THEN '-' WHEN EXC_FEEL_EMO IS NULL OR EXC_FEEL_EMO = '' THEN 'x' ELSE EXC_FEEL_EMO END EXC_FEEL_EMO,
							CASE WHEN EXC_SOCIABILITY = '#' THEN '-' WHEN EXC_SOCIABILITY IS NULL OR EXC_SOCIABILITY = '' THEN 'x' ELSE EXC_SOCIABILITY END EXC_SOCIABILITY,
							CASE WHEN EXC_CONTROL = '#' THEN '-' WHEN EXC_CONTROL IS NULL OR EXC_CONTROL = '' THEN 'x' ELSE EXC_CONTROL END EXC_CONTROL 
						FROM T_NEUROPSY_S1 S1 
                        JOIN T_PERFORM_TERM PT
						ON S1.PERFORM_CNT = PT.PERFORM_CNT
						JOIN T_S1_IKLEITER SI
                        ON S1.TARGET_ID = SI.TARGET_ID
                        AND S1.PERFORM_CNT = SI.PERFORM_CNT
                        AND S1.RND_ID = SI.RND_ID
						LEFT JOIN T_TARGET_MST TM
						ON S1.TARGET_ID = TM.TARGET_ID
						AND S1.RND_ID = TM.RND_ID
                        LEFT JOIN T_TARGET_DIS_MST TDM
                        ON TM.TARGET_ID = TDM.TARGET_ORG_ID
                        AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					    LEFT JOIN T_CODE_DTL DISE1
				        ON DISE1.CLASS_CD = 'DISE1'
				        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
				        LEFT JOIN T_CODE_DTL PTC
				        ON PTC.CLASS_CD = 'PT001'
				        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
				        LEFT JOIN T_PERFORM_MST PM
						ON TM.RND_ID = PM.RND_ID
						AND TM.TARGET_ID = PM.TARGET_ID
						AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
						AND S1.PERFORM_CNT = PM.PERFORM_CNT
				        WHERE 1=1
				        	AND TM.RND_ID = #{rndId}
				        	AND PM.STATUS != '0004'
				        	AND NOT PM.PERFORM_CNT = 2
				            AND NOT PM.PERFORM_CNT = 3
                            <if test="disClassDtl !=null and disClassDtl != '' ">
                            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
                            </if>
					        <if test="targetId !=null and targetId != '' ">
								AND TM.TARGET_ID = #{targetId}
							</if>
							<if test="targetDisId !=null and targetDisId != '' ">
								AND TM.TARGET_DIS_ID = #{targetDisId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,S1_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND TM.SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND S1.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (S1.TARGET_ID, S1.PERFORM_CNT, S1.RND_ID)
									IN (${schKeyWord})
							</if>
						) A
					) B
			WHERE 1=1 
				 AND NOT B.ALL_CHK = '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
		) T

	</select>
	
	<select id="selectNeuropsyAtaList" parameterType="map" resultMap="neuropsyAtaList">
		SELECT B.* FROM (
			SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
				SELECT
					NA.RND_ID,
					NA.TARGET_ID,
					TM.TARGET_DIS_ID,
					TM.BIRTH_YM,
					DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					PTC.CLASS_CD_DTL_NM PROTOCOL,
					PT.PERFORM_NM PERFORM_CNT_NM,
					PT.PERFORM_CNT,
					FN_CAL_AGE(TM.BIRTH_YM,ATA_EXEC_DATE) AGE,
					CONCAT(SUBSTR(ATA_EXEC_DATE,1,4) ,'-',SUBSTR(ATA_EXEC_DATE,5,2),'-',SUBSTR(ATA_EXEC_DATE,7,2)) ATA_EXEC_DATE,
					CASE WHEN ATAV_MISSZ = '#' THEN '-' WHEN ATAV_MISSZ IS NULL OR ATAV_MISSZ = '' THEN 'x' ELSE ATAV_MISSZ END ATAV_MISSZ,
					CASE WHEN ATAV_FALARMZ = '#' THEN '-' WHEN ATAV_FALARMZ IS NULL OR ATAV_FALARMZ = '' THEN 'x' ELSE ATAV_FALARMZ END ATAV_FALARMZ,
					CASE WHEN ATAV_REACTZ_AVG = '#' THEN '-' WHEN ATAV_REACTZ_AVG IS NULL OR ATAV_REACTZ_AVG = '' THEN 'x' ELSE ATAV_REACTZ_AVG END ATAV_REACTZ_AVG,
					CASE WHEN ATAV_REACTZ_DEV = '#' THEN '-' WHEN ATAV_REACTZ_DEV IS NULL OR ATAV_REACTZ_DEV = '' THEN 'x' ELSE ATAV_REACTZ_DEV END ATAV_REACTZ_DEV,
					CASE WHEN ATAV_MISST = '#' THEN '-' WHEN ATAV_MISST IS NULL OR ATAV_MISST = '' THEN 'x' ELSE ATAV_MISST END ATAV_MISST,
					CASE WHEN ATAV_FALARMT = '#' THEN '-' WHEN ATAV_FALARMT IS NULL OR ATAV_FALARMT ='' THEN 'x' ELSE ATAV_FALARMT END ATAV_FALARMT,
					CASE WHEN ATAV_REACTT_AVG = '#' THEN '-' WHEN ATAV_REACTT_AVG IS NULL OR ATAV_REACTT_AVG = '' THEN 'x' ELSE ATAV_REACTT_AVG END ATAV_REACTT_AVG,
					CASE WHEN ATAV_REACTT_DEV = '#' THEN '-' WHEN ATAV_REACTT_DEV IS NULL OR ATAV_REACTT_DEV = '' THEN 'x' ELSE ATAV_REACTT_DEV END ATAV_REACTT_DEV,
					CASE WHEN ATAH_MISSZ = '#' THEN '-' WHEN ATAH_MISSZ IS NULL OR ATAH_MISSZ = '' THEN 'x' ELSE ATAH_MISSZ END ATAH_MISSZ,
					CASE WHEN ATAH_FALARMZ = '#' THEN '-' WHEN ATAH_FALARMZ IS NULL OR ATAH_FALARMZ = '' THEN 'x' ELSE ATAH_FALARMZ END ATAH_FALARMZ,
					CASE WHEN ATAH_REACTZ_AVG = '#' THEN '-' WHEN ATAH_REACTZ_AVG IS NULL OR ATAH_REACTZ_AVG = '' THEN 'x' ELSE ATAH_REACTZ_AVG END ATAH_REACTZ_AVG,
					CASE WHEN ATAH_REACTZ_DEV = '#' THEN '-' WHEN ATAH_REACTZ_DEV IS NULL OR ATAH_REACTZ_DEV = '' THEN 'x' ELSE ATAH_REACTZ_DEV END ATAH_REACTZ_DEV,
					CASE WHEN ATAH_MISST = '#' THEN '-' WHEN ATAH_MISST IS NULL OR ATAH_MISST = '' THEN 'x' ELSE ATAH_MISST END ATAH_MISST,
					CASE WHEN ATAH_FALARMT = '#' THEN '-' WHEN ATAH_FALARMT IS NULL OR ATAH_FALARMT = '' OR NULL THEN 'x' ELSE ATAH_FALARMT END ATAH_FALARMT,
					CASE WHEN ATAH_REACTT_AVG = '#' THEN '-' WHEN ATAH_REACTT_AVG IS NULL OR ATAH_REACTT_AVG = '' THEN 'x' ELSE ATAH_REACTT_AVG END ATAH_REACTT_AVG,
					CASE WHEN ATAH_REACTT_DEV = '#' THEN '-' WHEN ATAH_REACTT_DEV IS NULL OR ATAH_REACTT_DEV = '' THEN 'x' ELSE ATAH_REACTT_DEV END ATAH_REACTT_DEV,
					NA.REMARKS
				FROM T_NEUROPSY_ATA NA 
				LEFT JOIN T_TARGET_MST TM
				ON NA.TARGET_ID = TM.TARGET_ID
				AND NA.RND_ID = TM.RND_ID
				JOIN T_PERFORM_TERM PT
				ON NA.PERFORM_CNT = PT.PERFORM_CNT
				LEFT JOIN T_TARGET_DIS_MST TDM
				ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			    LEFT JOIN T_CODE_DTL DISE1
		        ON DISE1.CLASS_CD = 'DISE1'
		        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		        LEFT JOIN T_CODE_DTL PTC
		        ON PTC.CLASS_CD = 'PT001'
		        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		        LEFT JOIN T_PERFORM_MST PM
				ON TM.RND_ID = PM.RND_ID
				AND TM.TARGET_ID = PM.TARGET_ID
				AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				AND NA.PERFORM_CNT = PM.PERFORM_CNT
		        JOIN (SELECT @ROWNUM:=0) AS R
		        WHERE 1=1
		        	AND TM.RND_ID = ${rndId}
		        	AND PM.STATUS != '0004'
		        	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
                    	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
                    </if>
		        	<if test="schKeyWord !='schTargetId' ">
				        <if test="targetId !=null and targetId != '' ">
							AND NA.TARGET_ID = #{targetId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,ATA_EXEC_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,ATA_EXEC_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND TM.SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND NA.PERFORM_CNT = ${performCnt}
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (NA.TARGET_ID, NA.PERFORM_CNT, NA.RND_ID, TM.DIS_CLASS_DTL)
								IN (${schKeyWord})
						</if>
					</if>
				ORDER BY NA.TARGET_ID, NA.PERFORM_CNT
			) A 
		) B
		WHERE 1=1
			<if test="schKeyWord == 'schTargetId' ">
				AND B.TARGET_ID = #{targetId}
				AND B.PERFORM_CNT = ${performCnt}
			</if> 
			 
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyAtaListTotal" parameterType="map" resultType="int">
	
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NA.TARGET_ID
			FROM T_NEUROPSY_ATA NA 
			LEFT JOIN T_TARGET_MST TM
			ON NA.TARGET_ID = TM.TARGET_ID
			AND NA.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NA.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
         	LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NA.PERFORM_CNT = PM.PERFORM_CNT
			
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
	        	AND PM.STATUS != '0004'
	        	AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NA.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,ATA_EXEC_DATE)&gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,ATA_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NA.PERFORM_CNT = ${performCnt}
				</if>
		) T

	</select>
	
	<select id="selectNeuropsyStroopList" parameterType="map" resultMap="neuropsyStroopList">
		SELECT B.* FROM (
			SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
				SELECT
					NS.RND_ID,
					NS.TARGET_ID,
					TM.TARGET_DIS_ID,
					DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					PTC.CLASS_CD_DTL_NM PROTOCOL,
					TM.BIRTH_YM,
					PT.PERFORM_NM PERFORM_CNT_NM,
					PT.PERFORM_CNT,
					FN_CAL_AGE(TM.BIRTH_YM,STROOP_EXEC_DATE) AGE,
					CONCAT(SUBSTR(STROOP_EXEC_DATE,1,4) ,'-',SUBSTR(STROOP_EXEC_DATE,5,2),'-',SUBSTR(STROOP_EXEC_DATE,7,2)) STROOP_EXEC_DATE,
					CASE WHEN WORD_R = '#' THEN '-' WHEN WORD_R IS NULL OR WORD_R = '' THEN 'x' ELSE WORD_R END WORD_R,
					CASE WHEN COLOR_R = '#' THEN '-' WHEN COLOR_R IS NULL OR COLOR_R = '' THEN 'x' ELSE COLOR_R END COLOR_R,
					CASE WHEN COLORWORD_R = '#' THEN '-' WHEN COLORWORD_R IS NULL OR COLORWORD_R = '' THEN 'x' ELSE COLORWORD_R END COLORWORD_R,
					CASE WHEN INTERFER_R = '#' THEN '-' WHEN INTERFER_R IS NULL OR INTERFER_R = '' THEN 'x' ELSE INTERFER_R END INTERFER_R,
					CASE WHEN WORD_T = '#' THEN '-' WHEN WORD_T IS NULL OR WORD_T = '' THEN 'x' ELSE WORD_T END WORD_T,
					CASE WHEN COLOR_T = '#' THEN '-' WHEN COLOR_T IS NULL OR COLOR_T = '' THEN 'x' ELSE COLOR_T END COLOR_T,
					CASE WHEN COLORWORD_T = '#' THEN '-' WHEN COLORWORD_T IS NULL OR COLORWORD_T = '' THEN 'x' ELSE COLORWORD_T END COLORWORD_T,
					CASE WHEN INTERFER_T = '#' THEN '-' WHEN INTERFER_T IS NULL OR INTERFER_T = '' THEN 'x' ELSE INTERFER_T END INTERFER_T,
					NS.REMARKS
				FROM T_NEUROPSY_STROOP NS 
				LEFT JOIN T_TARGET_MST TM
				ON NS.TARGET_ID = TM.TARGET_ID
				AND NS.RND_ID = TM.RND_ID
				JOIN T_PERFORM_TERM PT
				ON NS.PERFORM_CNT = PT.PERFORM_CNT
				LEFT JOIN T_TARGET_DIS_MST TDM
				ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				AND TM.TARGET_DIS_ID = TDM.TARGET_ID
				LEFT JOIN T_CODE_DTL DISE1
		        ON DISE1.CLASS_CD = 'DISE1'
		        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		        LEFT JOIN T_CODE_DTL PTC
		        ON PTC.CLASS_CD = 'PT001'
		        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		        LEFT JOIN T_PERFORM_MST PM
				ON TM.RND_ID = PM.RND_ID
				AND TM.TARGET_ID = PM.TARGET_ID
				AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				AND NS.PERFORM_CNT = PM.PERFORM_CNT
		        JOIN (SELECT @ROWNUM:=0) AS R
		        WHERE 1=1
		        	AND TM.RND_ID = ${rndId}
		        	AND PM.STATUS != '0004'
		        	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
		        	<if test="schKeyWord !='schTargetId' ">
				        <if test="targetId !=null and targetId != '' ">
							AND NS.TARGET_ID = #{targetId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,STROOP_EXEC_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,STROOP_EXEC_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND NS.PERFORM_CNT = ${performCnt}
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (NS.TARGET_ID, NS.PERFORM_CNT, NS.RND_ID, TM.DIS_CLASS_DTL)
								IN (${schKeyWord})
						</if>
					</if>
				ORDER BY NS.TARGET_ID, NS.PERFORM_CNT
			) A
		)B
		WHERE 1=1
			<if test="schKeyWord == 'schTargetId' ">
				AND B.TARGET_ID = #{targetId}
				AND B.PERFORM_CNT = ${performCnt}
			</if> 
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyStroopListTotal" parameterType="map" resultType="int">
	
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NS.TARGET_ID
			FROM T_NEUROPSY_STROOP NS 
			LEFT JOIN T_TARGET_MST TM
			ON NS.TARGET_ID = TM.TARGET_ID
			AND NS.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NS.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			LEFT JOIN T_CODE_DTL CD
	        ON TM.DIS_CLASS_DTL = CD.CLASS_CD_DTL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NS.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
	        	AND PM.STATUS != '0004'
	        	AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND TM.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,STROOP_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,STROOP_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NS.PERFORM_CNT = ${performCnt}
				</if>
				
		) T

	</select>
	
	
	<update id="insertNeuropsyAta" parameterType="map">
		INSERT INTO T_NEUROPSY_ATA(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,ATA_EXEC_DATE
			,ATAV_MISSZ
			,ATAV_FALARMZ
			,ATAV_REACTZ_AVG
			,ATAV_REACTZ_DEV
			,ATAV_MISST
			,ATAV_FALARMT
			,ATAV_REACTT_AVG
			,ATAV_REACTT_DEV
			,ATAH_MISSZ
			,ATAH_FALARMZ
			,ATAH_REACTZ_AVG
			,ATAH_REACTZ_DEV
			,ATAH_MISST
			,ATAH_FALARMT
			,ATAH_REACTT_AVG
			,ATAH_REACTT_DEV
			,REMARKS
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{ataExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{atavMissz, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atavFalarmz, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atavReactzAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atavReactzDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atavMisst, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atavFalarmt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atavReacttAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atavReacttDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahMissz, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahFalarmz, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahReactzAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahReactzDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahMisst, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahFalarmt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahReacttAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{atahReacttDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			ATA_EXEC_DATE = #{ataExecDate, jdbcType=VARCHAR}
			,ATAV_MISSZ = IFNULL(LOWER(#{atavMissz , jdbcType=VARCHAR}), 'x')
			,ATAV_FALARMZ = IFNULL(LOWER(#{atavFalarmz , jdbcType=VARCHAR}), 'x')
			,ATAV_REACTZ_AVG = IFNULL(LOWER(#{atavReactzAvg , jdbcType=VARCHAR}), 'x')
			,ATAV_REACTZ_DEV = IFNULL(LOWER(#{atavReactzDev , jdbcType=VARCHAR}), 'x')
			,ATAV_MISST = IFNULL(LOWER(#{atavMisst , jdbcType=VARCHAR}), 'x')
			,ATAV_FALARMT = IFNULL(LOWER(#{atavFalarmt , jdbcType=VARCHAR}), 'x')
			,ATAV_REACTT_AVG = IFNULL(LOWER(#{atavReacttAvg , jdbcType=VARCHAR}), 'x')
			,ATAV_REACTT_DEV = IFNULL(LOWER(#{atavReacttDev , jdbcType=VARCHAR}), 'x')
			,ATAH_MISSZ = IFNULL(LOWER(#{atahMissz , jdbcType=VARCHAR}), 'x')
			,ATAH_FALARMZ = IFNULL(LOWER(#{atahFalarmz , jdbcType=VARCHAR}), 'x')
			,ATAH_REACTZ_AVG = IFNULL(LOWER(#{atahReactzAvg , jdbcType=VARCHAR}), 'x')
			,ATAH_REACTZ_DEV = IFNULL(LOWER(#{atahReactzDev , jdbcType=VARCHAR}), 'x')
			,ATAH_MISST = IFNULL(LOWER(#{atahMisst , jdbcType=VARCHAR}), 'x')
			,ATAH_FALARMT = IFNULL(LOWER(#{atahFalarmt , jdbcType=VARCHAR}), 'x')
			,ATAH_REACTT_AVG = IFNULL(LOWER(#{atahReacttAvg , jdbcType=VARCHAR}), 'x')
			,ATAH_REACTT_DEV = IFNULL(LOWER(#{atahReacttDev , jdbcType=VARCHAR}), 'x')
			,REMARKS = IFNULL(LOWER(#{remarks , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<update id="insertNeuropsyStroop" parameterType="map">
		INSERT INTO T_NEUROPSY_STROOP(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,STROOP_EXEC_DATE
			,WORD_R
			,COLOR_R
			,COLORWORD_R
			,INTERFER_R
			,WORD_T
			,COLOR_T
			,COLORWORD_T
			,INTERFER_T
			,REMARKS
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{stroopExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{wordR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{colorR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{colorwordR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{interferR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{wordT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{colorT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{colorwordT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{interferT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			STROOP_EXEC_DATE = #{stroopExecDate , jdbcType=VARCHAR}
			,WORD_R = IFNULL(LOWER(#{wordR , jdbcType=VARCHAR}), 'x')
			,COLOR_R = IFNULL(LOWER(#{colorR , jdbcType=VARCHAR}), 'x')
			,COLORWORD_R = IFNULL(LOWER(#{colorwordR , jdbcType=VARCHAR}), 'x')
			,INTERFER_R = IFNULL(LOWER(#{interferR , jdbcType=VARCHAR}), 'x')
			,WORD_T = IFNULL(LOWER(#{wordT , jdbcType=VARCHAR}), 'x')
			,COLOR_T = IFNULL(LOWER(#{colorT , jdbcType=VARCHAR}), 'x')
			,COLORWORD_T = IFNULL(LOWER(#{colorwordT , jdbcType=VARCHAR}), 'x')
			,INTERFER_T = IFNULL(LOWER(#{interferT , jdbcType=VARCHAR}), 'x')
			,REMARKS = IFNULL(LOWER(#{remarks , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<select id="selectNeuropsyCcttListTotal" parameterType="map" resultType="int">
		
			SELECT COUNT(TARGET_ID)
			FROM (
				SELECT
					NC.TARGET_ID
				 FROM T_NEUROPSY_CCTT NC 
		      	 LEFT JOIN T_TARGET_MST TM
		         ON NC.TARGET_ID = TM.TARGET_ID
		         AND NC.RND_ID = TM.RND_ID
		         JOIN T_PERFORM_TERM PT
		         ON NC.PERFORM_CNT = PT.PERFORM_CNT
		         LEFT JOIN T_TARGET_DIS_MST TDM
				 ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			 	 AND TM.TARGET_DIS_ID = TDM.TARGET_ID
	      		 LEFT JOIN T_CODE_DTL DISE1
			     ON DISE1.CLASS_CD = 'DISE1'
			     AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			     LEFT JOIN T_CODE_DTL PTC
			     ON PTC.CLASS_CD = 'PT001'
			     AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			     LEFT JOIN T_PERFORM_MST PM
				 ON TM.RND_ID = PM.RND_ID
				 AND TM.TARGET_ID = PM.TARGET_ID
				 AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				 AND NC.PERFORM_CNT = PM.PERFORM_CNT
			     WHERE 1=1
			     	AND TM.RND_ID = ${rndId}
			     	AND PM.STATUS != '0004'
			     	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
			        <if test="targetId !=null and targetId != '' ">
						AND TM.TARGET_ID = #{targetId}
					</if>
					<if test="startAge !=null and startAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,CCTT_EXEC_DATE) &gt;= #{startAge}
					</if>
					<if test="endAge !=null and endAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,CCTT_EXEC_DATE) &lt;= #{endAge}
					</if>
					<if test="sex !=null and sex != '' ">
						AND TM.SEX = #{sex}
					</if>
					<if test="protocol !=null and protocol != '' ">
						AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
					</if>
					<if test="performCnt !=null and performCnt != '' ">
						AND NC.PERFORM_CNT = ${performCnt}
					</if>
			) T

	</select>
	
   	<select id="selectNeuropsyCcttList" parameterType="map" resultMap="neuropsyCcttList">
   		SELECT B.* FROM (
	   		SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
			      SELECT
			      	 NC.RND_ID,
			         NC.TARGET_ID,
			         TM.TARGET_DIS_ID,
			         DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					 CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					 PTC.CLASS_CD_DTL_NM PROTOCOL,
			         TM.BIRTH_YM,
			         PT.PERFORM_NM PERFORM_CNT_NM,
			         PT.PERFORM_CNT,
			         FN_CAL_AGE(TM.BIRTH_YM,CCTT_EXEC_DATE) AGE,
			         CONCAT(SUBSTR(CCTT_EXEC_DATE,1,4) ,'-',SUBSTR(CCTT_EXEC_DATE,5,2),'-',SUBSTR(CCTT_EXEC_DATE,7,2)) CCTT_EXEC_DATE,
					 CASE WHEN CCTT1_COMPLETE_TIME = '#' THEN '-' WHEN CCTT1_COMPLETE_TIME IS NULL OR CCTT1_COMPLETE_TIME = '' THEN 'x' ELSE CCTT1_COMPLETE_TIME END CCTT1_COMPLETE_TIME,
					 CASE WHEN CCTT1_TPOINT = '#' THEN '-' WHEN CCTT1_TPOINT IS NULL OR CCTT1_TPOINT = '' THEN 'x' ELSE CCTT1_TPOINT END CCTT1_TPOINT,
 					 CASE WHEN CCTT1_ILE = '#' THEN '-' WHEN CCTT1_ILE IS NULL OR CCTT1_ILE = '' THEN 'x' ELSE CCTT1_ILE END CCTT1_ILE,
					 CASE WHEN CCTT1_DIGSEQ_ERR = '#' THEN '-' WHEN CCTT1_DIGSEQ_ERR IS NULL OR CCTT1_DIGSEQ_ERR = '' THEN 'x' ELSE CCTT1_DIGSEQ_ERR END CCTT1_DIGSEQ_ERR,
					 CASE WHEN CCTT1_APPROX_ERR = '#' THEN '-' WHEN CCTT1_APPROX_ERR IS NULL OR CCTT1_APPROX_ERR = '' THEN 'x' ELSE CCTT1_APPROX_ERR END CCTT1_APPROX_ERR,
					 CASE WHEN CCTT1_CATALIST = '#' THEN '-' WHEN CCTT1_CATALIST IS NULL OR CCTT1_CATALIST = '' THEN 'x' ELSE CCTT1_CATALIST END CCTT1_CATALIST,
					 CASE WHEN CCTT2_COMPLETE_TIME = '#' THEN '-' WHEN CCTT2_COMPLETE_TIME IS NULL OR CCTT2_COMPLETE_TIME = '' THEN 'x' ELSE CCTT2_COMPLETE_TIME END CCTT2_COMPLETE_TIME,
					 CASE WHEN CCTT2_TPOINT = '#' THEN '-' WHEN CCTT2_TPOINT IS NULL OR CCTT2_TPOINT = '' THEN 'x' ELSE CCTT2_TPOINT END CCTT2_TPOINT,
					 CASE WHEN CCTT2_ILE = '#' THEN '-' WHEN CCTT2_ILE IS NULL OR CCTT2_ILE = '' THEN 'x' ELSE CCTT2_ILE END CCTT2_ILE,
					 CASE WHEN CCTT2_COLSEQ_ERR = '#' THEN '-' WHEN CCTT2_COLSEQ_ERR IS NULL OR CCTT2_COLSEQ_ERR = '' THEN 'x' ELSE CCTT2_COLSEQ_ERR END CCTT2_COLSEQ_ERR,
					 CASE WHEN CCTT2_DIGSEQ_ERR = '#' THEN '-' WHEN CCTT2_DIGSEQ_ERR IS NULL OR CCTT2_DIGSEQ_ERR = '' THEN 'x' ELSE CCTT2_DIGSEQ_ERR END CCTT2_DIGSEQ_ERR,
					 CASE WHEN CCTT2_APPROX_ERR = '#' THEN '-' WHEN CCTT2_APPROX_ERR IS NULL OR CCTT2_APPROX_ERR = '' THEN 'x' ELSE CCTT2_APPROX_ERR END CCTT2_APPROX_ERR,
				 	 CASE WHEN CCTT2_CATALIST = '#' THEN '-' WHEN CCTT2_CATALIST IS NULL OR CCTT2_CATALIST = '' THEN 'x' ELSE CCTT2_CATALIST END CCTT2_CATALIST,
					 CASE WHEN INTERFER_A_RIIR = '#' THEN '-' WHEN INTERFER_A_RIIR IS NULL OR INTERFER_A_RIIR = '' THEN 'x' ELSE INTERFER_A_RIIR END INTERFER_A_RIIR,
					 CASE WHEN INTERFER_A_ILE = '#' THEN '-' WHEN INTERFER_A_ILE IS NULL OR INTERFER_A_ILE = '' THEN 'x' ELSE INTERFER_A_ILE END INTERFER_A_ILE,
					 CASE WHEN INTERFER_B_RIIR = '#' THEN '-' WHEN INTERFER_B_RIIR IS NULL OR INTERFER_B_RIIR = '' THEN 'x' ELSE INTERFER_B_RIIR END INTERFER_B_RIIR,
					 CASE WHEN INTERFER_B_TPOINT = '#' THEN '-' WHEN INTERFER_B_TPOINT IS NULL OR INTERFER_B_TPOINT = '' THEN 'x' ELSE INTERFER_B_TPOINT END INTERFER_B_TPOINT,
					 CASE WHEN INTERFER_B_ILE = '#' THEN '-' WHEN INTERFER_B_ILE IS NULL OR INTERFER_B_ILE = '' THEN 'x' ELSE INTERFER_B_ILE END INTERFER_B_ILE,
					 NC.REMARKS  
			      FROM T_NEUROPSY_CCTT NC 
			      LEFT JOIN T_TARGET_MST TM
			      ON NC.TARGET_ID = TM.TARGET_ID
			      AND NC.RND_ID = TM.RND_ID
			      JOIN T_PERFORM_TERM PT
			      ON NC.PERFORM_CNT = PT.PERFORM_CNT
			      LEFT JOIN T_TARGET_DIS_MST TDM
				  ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				  AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			      LEFT JOIN T_CODE_DTL DISE1
			      ON DISE1.CLASS_CD = 'DISE1'
			      AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			      LEFT JOIN T_CODE_DTL PTC
			      ON PTC.CLASS_CD = 'PT001'
			      AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			      LEFT JOIN T_PERFORM_MST PM
				  ON TM.RND_ID = PM.RND_ID
				  AND TM.TARGET_ID = PM.TARGET_ID
				  AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				  AND NC.PERFORM_CNT = PM.PERFORM_CNT
			      JOIN (SELECT @ROWNUM:=0) AS R
			      WHERE 1=1	
			      	AND TM.RND_ID = ${rndId}
			      	AND PM.STATUS != '0004'
			      	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
			      	<if test="schKeyWord !='schTargetId' ">
				        <if test="targetId !=null and targetId != '' ">
							AND NC.TARGET_ID = #{targetId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,CCTT_EXEC_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,CCTT_EXEC_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND TM.SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND NC.PERFORM_CNT = ${performCnt}
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (NC.TARGET_ID, NC.PERFORM_CNT, NC.RND_ID, TM.DIS_CLASS_DTL)
								IN (${schKeyWord})
						</if>
					</if>
			      ORDER BY NC.TARGET_ID, NC.PERFORM_CNT
			  ) A
		  )B
		  WHERE 1=1
			<if test="schKeyWord == 'schTargetId' ">
				AND B.TARGET_ID = #{targetId}
				AND B.PERFORM_CNT = ${performCnt}
			</if> 
	      LIMIT #{start}, #{limit}
	
	</select>
   
   	<update id="insertNeuropsyCctt" parameterType="map">
	      INSERT INTO T_NEUROPSY_CCTT(
	         TARGET_ID
	         ,PERFORM_CNT
	         ,RND_ID
	         ,CCTT_EXEC_DATE
	         ,CCTT1_COMPLETE_TIME
	         ,CCTT1_TPOINT
	         ,CCTT1_ILE
	         ,CCTT1_DIGSEQ_ERR
	         ,CCTT1_APPROX_ERR
	         ,CCTT1_CATALIST
	         ,CCTT2_COMPLETE_TIME
	         ,CCTT2_TPOINT
	         ,CCTT2_ILE
	         ,CCTT2_COLSEQ_ERR
	         ,CCTT2_DIGSEQ_ERR
	         ,CCTT2_APPROX_ERR
	         ,CCTT2_CATALIST
	         ,INTERFER_A_RIIR
	         ,INTERFER_A_ILE
	         ,INTERFER_B_RIIR
	         ,INTERFER_B_TPOINT
	         ,INTERFER_B_ILE
	         ,REMARKS
	         ,CREATE_DATE
	         ,CREATE_BY
	         ,UPDATE_DATE
	         ,UPDATE_BY
	      )VALUES(
	         #{targetId, jdbcType=VARCHAR}
	         , (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
	         , #{rndId, jdbcType=VARCHAR}
	         , #{ccttExecDate, jdbcType=VARCHAR}
	         , IFNULL(LOWER(#{cctt1CompleteTime, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt1Tpoint, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt1Ile, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt1DigseqErr, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt1ApproxErr, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt1Catalist, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt2CompleteTime, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt2Tpoint, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt2Ile, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt2ColseqErr, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt2DigseqErr, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt2ApproxErr, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{cctt2Catalist, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{interferARiir, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{interferAIle, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{interferBRiir, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{interferBTpoint, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{interferBIle, jdbcType=VARCHAR}), 'x')
	         , IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
	         , now()
	         , #{createBy , jdbcType=VARCHAR}
	         , now()
	         , #{createBy , jdbcType=VARCHAR}
	      )
	      ON DUPLICATE KEY UPDATE
	         CCTT_EXEC_DATE = #{ccttExecDate , jdbcType=VARCHAR}
	         , CCTT1_COMPLETE_TIME = IFNULL(LOWER(#{cctt1CompleteTime, jdbcType=VARCHAR}), 'x')
	         , CCTT1_TPOINT = IFNULL(LOWER(#{cctt1Tpoint, jdbcType=VARCHAR}), 'x')
	         , CCTT1_ILE = IFNULL(LOWER(#{cctt1Ile, jdbcType=VARCHAR}), 'x')
	         , CCTT1_DIGSEQ_ERR = IFNULL(LOWER(#{cctt1DigseqErr, jdbcType=VARCHAR}), 'x')
	         , CCTT1_APPROX_ERR = IFNULL(LOWER(#{cctt1ApproxErr, jdbcType=VARCHAR}), 'x')
	         , CCTT1_CATALIST = IFNULL(LOWER(#{cctt1Catalist, jdbcType=VARCHAR}), 'x')
	         , CCTT2_COMPLETE_TIME = IFNULL(LOWER(#{cctt2CompleteTime, jdbcType=VARCHAR}), 'x')
	         , CCTT2_TPOINT = IFNULL(LOWER(#{cctt2Tpoint, jdbcType=VARCHAR}), 'x')
	         , CCTT2_ILE = IFNULL(LOWER(#{cctt2Ile, jdbcType=VARCHAR}), 'x')
	         , CCTT2_COLSEQ_ERR = IFNULL(LOWER(#{cctt2ColseqErr, jdbcType=VARCHAR}), 'x')
	         , CCTT2_DIGSEQ_ERR = IFNULL(LOWER(#{cctt2DigseqErr, jdbcType=VARCHAR}), 'x')
	         , CCTT2_APPROX_ERR = IFNULL(LOWER(#{cctt2ApproxErr, jdbcType=VARCHAR}), 'x')
	         , CCTT2_CATALIST = IFNULL(LOWER(#{cctt2Catalist, jdbcType=VARCHAR}), 'x')
	         , INTERFER_A_RIIR = IFNULL(LOWER(#{interferARiir, jdbcType=VARCHAR}), 'x')
	         , INTERFER_A_ILE = IFNULL(LOWER(#{interferAIle, jdbcType=VARCHAR}), 'x')
	         , INTERFER_B_RIIR = IFNULL(LOWER(#{interferBRiir, jdbcType=VARCHAR}), 'x')
	         , INTERFER_B_TPOINT = IFNULL(LOWER(#{interferBTpoint, jdbcType=VARCHAR}), 'x')
	         , INTERFER_B_ILE = IFNULL(LOWER(#{interferBIle, jdbcType=VARCHAR}), 'x')
	         ,REMARKS = #{remarks , jdbcType=VARCHAR}
	         ,UPDATE_DATE = now()
	         ,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
   
    
	<select id="selectNeuropsyWsctList" parameterType="map" resultMap="neuropsyWsctList">
		SELECT B.* FROM (
			SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
				SELECT
					NW.RND_ID,
					NW.TARGET_ID,
					TM.TARGET_DIS_ID,
					DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					PTC.CLASS_CD_DTL_NM PROTOCOL,
					TM.BIRTH_YM,
					PT.PERFORM_NM PERFORM_CNT_NM,
					PT.PERFORM_CNT,
					FN_CAL_AGE(TM.BIRTH_YM,WSCT_EXEC_DATE) AGE,
					CONCAT(SUBSTR(WSCT_EXEC_DATE,1,4) ,'-',SUBSTR(WSCT_EXEC_DATE,5,2),'-',SUBSTR(WSCT_EXEC_DATE,7,2)) WSCT_EXEC_DATE,
					CASE WHEN TOTAL_ERRORS_R = '#' THEN '-' WHEN TOTAL_ERRORS_R IS NULL OR TOTAL_ERRORS_R = '' THEN 'x' ELSE TOTAL_ERRORS_R END TOTAL_ERRORS_R,
					CASE WHEN TOTAL_ERRORS_S = '#' THEN '-' WHEN TOTAL_ERRORS_S IS NULL OR TOTAL_ERRORS_S = '' THEN 'x' ELSE TOTAL_ERRORS_S END TOTAL_ERRORS_S,
					CASE WHEN TOTAL_ERRORS_T = '#' THEN '-' WHEN TOTAL_ERRORS_T IS NULL OR TOTAL_ERRORS_T = '' THEN 'x' ELSE TOTAL_ERRORS_T END TOTAL_ERRORS_T,
					CASE WHEN TOTAL_ERRORS_ILE = '#' THEN '-' WHEN TOTAL_ERRORS_ILE IS NULL OR TOTAL_ERRORS_ILE = '' THEN 'x' ELSE TOTAL_ERRORS_ILE END TOTAL_ERRORS_ILE,
					CASE WHEN PERSEVER_RESPON_T = '#' THEN '-' WHEN PERSEVER_RESPON_T IS NULL OR PERSEVER_RESPON_T = '' THEN 'x' ELSE PERSEVER_RESPON_T END PERSEVER_RESPON_T,
					CASE WHEN PERSEVER_ERROR_T = '#' THEN '-' WHEN PERSEVER_ERROR_T IS NULL OR PERSEVER_ERROR_T = '' THEN 'x' ELSE PERSEVER_ERROR_T END PERSEVER_ERROR_T,
					CASE WHEN NONPERSEVER_ERROR_T = '#' THEN '-' WHEN NONPERSEVER_ERROR_T IS NULL OR NONPERSEVER_ERROR_T = '' THEN 'x' ELSE NONPERSEVER_ERROR_T END NONPERSEVER_ERROR_T,
					CASE WHEN CONCEP_RESPON_T = '#' THEN '-' WHEN CONCEP_RESPON_T IS NULL OR CONCEP_RESPON_T = '' THEN 'x' ELSE CONCEP_RESPON_T END CONCEP_RESPON_T,
					CASE WHEN CATEGORY_COMPLETE_R = '#' THEN '-' WHEN CATEGORY_COMPLETE_R IS NULL OR CATEGORY_COMPLETE_R = '' THEN 'x' ELSE CATEGORY_COMPLETE_R END CATEGORY_COMPLETE_R,
					CASE WHEN TRIAL_COMPLETE_R = '#' THEN '-' WHEN TRIAL_COMPLETE_R IS NULL OR TRIAL_COMPLETE_R = '' THEN 'x' ELSE TRIAL_COMPLETE_R END TRIAL_COMPLETE_R,
					CASE WHEN FAILURE_R = '#' THEN '-' WHEN FAILURE_R IS NULL OR FAILURE_R = '' THEN 'x' ELSE FAILURE_R END FAILURE_R,
					CASE WHEN INGTO_LEARN = '#' THEN '-' WHEN INGTO_LEARN IS NULL OR INGTO_LEARN = '' THEN 'x' ELSE INGTO_LEARN END INGTO_LEARN,
					CASE WHEN CATEGORY_COMPLETE_ILE = '#' THEN '-' WHEN CATEGORY_COMPLETE_ILE IS NULL OR CATEGORY_COMPLETE_ILE = '' THEN 'x' ELSE CATEGORY_COMPLETE_ILE END CATEGORY_COMPLETE_ILE,
					CASE WHEN TRIAL_COMPLETE_ILE = '#' THEN '-' WHEN TRIAL_COMPLETE_ILE IS NULL OR TRIAL_COMPLETE_ILE = '' THEN 'x' ELSE TRIAL_COMPLETE_ILE END TRIAL_COMPLETE_ILE,
					CASE WHEN FAILURE_ILE = '#' THEN '-' WHEN FAILURE_ILE IS NULL OR FAILURE_ILE = '' THEN 'x' ELSE FAILURE_ILE END FAILURE_ILE,
					CASE WHEN INGTO_LEARN_ILE = '#' THEN '-' WHEN INGTO_LEARN_ILE IS NULL OR INGTO_LEARN_ILE = '' THEN 'x' ELSE INGTO_LEARN_ILE END INGTO_LEARN_ILE,
					NW.REMARKS 
				FROM T_NEUROPSY_WSCT NW 
				LEFT JOIN T_TARGET_MST TM
				ON NW.TARGET_ID = TM.TARGET_ID
				AND NW.RND_ID = TM.RND_ID
				JOIN T_PERFORM_TERM PT
				ON NW.PERFORM_CNT = PT.PERFORM_CNT
				LEFT JOIN T_TARGET_DIS_MST TDM
				ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			    LEFT JOIN T_CODE_DTL DISE1
		        ON DISE1.CLASS_CD = 'DISE1'
		        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		        LEFT JOIN T_CODE_DTL PTC
		        ON PTC.CLASS_CD = 'PT001'
		        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		        LEFT JOIN T_PERFORM_MST PM
				ON TM.RND_ID = PM.RND_ID
				AND TM.TARGET_ID = PM.TARGET_ID
				AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				AND NW.PERFORM_CNT = PM.PERFORM_CNT
		        JOIN (SELECT @ROWNUM:=0) AS R
		        WHERE 1=1
		        	AND TM.RND_ID = ${rndId}
		        	AND PM.STATUS != '0004'
		        	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
		        	<if test="schKeyWord !='schTargetId' ">
				        <if test="targetId !=null and targetId != '' ">
							AND NW.TARGET_ID = #{targetId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,WSCT_EXEC_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,WSCT_EXEC_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND TM.SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND NW.PERFORM_CNT = ${performCnt}
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (NW.TARGET_ID, NW.PERFORM_CNT, NW.RND_ID, TM.DIS_CLASS_DTL)
								IN (${schKeyWord})
						</if>
					</if>
				ORDER BY NW.TARGET_ID, NW.PERFORM_CNT
				) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
	</select>
	
	
	
	<select id="selectNeuropsyWsctListTotal" parameterType="map" resultType="int">
	
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NW.TARGET_ID
			FROM T_NEUROPSY_WSCT NW 
			LEFT JOIN T_TARGET_MST TM
			ON NW.TARGET_ID = TM.TARGET_ID
			AND NW.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NW.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
            LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NW.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
	       	 	AND PM.STATUS != '0004'
	       	 	AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND TM.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,WSCT_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,WSCT_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NW.PERFORM_CNT = ${performCnt}
				</if>
		) T

	</select>
	
	
	
	<update id="insertNeuropsyWsct" parameterType="map">
		INSERT INTO T_NEUROPSY_WSCT(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,WSCT_EXEC_DATE
			,TOTAL_ERRORS_R
			,TOTAL_ERRORS_S
			,TOTAL_ERRORS_T
			,TOTAL_ERRORS_ILE
			,PERSEVER_RESPON_T
			,PERSEVER_ERROR_T
			,NONPERSEVER_ERROR_T
			,CONCEP_RESPON_T
			,CATEGORY_COMPLETE_R
			,TRIAL_COMPLETE_R
			,FAILURE_R
			,INGTO_LEARN
			,CATEGORY_COMPLETE_ILE
			,TRIAL_COMPLETE_ILE
			,FAILURE_ILE
			,INGTO_LEARN_ILE
			,REMARKS
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{wsctExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{totalErrorsR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{totalErrorsS, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{totalErrorsT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{totalErrorsIle, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{perseverResponT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{perseverErrorT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{nonperseverErrorT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{concepResponT, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{categoryCompleteR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{trialCompleteR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{failureR, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ingtoLearn, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{categoryCompleteIle, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{trialCompleteIle, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{failureIle, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ingtoLearnIle, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			WSCT_EXEC_DATE  = #{wsctExecDate , jdbcType=VARCHAR}
			,TOTAL_ERRORS_R  = IFNULL(LOWER(#{totalErrorsR , jdbcType=VARCHAR}), 'x')
			,TOTAL_ERRORS_S  = IFNULL(LOWER(#{totalErrorsS , jdbcType=VARCHAR}), 'x')
			,TOTAL_ERRORS_T  = IFNULL(LOWER(#{totalErrorsT , jdbcType=VARCHAR}), 'x')
			,TOTAL_ERRORS_ILE  = IFNULL(LOWER(#{totalErrorsIle , jdbcType=VARCHAR}), 'x')
			,PERSEVER_RESPON_T  = IFNULL(LOWER(#{perseverResponT , jdbcType=VARCHAR}), 'x')
			,PERSEVER_ERROR_T  = IFNULL(LOWER(#{perseverErrorT , jdbcType=VARCHAR}), 'x')
			,NONPERSEVER_ERROR_T  = IFNULL(LOWER(#{nonperseverErrorT , jdbcType=VARCHAR}), 'x')
			,CONCEP_RESPON_T  = IFNULL(LOWER(#{concepResponT , jdbcType=VARCHAR}), 'x')
			,CATEGORY_COMPLETE_R  = IFNULL(LOWER(#{categoryCompleteR , jdbcType=VARCHAR}), 'x')
			,TRIAL_COMPLETE_R  = IFNULL(LOWER(#{trialCompleteR , jdbcType=VARCHAR}), 'x')
			,FAILURE_R  = IFNULL(LOWER(#{failureR , jdbcType=VARCHAR}), 'x')
			,INGTO_LEARN  = IFNULL(LOWER(#{ingtoLearn , jdbcType=VARCHAR}), 'x')
			,CATEGORY_COMPLETE_ILE  = IFNULL(LOWER(#{categoryCompleteIle , jdbcType=VARCHAR}), 'x')
			,TRIAL_COMPLETE_ILE  = IFNULL(LOWER(#{trialCompleteIle , jdbcType=VARCHAR}), 'x')
			,FAILURE_ILE  = IFNULL(LOWER(#{failureIle , jdbcType=VARCHAR}), 'x')
			,INGTO_LEARN_ILE  = IFNULL(LOWER(#{ingtoLearnIle , jdbcType=VARCHAR}), 'x')
			,REMARKS = IFNULL(LOWER(#{remarks , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>

    
	<select id="selectNeuropsyCatListTotal" parameterType="map" resultType="int">
		
			SELECT COUNT(TARGET_ID)
			FROM (
				SELECT
					NC.TARGET_ID
				 FROM T_NEUROPSY_CAT NC 
		      	 LEFT JOIN T_TARGET_MST TM
		         ON NC.TARGET_ID = TM.TARGET_ID
		         AND NC.RND_ID = TM.RND_ID
		         JOIN T_PERFORM_TERM PT
		         ON NC.PERFORM_CNT = PT.PERFORM_CNT
		         LEFT JOIN T_TARGET_DIS_MST TDM
				 ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				 AND TM.TARGET_DIS_ID = TDM.TARGET_ID
		         LEFT JOIN T_CODE_DTL DISE1
		         ON DISE1.CLASS_CD = 'DISE1'
		         AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		         LEFT JOIN T_CODE_DTL PTC
		         ON PTC.CLASS_CD = 'PT001'
		         AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		         LEFT JOIN T_PERFORM_MST PM
				 ON TM.RND_ID = PM.RND_ID
				 AND TM.TARGET_ID = PM.TARGET_ID
				 AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				 AND NC.PERFORM_CNT = PM.PERFORM_CNT
		         WHERE 1=1
		         	AND TM.RND_ID = ${rndId}
		         	AND PM.STATUS != '0004'
		         	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
			        <if test="targetId !=null and targetId != '' ">
						AND TM.TARGET_ID = #{targetId}
					</if>
					<if test="startAge !=null and startAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,CAT_EXEC_DATE) &gt;= #{startAge}
					</if>
					<if test="endAge !=null and endAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,CAT_EXEC_DATE) &lt;= #{endAge}
					</if>
					<if test="sex !=null and sex != '' ">
						AND TM.SEX = #{sex}
					</if>
					<if test="protocol !=null and protocol != '' ">
						AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
					</if>
					<if test="performCnt !=null and performCnt != '' ">
						AND NC.PERFORM_CNT = ${performCnt}
					</if>
			) T

	</select>
	
   	<select id="selectNeuropsyCatList" parameterType="map" resultMap="neuropsyCatList">
	      SELECT B.* FROM (
	      	SELECT @ROWNUM := @ROWNUM+1 ROWNUM,A.* FROM (
				SELECT
					NC.RND_ID,
			        NC.TARGET_ID,
			        TM.TARGET_DIS_ID,
			        DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					PTC.CLASS_CD_DTL_NM PROTOCOL,
			        TM.BIRTH_YM,
			        PT.PERFORM_NM PERFORM_CNT_NM,
			        PT.PERFORM_CNT,
			        FN_CAL_AGE(TM.BIRTH_YM,CAT_EXEC_DATE) AGE,
			        CONCAT(SUBSTR(CAT_EXEC_DATE,1,4) ,'-',SUBSTR(CAT_EXEC_DATE,5,2),'-',SUBSTR(CAT_EXEC_DATE,7,2)) CAT_EXEC_DATE,
					CASE WHEN CATV_MISSR = '#' THEN '-' WHEN CATV_MISSR IS NULL OR CATV_MISSR = '' THEN 'x' ELSE CATV_MISSR END CATV_MISSR,
					CASE WHEN CATV_FALARMR = '#' THEN '-' WHEN CATV_FALARMR IS NULL OR CATV_FALARMR = '' THEN 'x' ELSE CATV_FALARMR END CATV_FALARMR,
					CASE WHEN CATV_REACTR_AVG = '#' THEN '-' WHEN CATV_REACTR_AVG IS NULL OR CATV_REACTR_AVG = '' THEN 'x' ELSE CATV_REACTR_AVG END CATV_REACTR_AVG,
					CASE WHEN CATV_REACTR_DEV = '#' THEN '-' WHEN CATV_REACTR_DEV IS NULL OR CATV_REACTR_DEV = '' THEN 'x' ELSE CATV_REACTR_DEV END CATV_REACTR_DEV,
					CASE WHEN CATV_MISSAQ = '#' THEN '-' WHEN CATV_MISSAQ IS NULL OR CATV_MISSAQ = '' THEN 'x' ELSE CATV_MISSAQ END CATV_MISSAQ,
					CASE WHEN CATV_FALARMAQ = '#' THEN '-' WHEN CATV_FALARMAQ IS NULL OR CATV_FALARMAQ = '' THEN 'x' ELSE CATV_FALARMAQ END CATV_FALARMAQ,
					CASE WHEN CATV_REACTAQ_AVG = '#' THEN '-' WHEN CATV_REACTAQ_AVG IS NULL OR CATV_REACTAQ_AVG = '' THEN 'x' ELSE CATV_REACTAQ_AVG END CATV_REACTAQ_AVG,
					CASE WHEN CATV_REACTAQ_DEV = '#' THEN '-' WHEN CATV_REACTAQ_DEV IS NULL OR CATV_REACTAQ_DEV = '' THEN 'x' ELSE CATV_REACTAQ_DEV END CATV_REACTAQ_DEV,
					CASE WHEN CATH_MISSR = '#' THEN '-' WHEN CATH_MISSR IS NULL OR CATH_MISSR = '' THEN 'x' ELSE CATH_MISSR END CATH_MISSR,
					CASE WHEN CATH_FALARMR = '#' THEN '-' WHEN CATH_FALARMR IS NULL OR CATH_FALARMR = '' THEN 'x' ELSE CATH_FALARMR END CATH_FALARMR,
					CASE WHEN CATH_REACTR_AVG = '#' THEN '-' WHEN CATH_REACTR_AVG IS NULL OR CATH_REACTR_AVG = '' THEN 'x' ELSE CATH_REACTR_AVG END CATH_REACTR_AVG,
					CASE WHEN CATH_REACTR_DEV = '#' THEN '-' WHEN CATH_REACTR_DEV IS NULL OR CATH_REACTR_DEV = '' THEN 'x' ELSE CATH_REACTR_DEV END CATH_REACTR_DEV,
					CASE WHEN CATH_MISSAQ = '#' THEN '-' WHEN CATH_MISSAQ IS NULL OR CATH_MISSAQ = '' THEN 'x' ELSE CATH_MISSAQ END CATH_MISSAQ,
					CASE WHEN CATH_FALARMAQ = '#' THEN '-' WHEN CATH_FALARMAQ IS NULL OR CATH_FALARMAQ = '' THEN 'x' ELSE CATH_FALARMAQ END CATH_FALARMAQ,
					CASE WHEN CATH_REACTAQ_AVG = '#' THEN '-' WHEN CATH_REACTAQ_AVG IS NULL OR CATH_REACTAQ_AVG = '' THEN 'x' ELSE CATH_REACTAQ_AVG END CATH_REACTAQ_AVG,
					CASE WHEN CATH_REACTAQ_DEV = '#' THEN '-' WHEN CATH_REACTAQ_DEV IS NULL OR CATH_REACTAQ_DEV = '' THEN 'x' ELSE CATH_REACTAQ_DEV END CATH_REACTAQ_DEV,
					CASE WHEN CATC_MISSR = '#' THEN '-' WHEN CATC_MISSR IS NULL OR CATC_MISSR = '' THEN 'x' ELSE CATC_MISSR END CATC_MISSR,
					CASE WHEN CATC_FALARMR = '#' THEN '-' WHEN CATC_FALARMR IS NULL OR CATC_FALARMR = '' THEN 'x' ELSE CATC_FALARMR END CATC_FALARMR,
					CASE WHEN CATC_REACTR_AVG = '#' THEN '-' WHEN CATC_REACTR_AVG IS NULL OR CATC_REACTR_AVG = '' THEN 'x' ELSE CATC_REACTR_AVG END CATC_REACTR_AVG,
					CASE WHEN CATC_REACTR_DEV = '#' THEN '-' WHEN CATC_REACTR_DEV IS NULL OR CATC_REACTR_DEV = '' THEN 'x' ELSE CATC_REACTR_DEV END CATC_REACTR_DEV,
					CASE WHEN CATC_MISSAQ = '#' THEN '-' WHEN CATC_MISSAQ IS NULL OR CATC_MISSAQ = '' THEN 'x' ELSE CATC_MISSAQ END CATC_MISSAQ,
					CASE WHEN CATC_FALARMAQ = '#' THEN '-' WHEN CATC_FALARMAQ IS NULL OR CATC_FALARMAQ = '' THEN 'x' ELSE CATC_FALARMAQ END CATC_FALARMAQ,
					CASE WHEN CATC_REACTAQ_AVG = '#' THEN '-' WHEN CATC_REACTAQ_AVG IS NULL OR CATC_REACTAQ_AVG = '' THEN 'x' ELSE CATC_REACTAQ_AVG END CATC_REACTAQ_AVG,
					CASE WHEN CATC_REACTAQ_DEV = '#' THEN '-' WHEN CATC_REACTAQ_DEV IS NULL OR CATC_REACTAQ_DEV = '' THEN 'x' ELSE CATC_REACTAQ_DEV END CATC_REACTAQ_DEV,
					CASE WHEN CATI_MISSR = '#' THEN '-' WHEN CATI_MISSR IS NULL OR CATI_MISSR = '' THEN 'x' ELSE CATI_MISSR END CATI_MISSR,
					CASE WHEN CATI_FALARMR = '#' THEN '-' WHEN CATI_FALARMR IS NULL OR CATI_FALARMR = '' THEN 'x' ELSE CATI_FALARMR END CATI_FALARMR,
					CASE WHEN CATI_REACTR_AVG = '#' THEN '-' WHEN CATI_REACTR_AVG IS NULL OR CATI_REACTR_AVG = '' THEN 'x' ELSE CATI_REACTR_AVG END CATI_REACTR_AVG,
					CASE WHEN CATI_REACTR_DEV = '#' THEN '-' WHEN CATI_REACTR_DEV IS NULL OR CATI_REACTR_DEV = '' THEN 'x' ELSE CATI_REACTR_DEV END CATI_REACTR_DEV,
					CASE WHEN CATI_MISSAQ = '#' THEN '-' WHEN CATI_MISSAQ IS NULL OR CATI_MISSAQ = '' THEN 'x' ELSE CATI_MISSAQ END CATI_MISSAQ,
					CASE WHEN CATI_FALARMAQ = '#' THEN '-' WHEN CATI_FALARMAQ IS NULL OR CATI_FALARMAQ = '' THEN 'x' ELSE CATI_FALARMAQ END CATI_FALARMAQ,
					CASE WHEN CATI_REACTAQ_AVG = '#' THEN '-' WHEN CATI_REACTAQ_AVG IS NULL OR CATI_REACTAQ_AVG = '' THEN 'x' ELSE CATI_REACTAQ_AVG END CATI_REACTAQ_AVG,
					CASE WHEN CATI_REACTAQ_DEV = '#' THEN '-' WHEN CATI_REACTAQ_DEV IS NULL OR CATI_REACTAQ_DEV = '' THEN 'x' ELSE CATI_REACTAQ_DEV END CATI_REACTAQ_DEV,
					CASE WHEN CATD_MISSR = '#' THEN '-' WHEN CATD_MISSR IS NULL OR CATD_MISSR = '' THEN 'x' ELSE CATD_MISSR END CATD_MISSR,
					CASE WHEN CATD_FALARMR = '#' THEN '-' WHEN CATD_FALARMR IS NULL OR CATD_FALARMR = '' THEN 'x' ELSE CATD_FALARMR END CATD_FALARMR,
					CASE WHEN CATD_REACTR_AVG = '#' THEN '-' WHEN CATD_REACTR_AVG IS NULL OR CATD_REACTR_AVG = '' THEN 'x' ELSE CATD_REACTR_AVG END CATD_REACTR_AVG,
					CASE WHEN CATD_REACTR_DEV = '#' THEN '-' WHEN CATD_REACTR_DEV IS NULL OR CATD_REACTR_DEV = '' THEN 'x' ELSE CATD_REACTR_DEV END CATD_REACTR_DEV,
					CASE WHEN CATD_MISSAQ = '#' THEN '-' WHEN CATD_MISSAQ IS NULL OR CATD_MISSAQ = '' THEN 'x' ELSE CATD_MISSAQ END CATD_MISSAQ,
					CASE WHEN CATD_FALARMAQ = '#' THEN '-' WHEN CATD_FALARMAQ IS NULL OR CATD_FALARMAQ = '' THEN 'x' ELSE CATD_FALARMAQ END CATD_FALARMAQ,
					CASE WHEN CATD_REACTAQ_AVG = '#' THEN '-' WHEN CATD_REACTAQ_AVG IS NULL OR CATD_REACTAQ_AVG = '' THEN 'x' ELSE CATD_REACTAQ_AVG END CATD_REACTAQ_AVG,
					CASE WHEN CATD_REACTAQ_DEV = '#' THEN '-' WHEN CATD_REACTAQ_DEV IS NULL OR CATD_REACTAQ_DEV = '' THEN 'x' ELSE CATD_REACTAQ_DEV END CATD_REACTAQ_DEV,
					CASE WHEN CATMD_REACTR = '#' THEN '-' WHEN CATMD_REACTR IS NULL OR CATMD_REACTR = '' THEN 'x' ELSE CATMD_REACTR END CATMD_REACTR,
					CASE WHEN CATMR_REACTR = '#' THEN '-' WHEN CATMR_REACTR IS NULL OR CATMR_REACTR = '' THEN 'x' ELSE CATMR_REACTR END CATMR_REACTR,
					CASE WHEN CATMD_SPACER = '#' THEN '-' WHEN CATMD_SPACER IS NULL OR CATMD_SPACER = '' THEN 'x' ELSE CATMD_SPACER END CATMD_SPACER,
					CASE WHEN CATMR_SPACER = '#' THEN '-' WHEN CATMR_SPACER IS NULL OR CATMR_SPACER = '' THEN 'x' ELSE CATMR_SPACER END CATMR_SPACER,
					CASE WHEN CATMD_REACTAQ = '#' THEN '-' WHEN CATMD_REACTAQ IS NULL OR CATMD_REACTAQ = '' THEN 'x' ELSE CATMD_REACTAQ END CATMD_REACTAQ,
					CASE WHEN CATMR_REACTAQ = '#' THEN '-' WHEN CATMR_REACTAQ IS NULL OR CATMR_REACTAQ = '' THEN 'x' ELSE CATMR_REACTAQ END CATMR_REACTAQ,
					CASE WHEN CATMD_SPACEAQ = '#' THEN '-' WHEN CATMD_SPACEAQ IS NULL OR CATMD_SPACEAQ = '' THEN 'x' ELSE CATMD_SPACEAQ END CATMD_SPACEAQ,
					CASE WHEN CATMR_SPACEAQ = '#' THEN '-' WHEN CATMR_SPACEAQ IS NULL OR CATMR_SPACEAQ = '' THEN 'x' ELSE CATMR_SPACEAQ END CATMR_SPACEAQ,
					NC.REMARKS
			      FROM T_NEUROPSY_CAT NC 
			      LEFT JOIN T_TARGET_MST TM
			      ON NC.TARGET_ID = TM.TARGET_ID
			      AND NC.RND_ID = TM.RND_ID
			      JOIN T_PERFORM_TERM PT
			      ON NC.PERFORM_CNT = PT.PERFORM_CNT
			      LEFT JOIN T_CODE_DTL DISE1
		       	  ON DISE1.CLASS_CD = 'DISE1'
		          AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		          LEFT JOIN T_CODE_DTL PTC
		          ON PTC.CLASS_CD = 'PT001'
		          AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		          LEFT JOIN T_PERFORM_MST PM
				  ON TM.RND_ID = PM.RND_ID
				  AND TM.TARGET_ID = PM.TARGET_ID
				  AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				  AND NC.PERFORM_CNT = PM.PERFORM_CNT
		          JOIN (SELECT @ROWNUM:=0) AS R
		          WHERE 1=1
		          	AND TM.RND_ID = ${rndId}
		          	AND PM.STATUS != '0004'
		          	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
		          	<if test="schKeyWord !='schTargetId' ">
				        <if test="targetId !=null and targetId != '' ">
							AND TM.TARGET_ID = #{targetId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,CAT_EXEC_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,CAT_EXEC_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND TM.SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND NC.PERFORM_CNT = ${performCnt}
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (NC.TARGET_ID, NC.PERFORM_CNT, NC.RND_ID, TM.DIS_CLASS_DTL)
								IN (${schKeyWord})
						</if>
					</if>	
			      ORDER BY NC.TARGET_ID, NC.PERFORM_CNT
			  ) A
		  )B
		  WHERE 1=1
			<if test="schKeyWord == 'schTargetId' ">
				AND B.TARGET_ID = #{targetId}
				AND B.PERFORM_CNT = ${performCnt}
			</if> 
	      LIMIT #{start}, #{limit}
	
	</select>
   
   	<update id="insertNeuropsyCat" parameterType="map">
	      INSERT INTO T_NEUROPSY_CAT(
	        TARGET_ID
	        ,PERFORM_CNT
	        ,RND_ID
	        ,CAT_EXEC_DATE
			,CATV_MISSR
			,CATV_FALARMR
			,CATV_REACTR_AVG
			,CATV_REACTR_DEV
			,CATV_MISSAQ
			,CATV_FALARMAQ
			,CATV_REACTAQ_AVG
			,CATV_REACTAQ_DEV
			,CATH_MISSR
			,CATH_FALARMR
			,CATH_REACTR_AVG
			,CATH_REACTR_DEV
			,CATH_MISSAQ
			,CATH_FALARMAQ
			,CATH_REACTAQ_AVG
			,CATH_REACTAQ_DEV
			,CATC_MISSR
			,CATC_FALARMR
			,CATC_REACTR_AVG
			,CATC_REACTR_DEV
			,CATC_MISSAQ
			,CATC_FALARMAQ
			,CATC_REACTAQ_AVG
			,CATC_REACTAQ_DEV
			,CATI_MISSR
			,CATI_FALARMR
			,CATI_REACTR_AVG
			,CATI_REACTR_DEV
			,CATI_MISSAQ
			,CATI_FALARMAQ
			,CATI_REACTAQ_AVG
			,CATI_REACTAQ_DEV
			,CATD_MISSR
			,CATD_FALARMR
			,CATD_REACTR_AVG
			,CATD_REACTR_DEV
			,CATD_MISSAQ
			,CATD_FALARMAQ
			,CATD_REACTAQ_AVG
			,CATD_REACTAQ_DEV
			,CATMD_REACTR
			,CATMR_REACTR
			,CATMD_SPACER
			,CATMR_SPACER
			,CATMD_REACTAQ
			,CATMR_REACTAQ
			,CATMD_SPACEAQ
			,CATMR_SPACEAQ
			,REMARKS
	        ,CREATE_DATE
	        ,CREATE_BY
	        ,UPDATE_DATE
	        ,UPDATE_BY
	      )VALUES(
	        #{targetId, jdbcType=VARCHAR}
	        , (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
	        , #{rndId, jdbcType=VARCHAR}
	        , #{catExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{catvMissr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catvFalarmr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catvReactrAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catvReactrDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catvMissaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catvFalarmaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catvReactaqAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catvReactaqDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathMissr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathFalarmr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathReactrAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathReactrDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathMissaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathFalarmaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathReactaqAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cathReactaqDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcMissr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcFalarmr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcReactrAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcReactrDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcMissaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcFalarmaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcReactaqAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catcReactaqDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiMissr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiFalarmr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiReactrAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiReactrDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiMissaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiFalarmaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiReactaqAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catiReactaqDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdMissr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdFalarmr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdReactrAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdReactrDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdMissaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdFalarmaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdReactaqAvg, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catdReactaqDev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmdReactr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmrReactr, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmdSpacer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmrSpacer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmdReactaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmrReactaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmdSpaceaq, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{catmrSpaceaq, jdbcType=VARCHAR}), 'x')
	        , IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
	        , now()
	        , #{createBy , jdbcType=VARCHAR}
	        , now()
	        , #{createBy , jdbcType=VARCHAR}
	      )
	      ON DUPLICATE KEY UPDATE
	         CAT_EXEC_DATE = #{catExecDate , jdbcType=VARCHAR}
			,CATV_MISSR = IFNULL(LOWER(#{catvMissr , jdbcType=VARCHAR}), 'x')
			,CATV_FALARMR = IFNULL(LOWER(#{catvFalarmr , jdbcType=VARCHAR}), 'x')
			,CATV_REACTR_AVG = IFNULL(LOWER(#{catvReactrAvg , jdbcType=VARCHAR}), 'x')
			,CATV_REACTR_DEV = IFNULL(LOWER(#{catvReactrDev , jdbcType=VARCHAR}), 'x')
			,CATV_MISSAQ = IFNULL(LOWER(#{catvMissaq , jdbcType=VARCHAR}), 'x')
			,CATV_FALARMAQ = IFNULL(LOWER(#{catvFalarmaq , jdbcType=VARCHAR}), 'x')
			,CATV_REACTAQ_AVG = IFNULL(LOWER(#{catvReactaqAvg , jdbcType=VARCHAR}), 'x')
			,CATV_REACTAQ_DEV = IFNULL(LOWER(#{catvReactaqDev , jdbcType=VARCHAR}), 'x')
			,CATH_MISSR = IFNULL(LOWER(#{cathMissr , jdbcType=VARCHAR}), 'x')
			,CATH_FALARMR = IFNULL(LOWER(#{cathFalarmr , jdbcType=VARCHAR}), 'x')
			,CATH_REACTR_AVG = IFNULL(LOWER(#{cathReactrAvg , jdbcType=VARCHAR}), 'x')
			,CATH_REACTR_DEV = IFNULL(LOWER(#{cathReactrDev , jdbcType=VARCHAR}), 'x')
			,CATH_MISSAQ = IFNULL(LOWER(#{cathMissaq , jdbcType=VARCHAR}), 'x')
			,CATH_FALARMAQ = IFNULL(LOWER(#{cathFalarmaq , jdbcType=VARCHAR}), 'x')
			,CATH_REACTAQ_AVG = IFNULL(LOWER(#{cathReactaqAvg , jdbcType=VARCHAR}), 'x')
			,CATH_REACTAQ_DEV = IFNULL(LOWER(#{cathReactaqDev , jdbcType=VARCHAR}), 'x')
			,CATC_MISSR = IFNULL(LOWER(#{catcMissr , jdbcType=VARCHAR}), 'x')
			,CATC_FALARMR = IFNULL(LOWER(#{catcFalarmr , jdbcType=VARCHAR}), 'x')
			,CATC_REACTR_AVG = IFNULL(LOWER(#{catcReactrAvg , jdbcType=VARCHAR}), 'x')
			,CATC_REACTR_DEV = IFNULL(LOWER(#{catcReactrDev , jdbcType=VARCHAR}), 'x')
			,CATC_MISSAQ = IFNULL(LOWER(#{catcMissaq , jdbcType=VARCHAR}), 'x')
			,CATC_FALARMAQ = IFNULL(LOWER(#{catcFalarmaq , jdbcType=VARCHAR}), 'x')
			,CATC_REACTAQ_AVG = IFNULL(LOWER(#{catcReactaqAvg , jdbcType=VARCHAR}), 'x')
			,CATC_REACTAQ_DEV = IFNULL(LOWER(#{catcReactaqDev , jdbcType=VARCHAR}), 'x')
			,CATI_MISSR = IFNULL(LOWER(#{catiMissr , jdbcType=VARCHAR}), 'x')
			,CATI_FALARMR = IFNULL(LOWER(#{catiFalarmr , jdbcType=VARCHAR}), 'x')
			,CATI_REACTR_AVG = IFNULL(LOWER(#{catiReactrAvg , jdbcType=VARCHAR}), 'x')
			,CATI_REACTR_DEV = IFNULL(LOWER(#{catiReactrDev , jdbcType=VARCHAR}), 'x')
			,CATI_MISSAQ = IFNULL(LOWER(#{catiMissaq , jdbcType=VARCHAR}), 'x')
			,CATI_FALARMAQ = IFNULL(LOWER(#{catiFalarmaq , jdbcType=VARCHAR}), 'x')
			,CATI_REACTAQ_AVG = IFNULL(LOWER(#{catiReactaqAvg , jdbcType=VARCHAR}), 'x')
			,CATI_REACTAQ_DEV = IFNULL(LOWER(#{catiReactaqDev , jdbcType=VARCHAR}), 'x')
			,CATD_MISSR = IFNULL(LOWER(#{catdMissr , jdbcType=VARCHAR}), 'x')
			,CATD_FALARMR = IFNULL(LOWER(#{catdFalarmr , jdbcType=VARCHAR}), 'x')
			,CATD_REACTR_AVG = IFNULL(LOWER(#{catdReactrAvg , jdbcType=VARCHAR}), 'x')
			,CATD_REACTR_DEV = IFNULL(LOWER(#{catdReactrDev , jdbcType=VARCHAR}), 'x')
			,CATD_MISSAQ = IFNULL(LOWER(#{catdMissaq , jdbcType=VARCHAR}), 'x')
			,CATD_FALARMAQ = IFNULL(LOWER(#{catdFalarmaq , jdbcType=VARCHAR}), 'x')
			,CATD_REACTAQ_AVG = IFNULL(LOWER(#{catdReactaqAvg , jdbcType=VARCHAR}), 'x')
			,CATD_REACTAQ_DEV = IFNULL(LOWER(#{catdReactaqDev , jdbcType=VARCHAR}), 'x')
			,CATMD_REACTR = IFNULL(LOWER(#{catmdReactr , jdbcType=VARCHAR}), 'x')
			,CATMR_REACTR = IFNULL(LOWER(#{catmrReactr , jdbcType=VARCHAR}), 'x')
			,CATMD_SPACER = IFNULL(LOWER(#{catmdSpacer , jdbcType=VARCHAR}), 'x')
			,CATMR_SPACER = IFNULL(LOWER(#{catmrSpacer , jdbcType=VARCHAR}), 'x')
			,CATMD_REACTAQ = IFNULL(LOWER(#{catmdReactaq , jdbcType=VARCHAR}), 'x')
			,CATMR_REACTAQ = IFNULL(LOWER(#{catmrReactaq , jdbcType=VARCHAR}), 'x')
			,CATMD_SPACEAQ = IFNULL(LOWER(#{catmdSpaceaq , jdbcType=VARCHAR}), 'x')
			,CATMR_SPACEAQ = IFNULL(LOWER(#{catmrSpaceaq , jdbcType=VARCHAR}), 'x')
	        ,REMARKS = IFNULL(LOWER(#{remarks , jdbcType=VARCHAR}), 'x')
	        ,UPDATE_DATE = now()
	        ,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<select id="selectNeuropsyExitiiListTotal" parameterType="map" resultType="int">
		
			SELECT COUNT(TARGET_ID)
			FROM (
				 SELECT
					NE.TARGET_ID
				 FROM T_NEUROPSY_EXITII NE
		         LEFT JOIN T_TARGET_MST TM
		         ON NE.TARGET_ID = TM.TARGET_ID
		         AND NE.RND_ID = TM.RND_ID
		         JOIN T_PERFORM_TERM PT
		         ON NE.PERFORM_CNT = PT.PERFORM_CNT
		         LEFT JOIN T_TARGET_DIS_MST TDM
				 ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				 AND TM.TARGET_DIS_ID = TDM.TARGET_ID
		         LEFT JOIN T_CODE_DTL DISE1
		         ON DISE1.CLASS_CD = 'DISE1'
		         AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		         LEFT JOIN T_CODE_DTL PTC
		         ON PTC.CLASS_CD = 'PT001'
		         AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		         LEFT JOIN T_PERFORM_MST PM
				 ON TM.RND_ID = PM.RND_ID
				 AND TM.TARGET_ID = PM.TARGET_ID
				 AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				 AND NE.PERFORM_CNT = PM.PERFORM_CNT
		         WHERE 1=1
		         	AND TM.RND_ID = ${rndId}
		          	AND PM.STATUS != '0004'
		          	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
			        <if test="targetId !=null and targetId != '' ">
						AND NE.TARGET_ID = #{targetId}
					</if>
					<if test="startAge !=null and startAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,EXITII_EXEC_DATE) &gt;= #{startAge}
					</if>
					<if test="endAge !=null and endAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,EXITII_EXEC_DATE) &lt;= #{endAge}
					</if>
					<if test="sex !=null and sex != '' ">
						AND TM.SEX = #{sex}
					</if>
					<if test="protocol !=null and protocol != '' ">
						AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
					</if>
					<if test="performCnt !=null and performCnt != '' ">
						AND NE.PERFORM_CNT = ${performCnt}
					</if>
			) T

	</select>
	
   	<select id="selectNeuropsyExitiiList" parameterType="map" resultMap="neuropsyExitiiList">
   			SELECT B.* FROM (
				SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						NE.RND_ID,
						NE.TARGET_ID,
						TM.TARGET_DIS_ID,
						DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
						CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
						PTC.CLASS_CD_DTL_NM PROTOCOL,
						TM.BIRTH_YM,
						PT.PERFORM_NM PERFORM_CNT_NM,
						PT.PERFORM_CNT,
						FN_CAL_AGE(TM.BIRTH_YM,EXITII_EXEC_DATE) AGE,
						CONCAT(SUBSTR(EXITII_EXEC_DATE,1,4) ,'-',SUBSTR(EXITII_EXEC_DATE,5,2),'-',SUBSTR(EXITII_EXEC_DATE,7,2)) EXITII_EXEC_DATE,
						CASE WHEN EXITII_STROOP_STOS = '#' THEN '-' WHEN EXITII_STROOP_STOS IS NULL OR EXITII_STROOP_STOS = '' THEN 'x' ELSE EXITII_STROOP_STOS END EXITII_STROOP_STOS,
						CASE WHEN EXITII_STROOP_STT = '#' THEN '-' WHEN EXITII_STROOP_STT IS NULL OR EXITII_STROOP_STT = '' THEN 'x' ELSE EXITII_STROOP_STT END EXITII_STROOP_STT,
						CASE WHEN EXITII_STROOP_SEOS = '#' THEN '-' WHEN EXITII_STROOP_SEOS IS NULL OR EXITII_STROOP_SEOS = '' THEN 'x' ELSE EXITII_STROOP_SEOS END EXITII_STROOP_SEOS,
						CASE WHEN EXITII_STROOP_SET = '#' THEN '-' WHEN EXITII_STROOP_SET IS NULL OR EXITII_STROOP_SET = '' THEN 'x' ELSE EXITII_STROOP_SET END EXITII_STROOP_SET,
						CASE WHEN EXITII_STROOP_ITOS = '#' THEN '-' WHEN EXITII_STROOP_ITOS IS NULL OR EXITII_STROOP_ITOS = '' THEN 'x' ELSE EXITII_STROOP_ITOS END EXITII_STROOP_ITOS,
						CASE WHEN EXITII_STROOP_ITT = '#' THEN '-' WHEN EXITII_STROOP_ITT IS NULL OR EXITII_STROOP_ITT = '' THEN 'x' ELSE EXITII_STROOP_ITT END EXITII_STROOP_ITT,
						CASE WHEN EXITII_STROOP_IEOS = '#' THEN '-' WHEN EXITII_STROOP_IEOS IS NULL OR EXITII_STROOP_IEOS = '' THEN 'x' ELSE EXITII_STROOP_IEOS END EXITII_STROOP_IEOS,
						CASE WHEN EXITII_STROOP_IET = '#' THEN '-' WHEN EXITII_STROOP_IET IS NULL OR EXITII_STROOP_IET = '' THEN 'x' ELSE EXITII_STROOP_IET END EXITII_STROOP_IET,
						CASE WHEN EXITII_WORDFQ_RAOS = '#' THEN '-' WHEN EXITII_WORDFQ_RAOS IS NULL OR EXITII_WORDFQ_RAOS = '' THEN 'x' ELSE EXITII_WORDFQ_RAOS END EXITII_WORDFQ_RAOS,
						CASE WHEN EXITII_WORDFQ_RAT = '#' THEN '-' WHEN EXITII_WORDFQ_RAT IS NULL OR EXITII_WORDFQ_RAT = '' THEN 'x' ELSE EXITII_WORDFQ_RAT END EXITII_WORDFQ_RAT,
						CASE WHEN EXITII_WORDFQ_BAOS = '#' THEN '-' WHEN EXITII_WORDFQ_BAOS IS NULL OR EXITII_WORDFQ_BAOS = '' THEN 'x' ELSE EXITII_WORDFQ_BAOS END EXITII_WORDFQ_BAOS,
						CASE WHEN EXITII_WORDFQ_BAT = '#' THEN '-' WHEN EXITII_WORDFQ_BAT IS NULL OR EXITII_WORDFQ_BAT = '' THEN 'x' ELSE EXITII_WORDFQ_BAT END EXITII_WORDFQ_BAT,
						CASE WHEN EXITII_WORDFQ_LAOS = '#' THEN '-' WHEN EXITII_WORDFQ_LAOS IS NULL OR EXITII_WORDFQ_LAOS = '' THEN 'x' ELSE EXITII_WORDFQ_LAOS END EXITII_WORDFQ_LAOS,
						CASE WHEN EXITII_WORDFQ_LAT = '#' THEN '-' WHEN EXITII_WORDFQ_LAT IS NULL OR EXITII_WORDFQ_LAT = '' THEN 'x' ELSE EXITII_WORDFQ_LAT END EXITII_WORDFQ_LAT,
						CASE WHEN EXITII_DESIGN_RAOS = '#' THEN '-' WHEN EXITII_DESIGN_RAOS IS NULL OR EXITII_DESIGN_RAOS = '' THEN 'x' ELSE EXITII_DESIGN_RAOS END EXITII_DESIGN_RAOS,
						CASE WHEN EXITII_DESIGN_RAT = '#' THEN '-' WHEN EXITII_DESIGN_RAT IS NULL OR EXITII_DESIGN_RAT = '' THEN 'x' ELSE EXITII_DESIGN_RAT END EXITII_DESIGN_RAT,
						CASE WHEN EXITII_DESIGN_LAOS = '#' THEN '-' WHEN EXITII_DESIGN_LAOS IS NULL OR EXITII_DESIGN_LAOS = '' THEN 'x' ELSE EXITII_DESIGN_LAOS END EXITII_DESIGN_LAOS,
						CASE WHEN EXITII_DESIGN_LAT = '#' THEN '-' WHEN EXITII_DESIGN_LAT IS NULL OR EXITII_DESIGN_LAT = '' THEN 'x' ELSE EXITII_DESIGN_LAT END EXITII_DESIGN_LAT,
						CASE WHEN EXITII_AVLT_DMOS = '#' THEN '-' WHEN EXITII_AVLT_DMOS IS NULL OR EXITII_AVLT_DMOS = '' THEN 'x' ELSE EXITII_AVLT_DMOS END EXITII_AVLT_DMOS,
						CASE WHEN EXITII_AVLT_DMT = '#' THEN '-' WHEN EXITII_AVLT_DMT IS NULL OR EXITII_AVLT_DMT = '' THEN 'x' ELSE EXITII_AVLT_DMT END EXITII_AVLT_DMT,
						CASE WHEN EXITII_AVLT_DJOS = '#' THEN '-' WHEN EXITII_AVLT_DJOS IS NULL OR EXITII_AVLT_DJOS = '' THEN 'x' ELSE EXITII_AVLT_DJOS END EXITII_AVLT_DJOS,
						CASE WHEN EXITII_AVLT_DJT = '#' THEN '-' WHEN EXITII_AVLT_DJT IS NULL OR EXITII_AVLT_DJT = '' THEN 'x' ELSE EXITII_AVLT_DJT END EXITII_AVLT_DJT,
						CASE WHEN EXITII_CFT_POS = '#' THEN '-' WHEN EXITII_CFT_POS IS NULL OR EXITII_CFT_POS = '' THEN 'x' ELSE EXITII_CFT_POS END EXITII_CFT_POS,
						CASE WHEN EXITII_CFT_PT = '#' THEN '-' WHEN EXITII_CFT_PT IS NULL OR EXITII_CFT_PT = '' THEN 'x' ELSE EXITII_CFT_PT END EXITII_CFT_PT,
						CASE WHEN EXITII_CFT_DOS = '#' THEN '-' WHEN EXITII_CFT_DOS IS NULL OR EXITII_CFT_DOS = '' THEN 'x' ELSE EXITII_CFT_DOS END EXITII_CFT_DOS,
						CASE WHEN EXITII_CFT_DT = '#' THEN '-' WHEN EXITII_CFT_DT IS NULL OR EXITII_CFT_DT = '' THEN 'x' ELSE EXITII_CFT_DT END EXITII_CFT_DT,
						CASE WHEN EXITII_EFQ_ESS = '#' THEN '-' WHEN EXITII_EFQ_ESS IS NULL OR EXITII_EFQ_ESS = '' THEN 'x' ELSE EXITII_EFQ_ESS END EXITII_EFQ_ESS,
						CASE WHEN EXITII_EFQ_NIS = '#' THEN '-' WHEN EXITII_EFQ_NIS IS NULL OR EXITII_EFQ_NIS = '' THEN 'x' ELSE EXITII_EFQ_NIS END EXITII_EFQ_NIS,
						CASE WHEN EXITII_EFQ_PERCENTILE = '#' THEN '-' WHEN EXITII_EFQ_PERCENTILE IS NULL OR EXITII_EFQ_PERCENTILE = '' THEN 'x' ELSE EXITII_EFQ_PERCENTILE END EXITII_EFQ_PERCENTILE,
						CASE WHEN EXITII_EFQ_EVAL = '#' THEN '-' WHEN EXITII_EFQ_EVAL IS NULL OR EXITII_EFQ_EVAL = '' THEN 'x' ELSE EXITII_EFQ_EVAL END EXITII_EFQ_EVAL,
						NE.REMARKS 
					FROM T_NEUROPSY_EXITII NE
					LEFT JOIN T_TARGET_MST TM
					ON NE.TARGET_ID = TM.TARGET_ID
					AND NE.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON NE.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
					ON TM.RND_ID = PM.RND_ID
					AND TM.TARGET_ID = PM.TARGET_ID
					AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
					AND NE.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
			        	AND TM.RND_ID = ${rndId}
			        	AND PM.STATUS != '0004'
			        	AND NOT PM.PERFORM_CNT = 2
            			AND NOT PM.PERFORM_CNT = 3
            			<if test="disClassDtl !=null and disClassDtl != '' ">
            			AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            			</if>
			        	<if test="schKeyWord !='schTargetId' ">
					        <if test="targetId !=null and targetId != '' ">
								AND TM.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,EXITII_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,EXITII_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND TM.SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND NE.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (NE.TARGET_ID, NE.PERFORM_CNT, NE.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						</if>
					ORDER BY NE.TARGET_ID, NE.PERFORM_CNT
				) A
			) B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
				
	</select>
   
   	<update id="insertNeuropsyExitii" parameterType="map">
      INSERT INTO T_NEUROPSY_EXITII(
        	 TARGET_ID
        	,PERFORM_CNT
        	,RND_ID
        	,EXITII_EXEC_DATE
			,EXITII_STROOP_STOS
			,EXITII_STROOP_STT
			,EXITII_STROOP_SEOS
			,EXITII_STROOP_SET
			,EXITII_STROOP_ITOS
			,EXITII_STROOP_ITT
			,EXITII_STROOP_IEOS
			,EXITII_STROOP_IET
			,EXITII_WORDFQ_RAOS
			,EXITII_WORDFQ_RAT
			,EXITII_WORDFQ_BAOS
			,EXITII_WORDFQ_BAT
			,EXITII_WORDFQ_LAOS
			,EXITII_WORDFQ_LAT
			,EXITII_DESIGN_RAOS
			,EXITII_DESIGN_RAT
			,EXITII_DESIGN_LAOS
			,EXITII_DESIGN_LAT
			,EXITII_AVLT_DMOS
			,EXITII_AVLT_DMT
			,EXITII_AVLT_DJOS
			,EXITII_AVLT_DJT
			,EXITII_CFT_POS
			,EXITII_CFT_PT
			,EXITII_CFT_DOS
			,EXITII_CFT_DT
			,EXITII_EFQ_ESS
			,EXITII_EFQ_NIS
			,EXITII_EFQ_PERCENTILE
			,EXITII_EFQ_EVAL
			,REMARKS
         	,CREATE_DATE
     	    ,CREATE_BY
			,UPDATE_DATE
	        ,UPDATE_BY
	      )VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{exitiiExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{exitiiStroopStos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiStroopStt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiStroopSeos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiStroopSet, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiStroopItos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiStroopItt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiStroopIeos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiStroopIet, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiWordfqRaos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiWordfqRat, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiWordfqBaos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiWordfqBat, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiWordfqLaos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiWordfqLat, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiDesignRaos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiDesignRat, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiDesignLaos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiDesignLat, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiAvltDmos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiAvltDmt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiAvltDjos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiAvltDjt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiCftPos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiCftPt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiCftDos, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiCftDt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiEfqEss, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiEfqNis, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiEfqPercentile, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exitiiEfqEval, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
	      )
	      ON DUPLICATE KEY UPDATE
	         EXITII_EXEC_DATE = #{exitiiExecDate , jdbcType=VARCHAR}
			,EXITII_STROOP_STOS = IFNULL(LOWER(#{exitiiStroopStos , jdbcType=VARCHAR}), 'x')
			,EXITII_STROOP_STT = IFNULL(LOWER(#{exitiiStroopStt , jdbcType=VARCHAR}), 'x')
			,EXITII_STROOP_SEOS = IFNULL(LOWER(#{exitiiStroopSeos , jdbcType=VARCHAR}), 'x')
			,EXITII_STROOP_SET = IFNULL(LOWER(#{exitiiStroopSet , jdbcType=VARCHAR}), 'x')
			,EXITII_STROOP_ITOS = IFNULL(LOWER(#{exitiiStroopItos , jdbcType=VARCHAR}), 'x')
			,EXITII_STROOP_ITT = IFNULL(LOWER(#{exitiiStroopItt , jdbcType=VARCHAR}), 'x')
			,EXITII_STROOP_IEOS = IFNULL(LOWER(#{exitiiStroopIeos , jdbcType=VARCHAR}), 'x')
			,EXITII_STROOP_IET = IFNULL(LOWER(#{exitiiStroopIet , jdbcType=VARCHAR}), 'x')
			,EXITII_WORDFQ_RAOS = IFNULL(LOWER(#{exitiiWordfqRaos , jdbcType=VARCHAR}), 'x')
			,EXITII_WORDFQ_RAT = IFNULL(LOWER(#{exitiiWordfqRat , jdbcType=VARCHAR}), 'x')
			,EXITII_WORDFQ_BAOS = IFNULL(LOWER(#{exitiiWordfqBaos , jdbcType=VARCHAR}), 'x')
			,EXITII_WORDFQ_BAT = IFNULL(LOWER(#{exitiiWordfqBat , jdbcType=VARCHAR}), 'x')
			,EXITII_WORDFQ_LAOS = IFNULL(LOWER(#{exitiiWordfqLaos , jdbcType=VARCHAR}), 'x')
			,EXITII_WORDFQ_LAT = IFNULL(LOWER(#{exitiiWordfqLat , jdbcType=VARCHAR}), 'x')
			,EXITII_DESIGN_RAOS = IFNULL(LOWER(#{exitiiDesignRaos , jdbcType=VARCHAR}), 'x')
			,EXITII_DESIGN_RAT = IFNULL(LOWER(#{exitiiDesignRat , jdbcType=VARCHAR}), 'x')
			,EXITII_DESIGN_LAOS = IFNULL(LOWER(#{exitiiDesignLaos , jdbcType=VARCHAR}), 'x')
			,EXITII_DESIGN_LAT = IFNULL(LOWER(#{exitiiDesignLat , jdbcType=VARCHAR}), 'x')
			,EXITII_AVLT_DMOS = IFNULL(LOWER(#{exitiiAvltDmos , jdbcType=VARCHAR}), 'x')
			,EXITII_AVLT_DMT = IFNULL(LOWER(#{exitiiAvltDmt , jdbcType=VARCHAR}), 'x')
			,EXITII_AVLT_DJOS = IFNULL(LOWER(#{exitiiAvltDjos , jdbcType=VARCHAR}), 'x')
			,EXITII_AVLT_DJT = IFNULL(LOWER(#{exitiiAvltDjt , jdbcType=VARCHAR}), 'x')
			,EXITII_CFT_POS = IFNULL(LOWER(#{exitiiCftPos , jdbcType=VARCHAR}), 'x')
			,EXITII_CFT_PT = IFNULL(LOWER(#{exitiiCftPt , jdbcType=VARCHAR}), 'x')
			,EXITII_CFT_DOS = IFNULL(LOWER(#{exitiiCftDos , jdbcType=VARCHAR}), 'x')
			,EXITII_CFT_DT = IFNULL(LOWER(#{exitiiCftDt , jdbcType=VARCHAR}), 'x')
			,EXITII_EFQ_ESS = IFNULL(LOWER(#{exitiiEfqEss , jdbcType=VARCHAR}), 'x')
			,EXITII_EFQ_NIS = IFNULL(LOWER(#{exitiiEfqNis , jdbcType=VARCHAR}), 'x')
			,EXITII_EFQ_PERCENTILE = IFNULL(LOWER(#{exitiiEfqPercentile , jdbcType=VARCHAR}), 'x')
			,EXITII_EFQ_EVAL = IFNULL(LOWER(#{exitiiEfqEval , jdbcType=VARCHAR}), 'x')
			,REMARKS = IFNULL(LOWER(#{remarks , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
   
	<select id="selectNeuropsyCptListTotal" parameterType="map" resultType="int">
		
			SELECT COUNT(TARGET_ID)
			FROM (
				 SELECT
					NC.TARGET_ID
				 FROM T_NEUROPSY_CPT3 NC 
		         LEFT JOIN T_TARGET_MST TM
		         ON NC.TARGET_ID = TM.TARGET_ID
		         AND NC.RND_ID = TM.RND_ID
		         JOIN T_PERFORM_TERM PT
		         ON NC.PERFORM_CNT = PT.PERFORM_CNT
		         LEFT JOIN T_TARGET_DIS_MST TDM
				ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				AND TM.TARGET_DIS_ID = TDM.TARGET_ID
		        LEFT JOIN T_CODE_DTL DISE1
		        ON DISE1.CLASS_CD = 'DISE1'
		        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		        LEFT JOIN T_CODE_DTL PTC
		        ON PTC.CLASS_CD = 'PT001'
		        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		        LEFT JOIN T_PERFORM_MST PM
				ON TM.RND_ID = PM.RND_ID
				AND TM.TARGET_ID = PM.TARGET_ID
				AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				AND NC.PERFORM_CNT = PM.PERFORM_CNT
		        WHERE 1=1
		        	AND TM.RND_ID = ${rndId}
			        AND PM.STATUS != '0004'
			        AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
			        <if test="targetId !=null and targetId != '' ">
						AND NC.TARGET_ID = #{targetId}
					</if>
					<if test="startAge !=null and startAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,CPT3_EXEC_DATE) &gt;= #{startAge}
					</if>
					<if test="endAge !=null and endAge != '' ">
						AND  FN_CAL_AGE(TM.BIRTH_YM,CPT3_EXEC_DATE) &lt;= #{endAge}
					</if>
					<if test="sex !=null and sex != '' ">
						AND TM.SEX = #{sex}
					</if>
					<if test="protocol !=null and protocol != '' ">
						AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
					</if>
					<if test="performCnt !=null and performCnt != '' ">
						AND NC.PERFORM_CNT = ${performCnt}
					</if>
			) T

	</select>
	
   	<select id="selectNeuropsyCptList" parameterType="map" resultMap="neuropsyCptList">
	     SELECT B.* FROM (
		      SELECT  @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
				SELECT
					 NC.RND_ID,
			         NC.TARGET_ID,
			         TM.TARGET_DIS_ID,
			         DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					 CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					 PTC.CLASS_CD_DTL_NM PROTOCOL,
			         TM.BIRTH_YM,
			         PT.PERFORM_NM PERFORM_CNT_NM,
			         PT.PERFORM_CNT,
			         FN_CAL_AGE(TM.BIRTH_YM,CPT3_EXEC_DATE) AGE,
			         CONCAT(SUBSTR(CPT3_EXEC_DATE,1,4) ,'-',SUBSTR(CPT3_EXEC_DATE,5,2),'-',SUBSTR(CPT3_EXEC_DATE,7,2)) CPT3_EXEC_DATE,
					 CASE WHEN DETECT_T = '#' THEN '-' WHEN DETECT_T IS NULL OR DETECT_T = '' THEN 'x' ELSE DETECT_T END DETECT_T,
					 CASE WHEN DETECT_GL = '#' THEN '-' WHEN DETECT_GL IS NULL OR DETECT_GL = '' THEN 'x' ELSE DETECT_GL END DETECT_GL,
					 CASE WHEN OMISSION_T = '#' THEN '-' WHEN OMISSION_T IS NULL OR OMISSION_T = '' THEN 'x' ELSE OMISSION_T END OMISSION_T,
					 CASE WHEN OMISSION_GL = '#' THEN '-' WHEN OMISSION_GL IS NULL OR OMISSION_GL = '' THEN 'x' ELSE OMISSION_GL END OMISSION_GL,
					 CASE WHEN COMISSION_T = '#' THEN '-' WHEN COMISSION_T IS NULL OR COMISSION_T = '' THEN 'x' ELSE COMISSION_T END COMISSION_T,
					 CASE WHEN COMISSION_GL = '#' THEN '-' WHEN COMISSION_GL IS NULL OR COMISSION_GL = '' THEN 'x' ELSE COMISSION_GL END COMISSION_GL,
					 CASE WHEN PRESERV_T = '#' THEN '-' WHEN PRESERV_T IS NULL OR PRESERV_T = '' THEN 'x' ELSE PRESERV_T END PRESERV_T,
					 CASE WHEN PRESERV_GL = '#' THEN '-' WHEN PRESERV_GL IS NULL OR PRESERV_GL = '' THEN 'x' ELSE PRESERV_GL END PRESERV_GL,
					 CASE WHEN HRT_T = '#' THEN '-' WHEN HRT_T IS NULL OR HRT_T = '' THEN 'x' ELSE HRT_T END HRT_T,
					 CASE WHEN HRT_GL = '#' THEN '-' WHEN HRT_GL IS NULL OR HRT_GL = '' THEN 'x' ELSE HRT_GL END HRT_GL,
					 CASE WHEN HRT_SD_T = '#' THEN '-' WHEN HRT_SD_T IS NULL OR HRT_SD_T = '' THEN 'x' ELSE HRT_SD_T END HRT_SD_T,
					 CASE WHEN HRT_SD_GL = '#' THEN '-' WHEN HRT_SD_GL IS NULL OR HRT_SD_GL = '' THEN 'x' ELSE HRT_SD_GL END HRT_SD_GL,
					 CASE WHEN VARIA_T = '#' THEN '-' WHEN VARIA_T IS NULL OR VARIA_T = '' THEN 'x' ELSE VARIA_T END VARIA_T,
					 CASE WHEN VARIA_GL = '#' THEN '-' WHEN VARIA_GL IS NULL OR VARIA_GL = '' THEN 'x' ELSE VARIA_GL END VARIA_GL,
					 CASE WHEN HRT_BCT = '#' THEN '-' WHEN HRT_BCT IS NULL OR HRT_BCT = '' THEN 'x' ELSE HRT_BCT END HRT_BCT,
					 CASE WHEN HRT_BCG = '#' THEN '-' WHEN HRT_BCG IS NULL OR HRT_BCG = '' THEN 'x' ELSE HRT_BCG END HRT_BCG,
					 CASE WHEN HRT_ICT = '#' THEN '-' WHEN HRT_ICT IS NULL OR HRT_ICT = '' THEN 'x' ELSE HRT_ICT END HRT_ICT,
					 CASE WHEN HRT_ICG = '#' THEN '-' WHEN HRT_ICG IS NULL OR HRT_ICG = '' THEN 'x' ELSE HRT_ICG END HRT_ICG,
					 CASE WHEN RESPON_STYLE = '#' THEN '-' WHEN RESPON_STYLE IS NULL OR RESPON_STYLE = '' THEN 'x' ELSE RESPON_STYLE END RESPON_STYLE,
					 NC.REMARKS   
			      FROM T_NEUROPSY_CPT3 NC 
			      LEFT JOIN T_TARGET_MST TM
			      ON NC.TARGET_ID = TM.TARGET_ID
			      AND NC.RND_ID = TM.RND_ID
			      JOIN T_PERFORM_TERM PT
			      ON NC.PERFORM_CNT = PT.PERFORM_CNT
			      LEFT JOIN T_TARGET_DIS_MST TDM
				  ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			 	  AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			      LEFT JOIN T_CODE_DTL DISE1
			      ON DISE1.CLASS_CD = 'DISE1'
			      AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			      LEFT JOIN T_CODE_DTL PTC
			      ON PTC.CLASS_CD = 'PT001'
			      AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			      LEFT JOIN T_PERFORM_MST PM
				  ON TM.RND_ID = PM.RND_ID
				  AND TM.TARGET_ID = PM.TARGET_ID
				  AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				  AND NC.PERFORM_CNT = PM.PERFORM_CNT
			      JOIN (SELECT @ROWNUM:=0) AS R
			      WHERE 1=1
			      	AND TM.RND_ID = ${rndId}
			      	AND PM.STATUS != '0004'
			      	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
			      	<if test="schKeyWord !='schTargetId' ">
				        <if test="targetId !=null and targetId != '' ">
							AND NC.TARGET_ID = #{targetId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,CPT3_EXEC_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,CPT3_EXEC_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND TM.SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND NC.PERFORM_CNT = ${performCnt}
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (NC.TARGET_ID, NC.PERFORM_CNT, NC.RND_ID, TM.DIS_CLASS_DTL)
								IN (${schKeyWord})
						</if>
					</if>
			      ORDER BY NC.TARGET_ID, NC.PERFORM_CNT
			  ) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
	      LIMIT #{start}, #{limit}
	
	</select>
   
   	<update id="insertNeuropsyCpt" parameterType="map">
      INSERT INTO T_NEUROPSY_CPT3(
        	 TARGET_ID
        	,PERFORM_CNT
        	,RND_ID
        	,CPT3_EXEC_DATE
			,DETECT_T
			,DETECT_GL
			,OMISSION_T
			,OMISSION_GL
			,COMISSION_T
			,COMISSION_GL
			,PRESERV_T
			,PRESERV_GL
			,HRT_T
			,HRT_GL
			,HRT_SD_T
			,HRT_SD_GL
			,VARIA_T
			,VARIA_GL
			,HRT_BCT
			,HRT_BCG
			,HRT_ICT
			,HRT_ICG
			,RESPON_STYLE
			,REMARKS
         	,CREATE_DATE
     	    ,CREATE_BY
			,UPDATE_DATE
	        ,UPDATE_BY
	      )VALUES(
	         #{targetId, jdbcType=VARCHAR}
	         , (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
	         , #{rndId, jdbcType=VARCHAR}
	         , #{cpt3ExecDate, jdbcType=VARCHAR}
		 	 , IFNULL(LOWER(#{detectT, jdbcType=VARCHAR}), 'x')
		 	 , IFNULL(LOWER(#{detectGl, jdbcType=VARCHAR}), 'x')
		 	 , IFNULL(LOWER(#{omissionT, jdbcType=VARCHAR}), 'x')
		 	 , IFNULL(LOWER(#{omissionGl, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{comissionT, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{comissionGl, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{preservT, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{preservGl, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtT, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtGl, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtSdT, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtSdGl, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{variaT, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{variaGl, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtBct, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtBcg, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtIct, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{hrtIcg, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{responStyle, jdbcType=VARCHAR}), 'x')
			 , IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
	         , now()
	         , #{createBy , jdbcType=VARCHAR}
	         , now()
	         , #{createBy , jdbcType=VARCHAR}
	      )
	      ON DUPLICATE KEY UPDATE
	         CPT3_EXEC_DATE = #{cpt3ExecDate , jdbcType=VARCHAR}
			 ,DETECT_T = IFNULL(LOWER(#{detectT , jdbcType=VARCHAR}), 'x')
			 ,DETECT_GL = IFNULL(LOWER(#{detectGl , jdbcType=VARCHAR}), 'x')
			 ,OMISSION_T = IFNULL(LOWER(#{omissionT , jdbcType=VARCHAR}), 'x')
			 ,OMISSION_GL = IFNULL(LOWER(#{omissionGl , jdbcType=VARCHAR}), 'x')
			 ,COMISSION_T = IFNULL(LOWER(#{comissionT , jdbcType=VARCHAR}), 'x')
			 ,COMISSION_GL = IFNULL(LOWER(#{comissionGl , jdbcType=VARCHAR}), 'x')
			 ,PRESERV_T = IFNULL(LOWER(#{preservT , jdbcType=VARCHAR}), 'x')
			 ,PRESERV_GL = IFNULL(LOWER(#{preservGl , jdbcType=VARCHAR}), 'x')
			 ,HRT_T = IFNULL(LOWER(#{hrtT , jdbcType=VARCHAR}), 'x')
			 ,HRT_GL = IFNULL(LOWER(#{hrtGl , jdbcType=VARCHAR}), 'x')
			 ,HRT_SD_T = IFNULL(LOWER(#{hrtSdT , jdbcType=VARCHAR}), 'x')
			 ,HRT_SD_GL = IFNULL(LOWER(#{hrtSdGl , jdbcType=VARCHAR}), 'x')
			 ,VARIA_T = IFNULL(LOWER(#{variaT , jdbcType=VARCHAR}), 'x')
			 ,VARIA_GL = IFNULL(LOWER(#{variaGl , jdbcType=VARCHAR}), 'x')
			 ,HRT_BCT = IFNULL(LOWER(#{hrtBct , jdbcType=VARCHAR}), 'x')
			 ,HRT_BCG = IFNULL(LOWER(#{hrtBcg , jdbcType=VARCHAR}), 'x')
			 ,HRT_ICT = IFNULL(LOWER(#{hrtIct , jdbcType=VARCHAR}), 'x')
			 ,HRT_ICG = IFNULL(LOWER(#{hrtIcg , jdbcType=VARCHAR}), 'x')
			 ,RESPON_STYLE = IFNULL(LOWER(#{responStyle , jdbcType=VARCHAR}), 'x')
			 ,REMARKS = IFNULL(LOWER(#{remarks , jdbcType=VARCHAR}), 'x')
	         ,UPDATE_DATE = now()
	         ,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	
	<select id="selectNeuropsyTmtList" parameterType="map" resultMap="neuropsyTmtList">
		SELECT B.* FROM (
			SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
				SELECT
					NT.RND_ID,
					NT.TARGET_ID,
					TM.TARGET_DIS_ID,
					DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
					CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
					PTC.CLASS_CD_DTL_NM PROTOCOL,
					TM.BIRTH_YM,
					PT.PERFORM_NM PERFORM_CNT_NM,
					PT.PERFORM_CNT,
					FN_CAL_AGE(TM.BIRTH_YM,TMT_EXEC_DATE) AGE,
					CONCAT(SUBSTR(TMT_EXEC_DATE,1,4) ,'-',SUBSTR(TMT_EXEC_DATE,5,2),'-',SUBSTR(TMT_EXEC_DATE,7,2)) TMT_EXEC_DATE,
					CASE WHEN TMT_ART = '#' THEN '-' WHEN TMT_ART IS NULL OR TMT_ART = '' THEN 'x' ELSE TMT_ART END TMT_ART,
					CASE WHEN TMT_A_ERROR = '#' THEN '-' WHEN TMT_A_ERROR IS NULL OR TMT_A_ERROR = '' THEN 'x' ELSE TMT_A_ERROR END TMT_A_ERROR,
					CASE WHEN TMT_BRT = '#' THEN '-' WHEN TMT_BRT IS NULL OR TMT_BRT = '' THEN 'x' ELSE TMT_BRT END TMT_BRT,
					CASE WHEN TMT_B_ERROR = '#' THEN '-' WHEN TMT_B_ERROR IS NULL OR TMT_B_ERROR = '' THEN 'x' ELSE TMT_B_ERROR END TMT_B_ERROR,
					NT.REMARKS
				FROM T_NEUROPSY_TMT NT
				LEFT JOIN T_TARGET_MST TM
				ON NT.TARGET_ID = TM.TARGET_ID
				AND NT.RND_ID = TM.RND_ID
				JOIN T_PERFORM_TERM PT
				ON NT.PERFORM_CNT = PT.PERFORM_CNT
				LEFT JOIN T_TARGET_DIS_MST TDM
				ON TM.TARGET_ID = TDM.TARGET_ORG_ID
				AND TM.TARGET_DIS_ID = TDM.TARGET_ID
				LEFT JOIN T_CODE_DTL DISE1
		        ON DISE1.CLASS_CD = 'DISE1'
		        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
		        LEFT JOIN T_CODE_DTL PTC
		        ON PTC.CLASS_CD = 'PT001'
		        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
		        LEFT JOIN T_PERFORM_MST PM
				ON TM.RND_ID = PM.RND_ID
				AND TM.TARGET_ID = PM.TARGET_ID
				AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
				AND NT.PERFORM_CNT = PM.PERFORM_CNT
		        JOIN (SELECT @ROWNUM:=0) AS R
		        WHERE 1=1
		        	AND TM.RND_ID = ${rndId}
		        	AND PM.STATUS != '0004'
		        	AND NOT PM.PERFORM_CNT = 2
            		AND NOT PM.PERFORM_CNT = 3
            		<if test="disClassDtl !=null and disClassDtl != '' ">
            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            		</if>
		        	<if test="schKeyWord !='schTargetId' ">
				        <if test="targetId !=null and targetId != '' ">
							AND NT.TARGET_ID = #{targetId}
						</if>
						<if test="startAge !=null and startAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,TMT_EXEC_DATE) &gt;= #{startAge}
						</if>
						<if test="endAge !=null and endAge != '' ">
							AND  FN_CAL_AGE(TM.BIRTH_YM,TMT_EXEC_DATE) &lt;= #{endAge}
						</if>
						<if test="sex !=null and sex != '' ">
							AND TM.SEX = #{sex}
						</if>
						<if test="protocol !=null and protocol != '' ">
							AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
						</if>
						<if test="performCnt !=null and performCnt != '' ">
							AND NT.PERFORM_CNT = ${performCnt}
						</if>
						<if test='schKeyField =="selectDown"'>
							AND (NT.TARGET_ID, NT.PERFORM_CNT, NT.RND_ID, TM.DIS_CLASS_DTL)
								IN (${schKeyWord})
						</if>
					</if>
				ORDER BY NT.TARGET_ID, NT.PERFORM_CNT
			) A
		) B
		WHERE 1=1
			<if test="schKeyWord == 'schTargetId' ">
				AND B.TARGET_ID = #{targetId}
				AND B.PERFORM_CNT = ${performCnt}
			</if> 
		LIMIT #{start}, #{limit}
	</select>
	
	
	<select id="selectNeuropsyTmtListTotal" parameterType="map" resultType="int">
	
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NT.TARGET_ID
			FROM T_NEUROPSY_TMT NT
			LEFT JOIN T_TARGET_MST TM
			ON NT.TARGET_ID = TM.TARGET_ID
			AND NT.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NT.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NT.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		        AND PM.STATUS != '0004'
		        AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NT.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,TMT_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,TMT_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NT.PERFORM_CNT = ${performCnt}
				</if>
				
		) T

	</select>
	
	<update id="insertNeuropsyTmt" parameterType="map">
	 <![CDATA[
		INSERT INTO T_NEUROPSY_TMT(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,TMT_EXEC_DATE
			,TMT_ART
			,TMT_A_ERROR
			,TMT_BRT
			,TMT_B_ERROR
			,REMARKS
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{tmtExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{tmtArt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{tmtAError, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{tmtBrt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{tmtBError, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			TMT_EXEC_DATE = #{tmtExecDate , jdbcType=VARCHAR}
			,TMT_ART = IFNULL(LOWER(#{tmtArt, jdbcType=VARCHAR}), 'x')
			,TMT_A_ERROR = IFNULL(LOWER(#{tmtAError, jdbcType=VARCHAR}), 'x')
			,TMT_BRT = IFNULL(LOWER(#{tmtBrt, jdbcType=VARCHAR}), 'x')
			,TMT_B_ERROR = IFNULL(LOWER(#{tmtBError, jdbcType=VARCHAR}), 'x')
			,REMARKS = IFNULL(LOWER(#{remarks, jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	 ]]>
	</update>
	
	<delete id="deleteNeuropsyS1" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_S1 
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyAta" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_ATA
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyStroop" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_STROOP
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyCctt" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_CCTT 
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyWsct" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_WSCT
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyCat" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_CAT
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyExitii" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_EXITII
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyCpt" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_CPT3
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyTmt" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_TMT
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<select id="selectNeuropsyTotalList" parameterType="map" resultMap="neuropsyTotalList">
		<!-- 심리검사 전체조회값 -->
		SELECT
			TM.TARGET_ID,
            TM.TARGET_DIS_ID,
			TM.RND_ID,
			DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
			CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
			CONCAT(SUBSTR(TM.BIRTH_YM,1,4) ,'-',SUBSTR(TM.BIRTH_YM,5,2),'-',SUBSTR(TM.BIRTH_YM,7,2))  BIRTH_YM, 
			PTC.CLASS_CD_DTL_NM PROTOCOL,
			PT.PERFORM_NM PERFORM_CNT_NM,
			PT.PERFORM_CNT,
		    FN_CAL_AGE(TM.BIRTH_YM,VISIT_DATE) AGE,
			CONCAT(SUBSTR(VISIT_DATE,1,4) ,'-',SUBSTR(VISIT_DATE,5,2),'-',SUBSTR(VISIT_DATE,7,2))  EXEC_DATE,
			CASE WHEN ISNULL(S1) OR S1 = 'Z' THEN 'x' WHEN S1 = '#' THEN '-' ELSE 'o' END S1,
			CASE WHEN ISNULL(ATA) OR ATA = 'Z' THEN 'x' WHEN ATA = '#' THEN '-' ELSE 'o' END ATA,
			CASE WHEN ISNULL(STROOP) OR STROOP = 'Z' THEN 'x' WHEN STROOP = '#' THEN '-' ELSE 'o' END STROOP,
			CASE WHEN ISNULL(CCTT) OR CCTT ='Z' THEN 'x' WHEN CCTT = '#' THEN '-' ELSE 'o' END CCTT,
			CASE WHEN ISNULL(WSCT) OR WSCT ='Z' THEN 'x' WHEN WSCT = '#' THEN '-' ELSE 'o' END WSCT,
			CASE WHEN ISNULL(CAT) OR CAT = 'Z' THEN 'x' WHEN CAT = '#' THEN '-' ELSE 'o' END CAT,
			CASE WHEN ISNULL(EXIT_II) OR EXIT_II = 'Z' THEN 'x' WHEN EXIT_II = '#' THEN '-' ELSE 'o' END EXIT_II,
			CASE WHEN ISNULL(CPT_3) OR CPT_3 = 'Z' THEN 'x' WHEN CPT_3 = '#' THEN '-' ELSE 'o' END CPT_3,
			CASE WHEN ISNULL(TMT) OR TMT = 'Z' THEN 'x' WHEN TMT = '#' THEN '-' ELSE 'o' END TMT,
			CASE WHEN ISNULL(ADOS1) OR ADOS1 = 'Z' THEN 'x' WHEN ADOS1 = '#' THEN '-' ELSE 'o' END ADOS1,
			CASE WHEN ISNULL(ADOS2) OR ADOS2 = 'Z' THEN 'x' WHEN ADOS2 = '#' THEN '-' ELSE 'o' END ADOS2,
		<!--CASE WHEN ISNULL(ADOS3) OR ADOS3 = 'Z' THEN 'x' WHEN ADOS3 = '#' THEN '-' ELSE 'o' END ADOS3, -->	
			CASE WHEN ISNULL(PEP) OR PEP = 'Z' THEN 'x' WHEN PEP = '#' THEN '-' ELSE 'o' END PEP,
			CASE WHEN ISNULL(SMS) OR SMS = 'Z' THEN 'x' WHEN SMS = '#' THEN '-' ELSE 'o' END SMS,
			CASE WHEN ISNULL(CARS) OR CARS = 'Z' THEN 'x' WHEN CARS = '#' THEN '-' ELSE 'o' END CARS
		FROM T_TARGET_MST TM 
        LEFT JOIN T_TARGET_DIS_MST TDM
        ON TM.TARGET_ID = TDM.TARGET_ORG_ID
        AND TM.TARGET_DIS_ID = TDM.TARGET_ID
		LEFT JOIN T_PERFORM_MST PM
		ON TM.TARGET_ID = PM.TARGET_ID
		AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
		AND TM.RND_ID = PM.RND_ID
		LEFT JOIN T_PERFORM_TERM PT
		ON TM.RND_ID = PT.RND_ID
		AND PM.PERFORM_CNT = PT.PERFORM_CNT
		LEFT JOIN T_CODE_DTL DISE1
        ON DISE1.CLASS_CD = 'DISE1'
        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
        LEFT JOIN T_CODE_DTL PTC
        ON PTC.CLASS_CD = 'PT001'
        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
        WHERE 1=1
        	AND TM.RND_ID = '1'
		    AND PM.STATUS != '0004'
		    AND NOT PM.PERFORM_CNT = 2
            AND NOT PM.PERFORM_CNT = 3
            <if test="disClassDtl !=null and disClassDtl != '' ">
            AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            </if>
        	<if test="targetId !=null and targetId != '' ">
				AND TM.TARGET_ID = #{targetId}
			</if>
			<if test="startAge !=null and startAge != '' ">
				AND  FN_CAL_AGE(TM.BIRTH_YM,VISIT_DATE) &gt;= #{startAge}
			</if>
			<if test="endAge !=null and endAge != '' ">
				AND  FN_CAL_AGE(TM.BIRTH_YM,VISIT_DATE) &lt;= #{endAge}
			</if>
			<if test="sex !=null and sex != '' ">
				AND TM.SEX = #{sex}
			</if>
			<if test="protocol !=null and protocol != '' ">
				AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
			</if>
			<if test="performCnt !=null and performCnt != '' ">
				AND PM.PERFORM_CNT = ${performCnt}
			</if>
			<if test='ata =="Y"'>
				AND ATA IS NOT NULL
			</if>
			<if test='stroop =="Y"'>
				AND STROOP IS NOT NULL
			</if>
			<if test='cctt =="Y"'>
				AND CCTT IS NOT NULL
			</if>
			<if test='wsct =="Y"'>
				AND WSCT IS NOT NULL
			</if>
			<if test='cat =="Y"'>
				AND CAT IS NOT NULL
			</if>
			<if test='exitii =="Y"'>
				AND EXIT_II IS NOT NULL
			</if>
			<if test='cpt3 =="Y"'>
				AND CPT_3 IS NOT NULL
			</if>
			<if test='tmt =="Y"'>
				AND TMT IS NOT NULL
			</if>
			<if test='schKeyField =="selectDown"'>
				AND (TM.TARGET_ID, PM.PERFORM_CNT, TM.RND_ID, TM.DIS_CLASS_DTL)
					IN (${schKeyWord})
			</if>
		ORDER BY TM.TARGET_ID, PM.PERFORM_CNT
		LIMIT #{start}, #{limit}
	</select>
	
	
	<select id="selectNeuropsyTotalListTotal" parameterType="map" resultType="int">
	
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				TM.TARGET_ID
			FROM T_TARGET_MST TM 
			LEFT JOIN T_TARGET_DIS_MST TDM
	        ON TM.TARGET_ID = TDM.TARGET_ORG_ID
	        AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_PERFORM_MST PM
			ON TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND TM.RND_ID = PM.RND_ID
			LEFT JOIN T_PERFORM_TERM PT
			ON TM.RND_ID = PT.RND_ID
			AND PM.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		    	AND PM.STATUS != '0004'
		    	AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
				AND TM.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,VISIT_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,VISIT_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND PM.PERFORM_CNT = ${performCnt}
				</if>
				<if test='ata =="Y"'>
					AND ATA IS NOT NULL
				</if>
				<if test='stroop =="Y"'>
					AND STROOP IS NOT NULL
				</if>
				<if test='cctt =="Y"'>
					AND CCTT IS NOT NULL
				</if>
				<if test='wsct =="Y"'>
					AND WSCT IS NOT NULL
				</if>
				<if test='cat =="Y"'>
					AND CAT IS NOT NULL
				</if>
				<if test='exitii =="Y"'>
					AND EXIT_II IS NOT NULL
				</if>
				<if test='cpt3 =="Y"'>
					AND CPT_3 IS NOT NULL
				</if>
			<if test='tmt =="Y"'>
				AND TMT IS NOT NULL
			</if>
			<if test='schKeyField =="selectDown"'>
				AND (TM.TARGET_ID, PM.PERFORM_CNT, TM.RND_ID, TM.DIS_CLASS_DTL)
					IN (${schKeyWord})
			</if>
		) T

	</select>
	
	
	<update id="updatePerformMst" parameterType="map">
		
		UPDATE T_PERFORM_MST
		SET
			<if test="neuropsyKind =='S1'">
				S1 = #{s1ExecDate}
			</if>
			<if test="neuropsyKind =='ATA'">
				ATA = #{ataExecDate}
			</if>
			<if test="neuropsyKind =='CAT'">
				CAT = #{catExecDate}
			</if>
			<if test="neuropsyKind =='CCTT'">
				CCTT = #{ccttExecDate}
			</if>
			<if test="neuropsyKind =='CPT_3'">
				CPT_3 = #{cpt3ExecDate}
			</if>
			<if test="neuropsyKind =='EXIT_II'">
				EXIT_II = #{exitiiExecDate}
			</if>
			<if test="neuropsyKind =='STROOP'">
				STROOP = #{stroopExecDate}
			</if>
			<if test="neuropsyKind =='TMT'">
				TMT = #{tmtExecDate}
			</if>
			<if test="neuropsyKind =='WSCT'">
				WSCT = #{wsctExecDate}
			</if>
			<if test="neuropsyKind =='ADOS1'">
				ADOS1 = #{ados1ExecDate}
			</if>
			<if test="neuropsyKind =='ADOS2'">
				ADOS2 = #{ados2ExecDate}
			</if>
			<!-- 
			<if test="neuropsyKind =='ADOS3'">
				ADOS3 = #{ados3ExecDate}
			</if>
			 -->
			<if test="neuropsyKind =='PEP'">
				PEP = #{pepExecDate}
			</if>
			<if test="neuropsyKind =='SMS'">
				SMS = #{smsExecDate}
			</if>
			<if test="neuropsyKind =='CARS'">
				CARS = #{carsExecDate}
			</if>
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
				AND RND_ID = #{rndId}
				AND DIS_CLASS_DTL = #{disClassDtl} 
				
	</update>
	
	<select id="selectNeuropsyPepList" parameterType="map" resultMap="neuropsyPepList">
		SELECT B.* FROM (
				SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						NP.RND_ID,
						NP.TARGET_ID,
						TM.TARGET_DIS_ID,
						DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
						CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
						PTC.CLASS_CD_DTL_NM PROTOCOL,
						TM.BIRTH_YM,
						PT.PERFORM_NM PERFORM_CNT_NM,
						PT.PERFORM_CNT,
						FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) AGE,
						CONCAT(SUBSTR(PEP_EXEC_DATE,1,4) ,'-',SUBSTR(PEP_EXEC_DATE,5,2),'-',SUBSTR(PEP_EXEC_DATE,7,2)) PEP_EXEC_DATE,
						CASE WHEN BEHAV_REL_N = '#' THEN '-' WHEN BEHAV_REL_N IS NULL OR BEHAV_REL_N = '' THEN 'x' ELSE BEHAV_REL_N END BEHAV_REL_N,
						CASE WHEN BEHAV_REL_M = '#' THEN '-' WHEN BEHAV_REL_M IS NULL OR BEHAV_REL_M = '' THEN 'x' ELSE BEHAV_REL_M END BEHAV_REL_M,
						CASE WHEN BEHAV_REL_S = '#' THEN '-' WHEN BEHAV_REL_S IS NULL OR BEHAV_REL_S = '' THEN 'x' ELSE BEHAV_REL_S END BEHAV_REL_S,
						CASE WHEN BEHAV_MATE_N = '#' THEN '-' WHEN BEHAV_MATE_N IS NULL OR BEHAV_MATE_N = '' THEN 'x' ELSE BEHAV_MATE_N END BEHAV_MATE_N,
						CASE WHEN BEHAV_MATE_M = '#' THEN '-' WHEN BEHAV_MATE_M IS NULL OR BEHAV_MATE_M = '' THEN 'x' ELSE BEHAV_MATE_M END BEHAV_MATE_M,
						CASE WHEN BEHAV_MATE_S = '#' THEN '-' WHEN BEHAV_MATE_S IS NULL OR BEHAV_MATE_S = '' THEN 'x' ELSE BEHAV_MATE_S END BEHAV_MATE_S,
						CASE WHEN BEHAV_SENSE_N = '#' THEN '-' WHEN BEHAV_SENSE_N IS NULL OR BEHAV_SENSE_N = '' THEN 'x' ELSE BEHAV_SENSE_N END BEHAV_SENSE_N,
						CASE WHEN BEHAV_SENSE_M = '#' THEN '-' WHEN BEHAV_SENSE_M IS NULL OR BEHAV_SENSE_M = '' THEN 'x' ELSE BEHAV_SENSE_M END BEHAV_SENSE_M,
						CASE WHEN BEHAV_SENSE_S = '#' THEN '-' WHEN BEHAV_SENSE_S IS NULL OR BEHAV_SENSE_S = '' THEN 'x' ELSE BEHAV_SENSE_S END BEHAV_SENSE_S,
						CASE WHEN BEHAV_LAN_N = '#' THEN '-' WHEN BEHAV_LAN_N IS NULL OR BEHAV_LAN_N = '' THEN 'x' ELSE BEHAV_LAN_N END BEHAV_LAN_N,
						CASE WHEN BEHAV_LAN_M = '#' THEN '-' WHEN BEHAV_LAN_M IS NULL OR BEHAV_LAN_M = '' THEN 'x' ELSE BEHAV_LAN_M END BEHAV_LAN_M,
						CASE WHEN BEHAV_LAN_S = '#' THEN '-' WHEN BEHAV_LAN_S IS NULL OR BEHAV_LAN_S = '' THEN 'x' ELSE BEHAV_LAN_S END BEHAV_LAN_S,
						CASE WHEN DEV_COPY_P = '#' THEN '-' WHEN DEV_COPY_P IS NULL OR DEV_COPY_P = '' THEN 'x' ELSE DEV_COPY_P END DEV_COPY_P,
						CASE WHEN DEV_COPY_B = '#' THEN '-' WHEN DEV_COPY_B IS NULL OR DEV_COPY_B = '' THEN 'x' ELSE DEV_COPY_B END DEV_COPY_B,
						CASE WHEN DEV_COPY_F = '#' THEN '-' WHEN DEV_COPY_F IS NULL OR DEV_COPY_F = '' THEN 'x' ELSE DEV_COPY_F END DEV_COPY_F,
						CASE WHEN DEV_PERCEPT_P = '#' THEN '-' WHEN DEV_PERCEPT_P IS NULL OR DEV_PERCEPT_P = '' THEN 'x' ELSE DEV_PERCEPT_P END DEV_PERCEPT_P,
						CASE WHEN DEV_PERCEPT_B = '#' THEN '-' WHEN DEV_PERCEPT_B IS NULL OR DEV_PERCEPT_B = '' THEN 'x' ELSE DEV_PERCEPT_B END DEV_PERCEPT_B,
						CASE WHEN DEV_PERCEPT_F = '#' THEN '-' WHEN DEV_PERCEPT_F IS NULL OR DEV_PERCEPT_F = '' THEN 'x' ELSE DEV_PERCEPT_F END DEV_PERCEPT_F,
						CASE WHEN DEV_MUSCLES_P = '#' THEN '-' WHEN DEV_MUSCLES_P IS NULL OR DEV_MUSCLES_P = '' THEN 'x' ELSE DEV_MUSCLES_P END DEV_MUSCLES_P,
						CASE WHEN DEV_MUSCLES_B = '#' THEN '-' WHEN DEV_MUSCLES_B IS NULL OR DEV_MUSCLES_B = '' THEN 'x' ELSE DEV_MUSCLES_B END DEV_MUSCLES_B,
						CASE WHEN DEV_MUSCLES_F = '#' THEN '-' WHEN DEV_MUSCLES_F IS NULL OR DEV_MUSCLES_F = '' THEN 'x' ELSE DEV_MUSCLES_F END DEV_MUSCLES_F,
						CASE WHEN DEV_MUSCLEB_P = '#' THEN '-' WHEN DEV_MUSCLEB_P IS NULL OR DEV_MUSCLEB_P = '' THEN 'x' ELSE DEV_MUSCLEB_P END DEV_MUSCLEB_P,
						CASE WHEN DEV_MUSCLEB_B = '#' THEN '-' WHEN DEV_MUSCLEB_B IS NULL OR DEV_MUSCLEB_B = '' THEN 'x' ELSE DEV_MUSCLEB_B END DEV_MUSCLEB_B,
						CASE WHEN DEV_MUSCLEB_F = '#' THEN '-' WHEN DEV_MUSCLEB_F IS NULL OR DEV_MUSCLEB_F = '' THEN 'x' ELSE DEV_MUSCLEB_F END DEV_MUSCLEB_F,
						CASE WHEN DEV_EYEHAND_P = '#' THEN '-' WHEN DEV_EYEHAND_P IS NULL OR DEV_EYEHAND_P = '' THEN 'x' ELSE DEV_EYEHAND_P END DEV_EYEHAND_P,
						CASE WHEN DEV_EYEHAND_B = '#' THEN '-' WHEN DEV_EYEHAND_B IS NULL OR DEV_EYEHAND_B = '' THEN 'x' ELSE DEV_EYEHAND_B END DEV_EYEHAND_B,
						CASE WHEN DEV_EYEHAND_F = '#' THEN '-' WHEN DEV_EYEHAND_F IS NULL OR DEV_EYEHAND_F = '' THEN 'x' ELSE DEV_EYEHAND_F END DEV_EYEHAND_F,
						CASE WHEN DEV_ACT_P = '#' THEN '-' WHEN DEV_ACT_P IS NULL OR DEV_ACT_P = '' THEN 'x' ELSE DEV_ACT_P END DEV_ACT_P,
						CASE WHEN DEV_ACT_B = '#' THEN '-' WHEN DEV_ACT_B IS NULL OR DEV_ACT_B = '' THEN 'x' ELSE DEV_ACT_B END DEV_ACT_B,
						CASE WHEN DEV_ACT_F = '#' THEN '-' WHEN DEV_ACT_F IS NULL OR DEV_ACT_F = '' THEN 'x' ELSE DEV_ACT_F END DEV_ACT_F,
						CASE WHEN DEV_LAN_P = '#' THEN '-' WHEN DEV_LAN_P IS NULL OR DEV_LAN_P = '' THEN 'x' ELSE DEV_LAN_P END DEV_LAN_P,
						CASE WHEN DEV_LAN_B = '#' THEN '-' WHEN DEV_LAN_B IS NULL OR DEV_LAN_B = '' THEN 'x' ELSE DEV_LAN_B END DEV_LAN_B,
						CASE WHEN DEV_LAN_F = '#' THEN '-' WHEN DEV_LAN_F IS NULL OR DEV_LAN_F = '' THEN 'x' ELSE DEV_LAN_F END DEV_LAN_F,
						CASE WHEN DEV_SCORE = '#' THEN '-' WHEN DEV_SCORE IS NULL OR DEV_SCORE = '' THEN 'x' ELSE DEV_SCORE END DEV_SCORE,
						CASE WHEN PEP_CA = '#' THEN '-' WHEN PEP_CA IS NULL OR PEP_CA = '' THEN 'x' ELSE PEP_CA END PEP_CA,
						CASE WHEN PEP_DA = '#' THEN '-' WHEN PEP_DA IS NULL OR PEP_DA = '' THEN 'x' ELSE PEP_DA END PEP_DA,
						CASE WHEN PEP_DQ = '#' THEN '-' WHEN PEP_DQ IS NULL OR PEP_DQ = '' THEN 'x' ELSE PEP_DQ END PEP_DQ,
						NP.REMARKS
					FROM T_NEUROPSY_PEP NP 
					LEFT JOIN T_TARGET_MST TM
					ON NP.TARGET_ID = TM.TARGET_ID
					AND NP.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON NP.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
					ON TM.RND_ID = PM.RND_ID
					AND TM.TARGET_ID = PM.TARGET_ID
					AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
					AND NP.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
			        	AND TM.RND_ID = ${rndId}
			        	AND PM.STATUS != '0004'
			        	AND NOT PM.PERFORM_CNT = 2
	            		AND NOT PM.PERFORM_CNT = 3
	            		<if test="disClassDtl !=null and disClassDtl != '' ">
	            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
	            		</if>
			        	<if test="schKeyWord !='schTargetId' ">
					        <if test="targetId !=null and targetId != '' ">
								AND NP.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND NP.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (NP.TARGET_ID, NP.PERFORM_CNT, NP.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						</if>
					ORDER BY NP.TARGET_ID, NP.PERFORM_CNT
				) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyPepListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NP.TARGET_ID
			FROM T_NEUROPSY_PEP NP
			LEFT JOIN T_TARGET_MST TM
			ON NP.TARGET_ID = TM.TARGET_ID
			AND NP.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NP.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NP.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		        AND PM.STATUS != '0004'
		        AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NP.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NP.PERFORM_CNT = ${performCnt}
				</if>
				
		) T
	</select>
	
	<select id="selectNeuropsyAdos1List" parameterType="map" resultMap="neuropsyAdos1List">
		SELECT B.* FROM (
				SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						NA1.RND_ID,
						NA1.TARGET_ID,
						TM.TARGET_DIS_ID,
						DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
						CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
						PTC.CLASS_CD_DTL_NM PROTOCOL,
						TM.BIRTH_YM,
						PT.PERFORM_NM PERFORM_CNT_NM,
						PT.PERFORM_CNT,
						FN_CAL_AGE(TM.BIRTH_YM,ADOS1_EXEC_DATE) AGE,
						CONCAT(SUBSTR(ADOS1_EXEC_DATE,1,4) ,'-',SUBSTR(ADOS1_EXEC_DATE,5,2),'-',SUBSTR(ADOS1_EXEC_DATE,7,2)) ADOS1_EXEC_DATE,
						
						CASE WHEN ADOS1_MODULE = '#' THEN '-' WHEN ADOS1_MODULE IS NULL OR ADOS1_MODULE = '' THEN 'x' ELSE ADOS1_MODULE END ADOS1_MODULE,
						
						CASE WHEN ADOS1_COMMU = '#' THEN '-' WHEN ADOS1_COMMU IS NULL OR ADOS1_COMMU = '' THEN 'x' ELSE ADOS1_COMMU END ADOS1_COMMU,
						CASE WHEN SOCIAL_INTERACTION = '#' THEN '-' WHEN SOCIAL_INTERACTION IS NULL OR SOCIAL_INTERACTION = '' THEN 'x' ELSE SOCIAL_INTERACTION END SOCIAL_INTERACTION,
						CASE WHEN LAN_SOCIAL_INTER = '#' THEN '-' WHEN LAN_SOCIAL_INTER IS NULL OR LAN_SOCIAL_INTER = '' THEN 'x' ELSE LAN_SOCIAL_INTER END LAN_SOCIAL_INTER,
						
						CASE WHEN ADOS1_PLAY = '#' THEN '-' WHEN ADOS1_PLAY IS NULL OR ADOS1_PLAY = '' THEN 'x' ELSE ADOS1_PLAY END ADOS1_PLAY,
						
						CASE WHEN A1_STEREO_INTEREST = '#' THEN '-' WHEN A1_STEREO_INTEREST IS NULL OR A1_STEREO_INTEREST = '' THEN 'x' ELSE A1_STEREO_INTEREST END A1_STEREO_INTEREST,
						CASE WHEN ADOS1_TOTAL = '#' THEN '-' WHEN ADOS1_TOTAL IS NULL OR ADOS1_TOTAL = '' THEN 'x' ELSE ADOS1_TOTAL END ADOS1_TOTAL,
						NA1.REMARKS
					FROM T_NEUROPSY_ADOS1 NA1 
					LEFT JOIN T_TARGET_MST TM
					ON NA1.TARGET_ID = TM.TARGET_ID
					AND NA1.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON NA1.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
					ON TM.RND_ID = PM.RND_ID
					AND TM.TARGET_ID = PM.TARGET_ID
					AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
					AND NA1.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
			        	AND TM.RND_ID = ${rndId}
			        	AND PM.STATUS != '0004'
			        	AND NOT PM.PERFORM_CNT = 2
	            		AND NOT PM.PERFORM_CNT = 3
	            		<if test="disClassDtl !=null and disClassDtl != '' ">
	            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
	            		</if>
			        	<if test="schKeyWord !='schTargetId' ">
					        <if test="targetId !=null and targetId != '' ">
								AND NA1.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND NA1.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (NA1.TARGET_ID, NA1.PERFORM_CNT, NA1.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						</if>
					ORDER BY NA1.TARGET_ID, NA1.PERFORM_CNT
				) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyAdos1ListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NA1.TARGET_ID
			FROM T_NEUROPSY_ADOS1 NA1
			LEFT JOIN T_TARGET_MST TM
			ON NA1.TARGET_ID = TM.TARGET_ID
			AND NA1.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NA1.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NA1.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		        AND PM.STATUS != '0004'
		        AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NA1.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NA1.PERFORM_CNT = ${performCnt}
				</if>
				
		) T
	</select>
	
	<select id="selectNeuropsyAdos2List" parameterType="map" resultMap="neuropsyAdos2List">
		SELECT B.* FROM (
				SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						NA2.RND_ID,
						NA2.TARGET_ID,
						TM.TARGET_DIS_ID,
						DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
						CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
						PTC.CLASS_CD_DTL_NM PROTOCOL,
						TM.BIRTH_YM,
						PT.PERFORM_NM PERFORM_CNT_NM,
						PT.PERFORM_CNT,
						FN_CAL_AGE(TM.BIRTH_YM,ADOS2_EXEC_DATE) AGE,
						
						CONCAT(SUBSTR(ADOS2_EXEC_DATE,1,4) ,'-',SUBSTR(ADOS2_EXEC_DATE,5,2),'-',SUBSTR(ADOS2_EXEC_DATE,7,2)) ADOS2_EXEC_DATE,
						CASE WHEN ADOS2_MODULE = '#' THEN '-' WHEN ADOS2_MODULE IS NULL OR ADOS2_MODULE = '' THEN 'x' ELSE ADOS2_MODULE END ADOS2_MODULE,
						CASE WHEN ADOS2_LINE = '#' THEN '-' WHEN ADOS2_LINE IS NULL OR ADOS2_LINE = '' THEN 'x' ELSE ADOS2_LINE END ADOS2_LINE,
						
						CASE WHEN ADOS2_COMMU = '#' THEN '-' WHEN ADOS2_COMMU IS NULL OR ADOS2_COMMU = '' THEN 'x' ELSE ADOS2_COMMU END ADOS2_COMMU,
						CASE WHEN GIVTAKE_SOCIAL_INTER = '#' THEN '-' WHEN GIVTAKE_SOCIAL_INTER IS NULL OR GIVTAKE_SOCIAL_INTER = '' THEN 'x' ELSE GIVTAKE_SOCIAL_INTER END GIVTAKE_SOCIAL_INTER,
						
						
						CASE WHEN SOCIAL_AFF_TOTAL = '#' THEN '-' WHEN SOCIAL_AFF_TOTAL IS NULL OR SOCIAL_AFF_TOTAL = '' THEN 'x' ELSE SOCIAL_AFF_TOTAL END SOCIAL_AFF_TOTAL,
						CASE WHEN REST_REPET_TOTAL = '#' THEN '-' WHEN REST_REPET_TOTAL IS NULL OR REST_REPET_TOTAL = '' THEN 'x' ELSE REST_REPET_TOTAL END REST_REPET_TOTAL,				
						CASE WHEN ADOS2_TOTAL = '#' THEN '-' WHEN ADOS2_TOTAL IS NULL OR ADOS2_TOTAL = '' THEN 'x' ELSE ADOS2_TOTAL END ADOS2_TOTAL,
						
						CASE WHEN ADOS2_DIAGNOSIS = '#' THEN '-' WHEN ADOS2_DIAGNOSIS IS NULL OR ADOS2_DIAGNOSIS = '' THEN 'x' ELSE ADOS2_DIAGNOSIS END ADOS2_DIAGNOSIS,
						CASE WHEN ADOS2_SYMPTOM_LEV = '#' THEN '-' WHEN ADOS2_SYMPTOM_LEV IS NULL OR ADOS2_SYMPTOM_LEV= '' THEN 'x' ELSE ADOS2_SYMPTOM_LEV END ADOS2_SYMPTOM_LEV,				
						CASE WHEN COMPARE_SCORE = '#' THEN '-' WHEN COMPARE_SCORE IS NULL OR ADOS2_TOTAL = '' THEN 'x' ELSE COMPARE_SCORE END COMPARE_SCORE,
						
						
						
						NA2.REMARKS
					FROM T_NEUROPSY_ADOS2 NA2 
					LEFT JOIN T_TARGET_MST TM
					ON NA2.TARGET_ID = TM.TARGET_ID
					AND NA2.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON NA2.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
					ON TM.RND_ID = PM.RND_ID
					AND TM.TARGET_ID = PM.TARGET_ID
					AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
					AND NA2.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
			        	AND TM.RND_ID = ${rndId}
			        	AND PM.STATUS != '0004'
			        	AND NOT PM.PERFORM_CNT = 2
	            		AND NOT PM.PERFORM_CNT = 3
	            		<if test="disClassDtl !=null and disClassDtl != '' ">
	            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
	            		</if>
			        	<if test="schKeyWord !='schTargetId' ">
					        <if test="targetId !=null and targetId != '' ">
								AND NA2.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND NA2.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (NA2.TARGET_ID, NA2.PERFORM_CNT, NA2.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						</if>
					ORDER BY NA2.TARGET_ID, NA2.PERFORM_CNT
				) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyAdos2ListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NA2.TARGET_ID
			FROM T_NEUROPSY_ADOS2 NA2
			LEFT JOIN T_TARGET_MST TM
			ON NA2.TARGET_ID = TM.TARGET_ID
			AND NA2.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NA2.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NA2.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		        AND PM.STATUS != '0004'
		        AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NA2.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NA2.PERFORM_CNT = ${performCnt}
				</if>
				
		) T
	</select>
	<!--  
	<select id="selectNeuropsyAdos3List" parameterType="map" resultMap="neuropsyAdos3List">
		SELECT B.* FROM (
				SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						NA3.RND_ID,
						NA3.TARGET_ID,
						TM.TARGET_DIS_ID,
						DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
						CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
						PTC.CLASS_CD_DTL_NM PROTOCOL,
						TM.BIRTH_YM,
						PT.PERFORM_NM PERFORM_CNT_NM,
						PT.PERFORM_CNT,
						FN_CAL_AGE(TM.BIRTH_YM,ADOS3_EXEC_DATE) AGE,
						CONCAT(SUBSTR(ADOS3_EXEC_DATE,1,4) ,'-',SUBSTR(ADOS3_EXEC_DATE,5,2),'-',SUBSTR(ADOS3_EXEC_DATE,7,2)) ADOS3_EXEC_DATE,
						CASE WHEN COMMUNICATION = '#' THEN '-' WHEN COMMUNICATION IS NULL OR COMMUNICATION = '' THEN 'x' ELSE COMMUNICATION END COMMUNICATION,
						CASE WHEN REC_SOCIAL_INTER = '#' THEN '-' WHEN REC_SOCIAL_INTER IS NULL OR REC_SOCIAL_INTER = '' THEN 'x' ELSE REC_SOCIAL_INTER END REC_SOCIAL_INTER,
						CASE WHEN COMMU_SOCIAL_INTER = '#' THEN '-' WHEN COMMU_SOCIAL_INTER IS NULL OR COMMU_SOCIAL_INTER = '' THEN 'x' ELSE COMMU_SOCIAL_INTER END COMMU_SOCIAL_INTER,
						CASE WHEN A3_STEREO_INTEREST = '#' THEN '-' WHEN A3_STEREO_INTEREST IS NULL OR A3_STEREO_INTEREST = '' THEN 'x' ELSE A3_STEREO_INTEREST END A3_STEREO_INTEREST,
						CASE WHEN ADOS3_TOTAL = '#' THEN '-' WHEN ADOS3_TOTAL IS NULL OR ADOS3_TOTAL = '' THEN 'x' ELSE ADOS3_TOTAL END ADOS3_TOTAL,
						NA3.REMARKS
					FROM T_NEUROPSY_ADOS3 NA3 
					LEFT JOIN T_TARGET_MST TM
					ON NA3.TARGET_ID = TM.TARGET_ID
					AND NA3.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON NA3.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
					ON TM.RND_ID = PM.RND_ID
					AND TM.TARGET_ID = PM.TARGET_ID
					AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
					AND NA3.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
			        	AND TM.RND_ID = ${rndId}
			        	AND PM.STATUS != '0004'
			        	AND NOT PM.PERFORM_CNT = 2
	            		AND NOT PM.PERFORM_CNT = 3
	            		<if test="disClassDtl !=null and disClassDtl != '' ">
	            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
	            		</if>
			        	<if test="schKeyWord !='schTargetId' ">
					        <if test="targetId !=null and targetId != '' ">
								AND NA3.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND NA3.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (NA3.TARGET_ID, NA3.PERFORM_CNT, NA3.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						</if>
					ORDER BY NA3.TARGET_ID, NA3.PERFORM_CNT
				) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyAdos3ListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NA3.TARGET_ID
			FROM T_NEUROPSY_ADOS3 NA3
			LEFT JOIN T_TARGET_MST TM
			ON NA3.TARGET_ID = TM.TARGET_ID
			AND NA3.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NA3.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NA3.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		        AND PM.STATUS != '0004'
		        AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NA3.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NA3.PERFORM_CNT = ${performCnt}
				</if>
				
		) T
	</select>
	-->
	
	<select id="selectNeuropsySmsList" parameterType="map" resultMap="neuropsySmsList">
		SELECT B.* FROM (
				SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						NS.RND_ID,
						NS.TARGET_ID,
						TM.TARGET_DIS_ID,
						DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
						CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
						PTC.CLASS_CD_DTL_NM PROTOCOL,
						TM.BIRTH_YM,
						PT.PERFORM_NM PERFORM_CNT_NM,
						PT.PERFORM_CNT,
						FN_CAL_AGE(TM.BIRTH_YM,SMS_EXEC_DATE) AGE,
						CONCAT(SUBSTR(SMS_EXEC_DATE,1,4) ,'-',SUBSTR(SMS_EXEC_DATE,5,2),'-',SUBSTR(SMS_EXEC_DATE,7,2)) SMS_EXEC_DATE,
						
						CASE WHEN SUB_MOVECAP = '#' THEN '-' WHEN SUB_MOVECAP IS NULL OR SUB_MOVECAP = '' THEN 'x' ELSE SUB_MOVECAP END SUB_MOVECAP,
						CASE WHEN SUB_COMMUCAP = '#' THEN '-' WHEN SUB_COMMUCAP IS NULL OR SUB_COMMUCAP = '' THEN 'x' ELSE SUB_COMMUCAP END SUB_COMMUCAP,
						CASE WHEN SUB_SOCIALCAP = '#' THEN '-' WHEN SUB_SOCIALCAP IS NULL OR SUB_SOCIALCAP = '' THEN 'x' ELSE SUB_SOCIALCAP END SUB_SOCIALCAP,
						CASE WHEN SUB_WORKCAP = '#' THEN '-' WHEN SUB_WORKCAP IS NULL OR SUB_WORKCAP = '' THEN 'x' ELSE SUB_WORKCAP END SUB_WORKCAP,
						CASE WHEN SUB_SELFMANAGECAP = '#' THEN '-' WHEN SUB_SELFMANAGECAP IS NULL OR SUB_SELFMANAGECAP = '' THEN 'x' ELSE SUB_SELFMANAGECAP END SUB_SELFMANAGECAP,
						
						CASE WHEN SUB_BASICAP_GENERAL = '#' THEN '-' WHEN SUB_BASICAP_GENERAL IS NULL OR SUB_BASICAP_GENERAL = '' THEN 'x' ELSE SUB_BASICAP_GENERAL END SUB_BASICAP_GENERAL,
						CASE WHEN SUB_BASICAP_DRESSING = '#' THEN '-' WHEN SUB_BASICAP_DRESSING IS NULL OR SUB_BASICAP_DRESSING = '' THEN 'x' ELSE SUB_BASICAP_DRESSING END SUB_BASICAP_DRESSING,
						CASE WHEN SUB_BASICAP_EATING = '#' THEN '-' WHEN SUB_BASICAP_EATING IS NULL OR SUB_BASICAP_EATING = '' THEN 'x' ELSE SUB_BASICAP_EATING END SUB_BASICAP_EATING,
						CASE WHEN SMS_SA = '#' THEN '-' WHEN SMS_SA IS NULL OR SMS_SA = '' THEN 'x' ELSE SMS_SA END SMS_SA,
						CASE WHEN SMS_SQ = '#' THEN '-' WHEN SMS_SQ IS NULL OR SMS_SQ = '' THEN 'x' ELSE SMS_SQ END SMS_SQ,
						
						NS.REMARKS
					FROM T_NEUROPSY_SMS NS 
					LEFT JOIN T_TARGET_MST TM
					ON NS.TARGET_ID = TM.TARGET_ID
					AND NS.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON NS.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
					ON TM.RND_ID = PM.RND_ID
					AND TM.TARGET_ID = PM.TARGET_ID
					AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
					AND NS.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
			        	AND TM.RND_ID = ${rndId}
			        	AND PM.STATUS != '0004'
			        	AND NOT PM.PERFORM_CNT = 2
	            		AND NOT PM.PERFORM_CNT = 3
	            		<if test="disClassDtl !=null and disClassDtl != '' ">
	            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
	            		</if>
			        	<if test="schKeyWord !='schTargetId' ">
					        <if test="targetId !=null and targetId != '' ">
								AND NS.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND NS.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (NS.TARGET_ID, NS.PERFORM_CNT, NS.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						</if>
					ORDER BY NS.TARGET_ID, NS.PERFORM_CNT
				) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsySmsListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NS.TARGET_ID
			FROM T_NEUROPSY_SMS NS
			LEFT JOIN T_TARGET_MST TM
			ON NS.TARGET_ID = TM.TARGET_ID
			AND NS.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NS.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NS.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		        AND PM.STATUS != '0004'
		        AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NS.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NS.PERFORM_CNT = ${performCnt}
				</if>
				
		) T
	</select>
	
	<select id="selectNeuropsyCarsList" parameterType="map" resultMap="neuropsyCarsList">
		SELECT B.* FROM (
				SELECT @ROWNUM := @ROWNUM+1 ROWNUM, A.* FROM (
					SELECT
						NC.RND_ID,
						NC.TARGET_ID,
						TM.TARGET_DIS_ID,
						DISE1.CLASS_CD_DTL_NM DIS_CLASS_DTL,
						CASE TM.SEX WHEN 'F' THEN '여' ELSE '남' END SEX,
						PTC.CLASS_CD_DTL_NM PROTOCOL,
						TM.BIRTH_YM,
						PT.PERFORM_NM PERFORM_CNT_NM,
						PT.PERFORM_CNT,
						FN_CAL_AGE(TM.BIRTH_YM,CARS_EXEC_DATE) AGE,
						CONCAT(SUBSTR(CARS_EXEC_DATE,1,4) ,'-',SUBSTR(CARS_EXEC_DATE,5,2),'-',SUBSTR(CARS_EXEC_DATE,7,2)) CARS_EXEC_DATE,
						
						CASE WHEN SUB_PS_RELATION     = '#' THEN '-' WHEN SUB_PS_RELATION     IS NULL OR SUB_PS_RELATION     = '' THEN 'x' ELSE SUB_PS_RELATION     END SUB_PS_RELATION,			
						CASE WHEN SUB_IMITATION     = '#' THEN '-' WHEN SUB_IMITATION     IS NULL OR SUB_IMITATION     = '' THEN 'x' ELSE SUB_IMITATION     END SUB_IMITATION,
						CASE WHEN SUB_EMO_RACT      = '#' THEN '-' WHEN SUB_EMO_RACT      IS NULL OR SUB_EMO_RACT      = '' THEN 'x' ELSE SUB_EMO_RACT      END SUB_EMO_RACT,
						CASE WHEN SUB_BODYUSE       = '#' THEN '-' WHEN SUB_BODYUSE       IS NULL OR SUB_BODYUSE       = '' THEN 'x' ELSE SUB_BODYUSE       END SUB_BODYUSE,
						CASE WHEN SUB_OBJUSE        = '#' THEN '-' WHEN SUB_OBJUSE        IS NULL OR SUB_OBJUSE        = '' THEN 'x' ELSE SUB_OBJUSE        END SUB_OBJUSE,
						CASE WHEN SUB_CHG_ADAPT     = '#' THEN '-' WHEN SUB_CHG_ADAPT     IS NULL OR SUB_CHG_ADAPT     = '' THEN 'x' ELSE SUB_CHG_ADAPT     END SUB_CHG_ADAPT,
						CASE WHEN SUB_VISUAL_RACT   = '#' THEN '-' WHEN SUB_VISUAL_RACT   IS NULL OR SUB_VISUAL_RACT   = '' THEN 'x' ELSE SUB_VISUAL_RACT   END SUB_VISUAL_RACT,
						CASE WHEN SUB_AUDITORY_RACT = '#' THEN '-' WHEN SUB_AUDITORY_RACT IS NULL OR SUB_AUDITORY_RACT = '' THEN 'x' ELSE SUB_AUDITORY_RACT END SUB_AUDITORY_RACT,
						CASE WHEN SUB_ETC_RACT_USE  = '#' THEN '-' WHEN SUB_ETC_RACT_USE  IS NULL OR SUB_ETC_RACT_USE  = '' THEN 'x' ELSE SUB_ETC_RACT_USE  END SUB_ETC_RACT_USE,
						CASE WHEN SUB_FEAR_NERVOUS  = '#' THEN '-' WHEN SUB_FEAR_NERVOUS  IS NULL OR SUB_FEAR_NERVOUS  = '' THEN 'x' ELSE SUB_FEAR_NERVOUS  END SUB_FEAR_NERVOUS,
						CASE WHEN SUB_VERBCOMMU     = '#' THEN '-' WHEN SUB_VERBCOMMU     IS NULL OR SUB_VERBCOMMU     = '' THEN 'x' ELSE SUB_VERBCOMMU     END SUB_VERBCOMMU,
						CASE WHEN SUB_NONVERB_COMMU = '#' THEN '-' WHEN SUB_NONVERB_COMMU IS NULL OR SUB_NONVERB_COMMU = '' THEN 'x' ELSE SUB_NONVERB_COMMU END SUB_NONVERB_COMMU,
						CASE WHEN SUB_ACTLEV        = '#' THEN '-' WHEN SUB_ACTLEV        IS NULL OR SUB_ACTLEV        = '' THEN 'x' ELSE SUB_ACTLEV        END SUB_ACTLEV,
						CASE WHEN SUB_INTELLEV_CSTC = '#' THEN '-' WHEN SUB_INTELLEV_CSTC IS NULL OR SUB_INTELLEV_CSTC = '' THEN 'x' ELSE SUB_INTELLEV_CSTC END SUB_INTELLEV_CSTC,
						CASE WHEN SUB_GENERAL_EFT   = '#' THEN '-' WHEN SUB_GENERAL_EFT   IS NULL OR SUB_GENERAL_EFT   = '' THEN 'x' ELSE SUB_GENERAL_EFT   END SUB_GENERAL_EFT,
					
					
						CASE WHEN CARS_TOTAL = '#' THEN '-' WHEN CARS_TOTAL IS NULL OR CARS_TOTAL = '' THEN 'x' ELSE CARS_TOTAL END CARS_TOTAL,
						NC.REMARKS
					FROM T_NEUROPSY_CARS NC
					LEFT JOIN T_TARGET_MST TM
					ON NC.TARGET_ID = TM.TARGET_ID
					AND NC.RND_ID = TM.RND_ID
					JOIN T_PERFORM_TERM PT
					ON NC.PERFORM_CNT = PT.PERFORM_CNT
					LEFT JOIN T_TARGET_DIS_MST TDM
					ON TM.TARGET_ID = TDM.TARGET_ORG_ID
					AND TM.TARGET_DIS_ID = TDM.TARGET_ID
					LEFT JOIN T_CODE_DTL DISE1
			        ON DISE1.CLASS_CD = 'DISE1'
			        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
			        LEFT JOIN T_CODE_DTL PTC
			        ON PTC.CLASS_CD = 'PT001'
			        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
			        LEFT JOIN T_PERFORM_MST PM
					ON TM.RND_ID = PM.RND_ID
					AND TM.TARGET_ID = PM.TARGET_ID
					AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
					AND NC.PERFORM_CNT = PM.PERFORM_CNT
			        JOIN (SELECT @ROWNUM:=0) AS R
			        WHERE 1=1
			        	AND TM.RND_ID = ${rndId}
			        	AND PM.STATUS != '0004'
			        	AND NOT PM.PERFORM_CNT = 2
	            		AND NOT PM.PERFORM_CNT = 3
	            		<if test="disClassDtl !=null and disClassDtl != '' ">
	            		AND DISE1.CLASS_CD_DTL = #{disClassDtl}
	            		</if>
			        	<if test="schKeyWord !='schTargetId' ">
					        <if test="targetId !=null and targetId != '' ">
								AND NC.TARGET_ID = #{targetId}
							</if>
							<if test="startAge !=null and startAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
							</if>
							<if test="endAge !=null and endAge != '' ">
								AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
							</if>
							<if test="sex !=null and sex != '' ">
								AND SEX = #{sex}
							</if>
							<if test="protocol !=null and protocol != '' ">
								AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
							</if>
							<if test="performCnt !=null and performCnt != '' ">
								AND NC.PERFORM_CNT = ${performCnt}
							</if>
							<if test='schKeyField =="selectDown"'>
								AND (NC.TARGET_ID, NC.PERFORM_CNT, NC.RND_ID, TM.DIS_CLASS_DTL)
									IN (${schKeyWord})
							</if>
						</if>
					ORDER BY NC.TARGET_ID, NC.PERFORM_CNT
				) A
			)B
			WHERE 1=1
				<if test="schKeyWord == 'schTargetId' ">
					AND B.TARGET_ID = #{targetId}
					AND B.PERFORM_CNT = ${performCnt}
				</if> 
			LIMIT #{start}, #{limit}
	</select>
	
	<select id="selectNeuropsyCarsListTotal" parameterType="map" resultType="int">
		SELECT COUNT(TARGET_ID)
		FROM (
			SELECT
				NC.TARGET_ID
			FROM T_NEUROPSY_CARS NC
			LEFT JOIN T_TARGET_MST TM
			ON NC.TARGET_ID = TM.TARGET_ID
			AND NC.RND_ID = TM.RND_ID
			JOIN T_PERFORM_TERM PT
			ON NC.PERFORM_CNT = PT.PERFORM_CNT
			LEFT JOIN T_TARGET_DIS_MST TDM
			ON TM.TARGET_ID = TDM.TARGET_ORG_ID
			AND TM.TARGET_DIS_ID = TDM.TARGET_ID
			LEFT JOIN T_CODE_DTL DISE1
	        ON DISE1.CLASS_CD = 'DISE1'
	        AND DISE1.CLASS_CD_DTL = TM.DIS_CLASS_DTL
	        LEFT JOIN T_CODE_DTL PTC
	        ON PTC.CLASS_CD = 'PT001'
	        AND PTC.CLASS_CD_DTL = TM.PROTOCOL
	        LEFT JOIN T_PERFORM_MST PM
			ON TM.RND_ID = PM.RND_ID
			AND TM.TARGET_ID = PM.TARGET_ID
			AND TM.DIS_CLASS_DTL = PM.DIS_CLASS_DTL
			AND NC.PERFORM_CNT = PM.PERFORM_CNT
	        WHERE 1=1
	        	AND TM.RND_ID = ${rndId}
		        AND PM.STATUS != '0004'
		        AND NOT PM.PERFORM_CNT = 2
            	AND NOT PM.PERFORM_CNT = 3
            	<if test="disClassDtl !=null and disClassDtl != '' ">
            	AND DISE1.CLASS_CD_DTL = #{disClassDtl}
            	</if>
		        <if test="targetId !=null and targetId != '' ">
					AND NC.TARGET_ID = #{targetId}
				</if>
				<if test="startAge !=null and startAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &gt;= #{startAge}
				</if>
				<if test="endAge !=null and endAge != '' ">
					AND  FN_CAL_AGE(TM.BIRTH_YM,PEP_EXEC_DATE) &lt;= #{endAge}
				</if>
				<if test="sex !=null and sex != '' ">
					AND TM.SEX = #{sex}
				</if>
				<if test="protocol !=null and protocol != '' ">
					AND  REPLACE(PTC.CLASS_CD_DTL_NM," ","")   IN (${protocol})
				</if>
				<if test="performCnt !=null and performCnt != '' ">
					AND NC.PERFORM_CNT = ${performCnt}
				</if>
				
		) T
	</select>
	
	<update id="insertNeuropsyAdos1" parameterType="map">
		INSERT INTO T_NEUROPSY_ADOS1(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,ADOS1_MODULE
			,ADOS1_EXEC_DATE
			,ADOS1_COMMU
			,SOCIAL_INTERACTION
			,LAN_SOCIAL_INTER
			,ADOS1_PLAY
			,A1_STEREO_INTEREST
			,ADOS1_TOTAL
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{ados1Module, jdbcType=VARCHAR}), 'x')
			, #{ados1ExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{ados1Commu, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{socialInteraction, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{lanSocialInter, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados1Play, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{a1StereoInterest, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados1Total, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			ADOS1_EXEC_DATE = #{ados1ExecDate, jdbcType=VARCHAR}
			,ADOS1_MODULE = IFNULL(LOWER(#{ados1Module, jdbcType=VARCHAR}), 'x')
			,ADOS1_COMMU = IFNULL(LOWER(#{ados1Commu , jdbcType=VARCHAR}), 'x')
			,SOCIAL_INTERACTION = IFNULL(LOWER(#{socialInteraction , jdbcType=VARCHAR}), 'x')
			,LAN_SOCIAL_INTER = IFNULL(LOWER(#{lanSocialInter , jdbcType=VARCHAR}), 'x')
			,ADOS1_PLAY = IFNULL(LOWER(#{ados1Play , jdbcType=VARCHAR}), 'x')
			,A1_STEREO_INTEREST = IFNULL(LOWER(#{a1StereoInterest , jdbcType=VARCHAR}), 'x')
			,ADOS1_TOTAL = IFNULL(LOWER(#{ados1Total , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<update id="insertNeuropsyAdos2" parameterType="map">
		INSERT INTO T_NEUROPSY_ADOS2(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,ADOS2_EXEC_DATE
			,ADOS2_MODULE
			,ADOS2_LINE
			,ADOS2_COMMU
			,GIVTAKE_SOCIAL_INTER
			,SOCIAL_AFF_TOTAL
			,REST_REPET_TOTAL
			,ADOS2_TOTAL
			,ADOS2_DIAGNOSIS
			,ADOS2_SYMPTOM_LEV
			,COMPARE_SCORE
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{ados2ExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{ados2Module, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados2Line, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados2Commu, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{givtakeSocialInter, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{socialAffTotal, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{restRepetTotal, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados2Total, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados2Diagnosis, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{compareScore, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados2Total, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			ADOS2_EXEC_DATE = #{ados2ExecDate, jdbcType=VARCHAR}
			,ADOS2_MODULE = #{ados2Module, jdbcType=VARCHAR}
			,ADOS2_LINE = #{ados2Line, jdbcType=VARCHAR}
			,ADOS2_COMMU = #{ados2Commu, jdbcType=VARCHAR}
			,GIVTAKE_SOCIAL_INTER = #{givtakeSocialInter, jdbcType=VARCHAR}
			,SOCIAL_AFF_TOTAL = IFNULL(LOWER(#{socialAffTotal , jdbcType=VARCHAR}), 'x')
			,REST_REPET_TOTAL = IFNULL(LOWER(#{restRepetTotal , jdbcType=VARCHAR}), 'x')
			,ADOS2_TOTAL = IFNULL(LOWER(#{ados2Total , jdbcType=VARCHAR}), 'x')
			,ADOS2_DIAGNOSIS = IFNULL(LOWER(#{ados2Diagnosis , jdbcType=VARCHAR}), 'x')
			,ADOS2_SYMPTOM_LEV = IFNULL(LOWER(#{ados2SymptomLev , jdbcType=VARCHAR}), 'x')
			,COMPARE_SCORE = IFNULL(LOWER(#{compareScore , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	<!-- 
	<update id="insertNeuropsyAdos3" parameterType="map">
		INSERT INTO T_NEUROPSY_ADOS3(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,ADOS3_EXEC_DATE
			,COMMUNICATION
			,REC_SOCIAL_INTER
			,COMMU_SOCIAL_INTER
			,A3_STEREO_INTEREST
			,ADOS3_TOTAL
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{ados3ExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{communication, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{recSocialInter, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{commuSocialInter, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{a3StereoInterest, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ados3Total, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			ADOS3_EXEC_DATE = #{ados3ExecDate, jdbcType=VARCHAR}
			,COMMUNICATION = IFNULL(LOWER(#{communication , jdbcType=VARCHAR}), 'x')
			,REC_SOCIAL_INTER = IFNULL(LOWER(#{recSocialInter , jdbcType=VARCHAR}), 'x')
			,COMMU_SOCIAL_INTER = IFNULL(LOWER(#{commuSocialInter , jdbcType=VARCHAR}), 'x')
			,A3_STEREO_INTEREST = IFNULL(LOWER(#{a3StereoInterest , jdbcType=VARCHAR}), 'x')
			,ADOS3_TOTAL = IFNULL(LOWER(#{ados3Total , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	-->
	<update id="insertNeuropsyPep" parameterType="map">
		INSERT INTO T_NEUROPSY_PEP(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,PEP_EXEC_DATE
			,BEHAV_REL_N 
			,BEHAV_REL_M 
			,BEHAV_REL_S 
			,BEHAV_MATE_N 
			,BEHAV_MATE_M 
			,BEHAV_MATE_S 
			,BEHAV_SENSE_N 
			,BEHAV_SENSE_M 
			,BEHAV_SENSE_S 
			,BEHAV_LAN_N 
			,BEHAV_LAN_M 
			,BEHAV_LAN_S 
			,DEV_COPY_P 
			,DEV_COPY_B 
			,DEV_COPY_F 
			,DEV_PERCEPT_P 
			,DEV_PERCEPT_B 
			,DEV_PERCEPT_F 
			,DEV_MUSCLES_P 
			,DEV_MUSCLES_B 
			,DEV_MUSCLES_F 
			,DEV_MUSCLEB_P 
			,DEV_MUSCLEB_B 
			,DEV_MUSCLEB_F 
			,DEV_EYEHAND_P 
			,DEV_EYEHAND_B 
			,DEV_EYEHAND_F 
			,DEV_ACT_P 
			,DEV_ACT_B 
			,DEV_ACT_F 
			,DEV_LAN_P 
			,DEV_LAN_B 
			,DEV_LAN_F 
			,DEV_SCORE
			,PEP_CA 
			,PEP_DA 
			,PEP_DQ
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{pepExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{behavRelN, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavRelM, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavRelS, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavMateN, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavMateM, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavMateS, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavSenseN, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavSenseM, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavSenseS, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavLanN, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavLanM, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{behavLanS, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devCopyP, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devCopyB, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devCopyF, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devPerceptP, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devPerceptB, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devPerceptF, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devMusclesP, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devMusclesB, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devMusclesF, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devMusclebP, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devMusclebB, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devMusclebF, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devEyehandP, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devEyehandB, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devEyehandF, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devActP, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devActB, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devActF, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devLanP, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devLanB, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devLanF, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{devScore, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{pepCa, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{pepDa, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{pepDq, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			PEP_EXEC_DATE = #{pepExecDate, jdbcType=VARCHAR}
			,BEHAV_REL_N  = IFNULL(LOWER(#{behavRelN , jdbcType=VARCHAR}), 'x')
			,BEHAV_REL_M  = IFNULL(LOWER(#{behavRelM , jdbcType=VARCHAR}), 'x')
			,BEHAV_REL_S  = IFNULL(LOWER(#{behavRelS , jdbcType=VARCHAR}), 'x')
			,BEHAV_MATE_N  = IFNULL(LOWER(#{behavMateN , jdbcType=VARCHAR}), 'x')
			,BEHAV_MATE_M  = IFNULL(LOWER(#{behavMateM , jdbcType=VARCHAR}), 'x')
			,BEHAV_MATE_S  = IFNULL(LOWER(#{behavMateS , jdbcType=VARCHAR}), 'x')
			,BEHAV_SENSE_N  = IFNULL(LOWER(#{behavSenseN , jdbcType=VARCHAR}), 'x')
			,BEHAV_SENSE_M  = IFNULL(LOWER(#{behavSenseM , jdbcType=VARCHAR}), 'x')
			,BEHAV_SENSE_S  = IFNULL(LOWER(#{behavSenseS , jdbcType=VARCHAR}), 'x')
			,BEHAV_LAN_N  = IFNULL(LOWER(#{behavLanN , jdbcType=VARCHAR}), 'x')
			,BEHAV_LAN_M  = IFNULL(LOWER(#{behavLanM , jdbcType=VARCHAR}), 'x')
			,BEHAV_LAN_S  = IFNULL(LOWER(#{behavLanS , jdbcType=VARCHAR}), 'x')
			,DEV_COPY_P  = IFNULL(LOWER(#{devCopyP , jdbcType=VARCHAR}), 'x')
			,DEV_COPY_B  = IFNULL(LOWER(#{devCopyB , jdbcType=VARCHAR}), 'x')
			,DEV_COPY_F  = IFNULL(LOWER(#{devCopyF , jdbcType=VARCHAR}), 'x')
			,DEV_PERCEPT_P  = IFNULL(LOWER(#{devPerceptP , jdbcType=VARCHAR}), 'x')
			,DEV_PERCEPT_B  = IFNULL(LOWER(#{devPerceptB , jdbcType=VARCHAR}), 'x')
			,DEV_PERCEPT_F  = IFNULL(LOWER(#{devPerceptF , jdbcType=VARCHAR}), 'x')
			,DEV_MUSCLES_P  = IFNULL(LOWER(#{devMusclesP , jdbcType=VARCHAR}), 'x')
			,DEV_MUSCLES_B  = IFNULL(LOWER(#{devMusclesB , jdbcType=VARCHAR}), 'x')
			,DEV_MUSCLES_F  = IFNULL(LOWER(#{devMusclesF , jdbcType=VARCHAR}), 'x')
			,DEV_MUSCLEB_P  = IFNULL(LOWER(#{devMusclebP , jdbcType=VARCHAR}), 'x')
			,DEV_MUSCLEB_B  = IFNULL(LOWER(#{devMusclebB , jdbcType=VARCHAR}), 'x')
			,DEV_MUSCLEB_F  = IFNULL(LOWER(#{devMusclebF , jdbcType=VARCHAR}), 'x')
			,DEV_EYEHAND_P  = IFNULL(LOWER(#{devEyehandP , jdbcType=VARCHAR}), 'x')
			,DEV_EYEHAND_B  = IFNULL(LOWER(#{devEyehandB , jdbcType=VARCHAR}), 'x')
			,DEV_EYEHAND_F  = IFNULL(LOWER(#{devEyehandF , jdbcType=VARCHAR}), 'x')
			,DEV_ACT_P  = IFNULL(LOWER(#{devActP , jdbcType=VARCHAR}), 'x')
			,DEV_ACT_B  = IFNULL(LOWER(#{devActB , jdbcType=VARCHAR}), 'x')
			,DEV_ACT_F  = IFNULL(LOWER(#{devActF , jdbcType=VARCHAR}), 'x')
			,DEV_LAN_P  = IFNULL(LOWER(#{devLanP , jdbcType=VARCHAR}), 'x')
			,DEV_LAN_B  = IFNULL(LOWER(#{devLanB , jdbcType=VARCHAR}), 'x')
			,DEV_LAN_F  = IFNULL(LOWER(#{devLanF , jdbcType=VARCHAR}), 'x')
			,DEV_SCORE  = IFNULL(LOWER(#{devScore , jdbcType=VARCHAR}), 'x')
			,PEP_CA  = IFNULL(LOWER(#{pepCa , jdbcType=VARCHAR}), 'x')
			,PEP_DA  = IFNULL(LOWER(#{pepDa , jdbcType=VARCHAR}), 'x')
			,PEP_DQ = IFNULL(LOWER(#{pepDq , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<update id="insertNeuropsySms" parameterType="map">
		INSERT INTO T_NEUROPSY_SMS(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,SMS_EXEC_DATE
			,SUB_MOVECAP
			,SUB_COMMUCAP
			,SUB_SOCIALCAP
			,SUB_WORKCAP
			,SUB_SELFMANAGECAP
			,SUB_BASICAP_GENERAL
			,SUB_BASICAP_DRESSING
			,SUB_BASICAP_EATING
			,SMS_SA
			,SMS_SQ
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{smsExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{subMovecap, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subCommucap, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subSocialcap, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subWorkcap, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subSelfmanagecap, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subBasicapGeneral, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subBasicapDressing, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subBasicapEating, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{smsSa, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{smsSq, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			SMS_EXEC_DATE = #{smsExecDate, jdbcType=VARCHAR}
			,SUB_MOVECAP = IFNULL(LOWER(#{subMovecap , jdbcType=VARCHAR}), 'x')
			,SUB_COMMUCAP = IFNULL(LOWER(#{subCommucap, jdbcType=VARCHAR}), 'x')
			,SUB_SOCIALCAP = IFNULL(LOWER(#{subSocialcap , jdbcType=VARCHAR}), 'x')
			,SUB_WORKCAP = IFNULL(LOWER(#{subWorkcap , jdbcType=VARCHAR}), 'x')
			,SUB_SELFMANAGECAP = IFNULL(LOWER(#{subSelfmanagecap , jdbcType=VARCHAR}), 'x')

			,SUB_BASICAP_GENERAL = IFNULL(LOWER(#{subBasicapGeneral , jdbcType=VARCHAR}), 'x')
			,SUB_BASICAP_DRESSING = IFNULL(LOWER(#{subBasicapDressing , jdbcType=VARCHAR}), 'x')
			,SUB_BASICAP_EATING = IFNULL(LOWER(#{subBasicapEating , jdbcType=VARCHAR}), 'x')
			,SMS_SA = IFNULL(LOWER(#{smsSa , jdbcType=VARCHAR}), 'x')
			,SMS_SQ = IFNULL(LOWER(#{smsSq , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<update id="insertNeuropsyCars" parameterType="map">
		INSERT INTO T_NEUROPSY_CARS(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,CARS_EXEC_DATE
			,SUB_PS_RELATION
			,SUB_IMITATION
			,SUB_EMO_RACT
			,SUB_BODYUSE
			,SUB_OBJUSE
			,SUB_CHG_ADAPT
			,SUB_VISUAL_RACT
			,SUB_AUDITORY_RACT
			,SUB_ETC_RACT_USE
			,SUB_FEAR_NERVOUS
			,SUB_VERBCOMMU
			,SUB_NONVERB_COMMU
			,SUB_ACTLEV
			,SUB_INTELLEV_CSTC
			,SUB_GENERAL_EFT
			,CARS_TOTAL
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, #{carsExecDate, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{subPsRelation, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subImitation, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subEmoRact, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subBodyuse, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subObjuse, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subChgAdapt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subVisualRact, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subAuditoryRact, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subEtcRactUse, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subFearNervous, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subVerbCommu, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subNonverbCommu, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subActlev, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subIntellevCstc, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{subGeneralEft, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{carsTotal, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			CARS_EXEC_DATE = #{carsExecDate, jdbcType=VARCHAR}
			,SUB_PS_RELATION = IFNULL(LOWER(#{subPsRelation , jdbcType=VARCHAR}), 'x')
			,SUB_IMITATION = IFNULL(LOWER(#{subImitation , jdbcType=VARCHAR}), 'x')
			,SUB_EMO_RACT = IFNULL(LOWER(#{subEmoRact , jdbcType=VARCHAR}), 'x')
			,SUB_BODYUSE = IFNULL(LOWER(#{subBodyuse , jdbcType=VARCHAR}), 'x')
			,SUB_OBJUSE = IFNULL(LOWER(#{subObjuse , jdbcType=VARCHAR}), 'x')
			,SUB_CHG_ADAPT = IFNULL(LOWER(#{subChgAdapt , jdbcType=VARCHAR}), 'x')
			,SUB_VISUAL_RACT = IFNULL(LOWER(#{subVisualRact , jdbcType=VARCHAR}), 'x')
			,SUB_AUDITORY_RACT = IFNULL(LOWER(#{subAuditoryRact , jdbcType=VARCHAR}), 'x')
			,SUB_ETC_RACT_USE = IFNULL(LOWER(#{subEtcRactUse , jdbcType=VARCHAR}), 'x')
			,SUB_FEAR_NERVOUS = IFNULL(LOWER(#{subFearNervous , jdbcType=VARCHAR}), 'x')
			,SUB_VERBCOMMU = IFNULL(LOWER(#{subVerbCommu , jdbcType=VARCHAR}), 'x')
			,SUB_NONVERB_COMMU = IFNULL(LOWER(#{subNonverbCommu , jdbcType=VARCHAR}), 'x')
			,SUB_ACTLEV = IFNULL(LOWER(#{subActlev, jdbcType=VARCHAR}), 'x')
			,SUB_INTELLEV_CSTC = IFNULL(LOWER(#{subIntellevCstc , jdbcType=VARCHAR}), 'x')
			,SUB_GENERAL_EFT = IFNULL(LOWER(#{subGeneralEft , jdbcType=VARCHAR}), 'x')
					
			,CARS_TOTAL = IFNULL(LOWER(#{carsTotal , jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<update id="insertS1IKLeiter" parameterType="map">
		INSERT INTO T_S1_IKLEITER(
			TARGET_ID
			,PERFORM_CNT
			,RND_ID
			,EXCT_ALL_INTELL
			,EXCT_SHORT_INTELL
			,EXCT_FLUID_INFER
			,EXCT_BASIC_VISUAL
			,ICID_ALL_INTELL
			,ICID_SHORT_INTELL
			,ICID_FLUID_INFER
			,ICID_BASIC_VISUAL
			,VIFS_FORE_BACK
			,VIFS_SHAPE_COMP
			,VIFS_MATCH
			,VIFS_ORDER_INFER
			,VIFS_PATT_FIND
			,VIFS_DRAW_INFER
			,VIFS_CATEGORIZ
			,VIEXC_FORE_BACK
			,VIEXC_SHAPE_COMP
			,VIEXC_MATCH
			,VIEXC_ORDER_INFER
			,VIEXC_PATT_FIND
			,VIEXC_DRAW_INFER
			,VIEXC_CATEGORIZ
			,CEXC_MEMORY_SELECT
			,CEXC_RECOG_MEMORY
			,CCOMP_MEMORY_SELECT
			,CCOMP_RECOG_MEMORY
			,SC_PAIR_ASSO
			,SC_IMMED_RECOG
			,SC_IMMED_REMEMBER
			,SC_SUSTAIN_ATT
			,SC_DELAY_RECOG
			,EXC_PAIR_ASSO
			,EXC_IMMED_RECOG
			,EXC_IMMED_REMEMBER
			,EXC_SUSTAIN_ATT
			,EXC_DELAY_RECOG
			,P_RS_COMPSC
			,P_EC_COMPSC
			,SC_ATTENTION
			,SC_ACTIV_LEVEL
			,SC_IMPULS
			,SC_ADAPTABILITY
			,SC_MOOD_CONFID
			,SC_FEEL_EMO
			,SC_SOCIABILITY
			,SC_CONTROL
			,EXC_ATTENTION
			,EXC_ACTIV_LEVEL
			,EXC_IMPULS
			,EXC_ADAPTABILITY
			,EXC_MOOD_CONFID
			,EXC_FEEL_EMO
			,EXC_SOCIABILITY
			,EXC_CONTROL
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
		)VALUES(
			#{targetId, jdbcType=VARCHAR}
			, (SELECT PERFORM_CNT FROM T_PERFORM_TERM WHERE PERFORM_NM = UPPER(#{performCntNm, jdbcType=VARCHAR}))
			, #{rndId, jdbcType=VARCHAR}
			, IFNULL(LOWER(#{exctAllIntell, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exctShortIntell, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exctFluidInfer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{exctBasicVisual, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{icidAllIntell, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{icidShortIntell, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{icidFluidInfer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{icidBasicVisual, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{vifsForeBack, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{vifsShapeComp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{vifsMatch, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{vifsOrderInfer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{vifsPattFind, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{vifsDrawInfer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{vifsCategoriz, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{viexcForeBack, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{viexcShapeComp, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{viexcMatch, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{viexcOrderInfer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{viexcPattFind, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{viexcDrawInfer, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{viexcCategoriz, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cexcMemorySelect, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{cexcRecogMemory, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ccompMemorySelect, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{ccompRecogMemory, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scPairAsso, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scImmedRecog, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scImmedRemember, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scSustainAtt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scDelayRecog, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excPairAsso, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excImmedRecog, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excImmedRemember, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excSustainAtt, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excDelayRecog, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{pRsCompsc, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{pEcCompsc, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scAttention, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scActivLevel, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scImpuls, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scAdaptability, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scMoodConfid, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scFeelEmo, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scSociability, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{scControl, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excAttention, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excActivLevel, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excImpuls, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excAdaptability, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excMoodConfid, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excFeelEmo, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excSociability, jdbcType=VARCHAR}), 'x')
			, IFNULL(LOWER(#{excControl, jdbcType=VARCHAR}), 'x')
			, now()
			, #{createBy , jdbcType=VARCHAR}
			, now()
			, #{createBy , jdbcType=VARCHAR}
		)
		ON DUPLICATE KEY UPDATE
			EXCT_ALL_INTELL = IFNULL(LOWER(#{exctAllIntell,jdbcType=VARCHAR}), 'x')
			,EXCT_SHORT_INTELL = IFNULL(LOWER(#{exctShortIntell,jdbcType=VARCHAR}), 'x')
			,EXCT_FLUID_INFER = IFNULL(LOWER(#{exctFluidInfer,jdbcType=VARCHAR}), 'x')
			,EXCT_BASIC_VISUAL = IFNULL(LOWER(#{exctBasicVisual,jdbcType=VARCHAR}), 'x')
			,ICID_ALL_INTELL = IFNULL(LOWER(#{icidAllIntell,jdbcType=VARCHAR}), 'x')
			,ICID_SHORT_INTELL = IFNULL(LOWER(#{icidShortIntell,jdbcType=VARCHAR}), 'x')
			,ICID_FLUID_INFER = IFNULL(LOWER(#{icidFluidInfer,jdbcType=VARCHAR}), 'x')
			,ICID_BASIC_VISUAL = IFNULL(LOWER(#{icidBasicVisual,jdbcType=VARCHAR}), 'x')
			,VIFS_FORE_BACK = IFNULL(LOWER(#{vifsForeBack,jdbcType=VARCHAR}), 'x')
			,VIFS_SHAPE_COMP = IFNULL(LOWER(#{vifsShapeComp,jdbcType=VARCHAR}), 'x')
			,VIFS_MATCH = IFNULL(LOWER(#{vifsMatch,jdbcType=VARCHAR}), 'x')
			,VIFS_ORDER_INFER = IFNULL(LOWER(#{vifsOrderInfer,jdbcType=VARCHAR}), 'x')
			,VIFS_PATT_FIND = IFNULL(LOWER(#{vifsPattFind,jdbcType=VARCHAR}), 'x')
			,VIFS_DRAW_INFER = IFNULL(LOWER(#{vifsDrawInfer,jdbcType=VARCHAR}), 'x')
			,VIFS_CATEGORIZ = IFNULL(LOWER(#{vifsCategoriz,jdbcType=VARCHAR}), 'x')
			,VIEXC_FORE_BACK = IFNULL(LOWER(#{viexcForeBack,jdbcType=VARCHAR}), 'x')
			,VIEXC_SHAPE_COMP = IFNULL(LOWER(#{viexcShapeComp,jdbcType=VARCHAR}), 'x')
			,VIEXC_MATCH = IFNULL(LOWER(#{viexcMatch,jdbcType=VARCHAR}), 'x')
			,VIEXC_ORDER_INFER = IFNULL(LOWER(#{viexcOrderInfer,jdbcType=VARCHAR}), 'x')
			,VIEXC_PATT_FIND = IFNULL(LOWER(#{viexcPattFind,jdbcType=VARCHAR}), 'x')
			,VIEXC_DRAW_INFER = IFNULL(LOWER(#{viexcDrawInfer,jdbcType=VARCHAR}), 'x')
			,VIEXC_CATEGORIZ = IFNULL(LOWER(#{viexcCategoriz,jdbcType=VARCHAR}), 'x')
			,CEXC_MEMORY_SELECT = IFNULL(LOWER(#{cexcMemorySelect,jdbcType=VARCHAR}), 'x')
			,CEXC_RECOG_MEMORY = IFNULL(LOWER(#{cexcRecogMemory,jdbcType=VARCHAR}), 'x')
			,CCOMP_MEMORY_SELECT = IFNULL(LOWER(#{ccompMemorySelect,jdbcType=VARCHAR}), 'x')
			,CCOMP_RECOG_MEMORY = IFNULL(LOWER(#{ccompRecogMemory,jdbcType=VARCHAR}), 'x')
			,SC_PAIR_ASSO = IFNULL(LOWER(#{scPairAsso,jdbcType=VARCHAR}), 'x')
			,SC_IMMED_RECOG = IFNULL(LOWER(#{scImmedRecog,jdbcType=VARCHAR}), 'x')
			,SC_IMMED_REMEMBER = IFNULL(LOWER(#{scImmedRemember,jdbcType=VARCHAR}), 'x')
			,SC_SUSTAIN_ATT = IFNULL(LOWER(#{scSustainAtt,jdbcType=VARCHAR}), 'x')
			,SC_DELAY_RECOG = IFNULL(LOWER(#{scDelayRecog,jdbcType=VARCHAR}), 'x')
			,EXC_PAIR_ASSO = IFNULL(LOWER(#{excPairAsso,jdbcType=VARCHAR}), 'x')
			,EXC_IMMED_RECOG = IFNULL(LOWER(#{excImmedRecog,jdbcType=VARCHAR}), 'x')
			,EXC_IMMED_REMEMBER = IFNULL(LOWER(#{excImmedRemember,jdbcType=VARCHAR}), 'x')
			,EXC_SUSTAIN_ATT = IFNULL(LOWER(#{excSustainAtt,jdbcType=VARCHAR}), 'x')
			,EXC_DELAY_RECOG = IFNULL(LOWER(#{excDelayRecog,jdbcType=VARCHAR}), 'x')
			,P_RS_COMPSC = IFNULL(LOWER(#{pRsCompsc,jdbcType=VARCHAR}), 'x')
			,P_EC_COMPSC = IFNULL(LOWER(#{pEcCompsc,jdbcType=VARCHAR}), 'x')
			,SC_ATTENTION = IFNULL(LOWER(#{scAttention,jdbcType=VARCHAR}), 'x')
			,SC_ACTIV_LEVEL = IFNULL(LOWER(#{scActivLevel,jdbcType=VARCHAR}), 'x')
			,SC_IMPULS = IFNULL(LOWER(#{scImpuls,jdbcType=VARCHAR}), 'x')
			,SC_ADAPTABILITY = IFNULL(LOWER(#{scAdaptability,jdbcType=VARCHAR}), 'x')
			,SC_MOOD_CONFID = IFNULL(LOWER(#{scMoodConfid,jdbcType=VARCHAR}), 'x')
			,SC_FEEL_EMO = IFNULL(LOWER(#{scFeelEmo,jdbcType=VARCHAR}), 'x')
			,SC_SOCIABILITY = IFNULL(LOWER(#{scSociability,jdbcType=VARCHAR}), 'x')
			,SC_CONTROL = IFNULL(LOWER(#{scControl,jdbcType=VARCHAR}), 'x')
			,EXC_ATTENTION = IFNULL(LOWER(#{excAttention,jdbcType=VARCHAR}), 'x')
			,EXC_ACTIV_LEVEL = IFNULL(LOWER(#{excActivLevel,jdbcType=VARCHAR}), 'x')
			,EXC_IMPULS = IFNULL(LOWER(#{excImpuls,jdbcType=VARCHAR}), 'x')
			,EXC_ADAPTABILITY = IFNULL(LOWER(#{excAdaptability,jdbcType=VARCHAR}), 'x')
			,EXC_MOOD_CONFID = IFNULL(LOWER(#{excMoodConfid,jdbcType=VARCHAR}), 'x')
			,EXC_FEEL_EMO = IFNULL(LOWER(#{excFeelEmo,jdbcType=VARCHAR}), 'x')
			,EXC_SOCIABILITY = IFNULL(LOWER(#{excSociability,jdbcType=VARCHAR}), 'x')
			,EXC_CONTROL = IFNULL(LOWER(#{excControl,jdbcType=VARCHAR}), 'x')
			,UPDATE_DATE = now()
			,UPDATE_BY = #{createBy , jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteNeuropsyAdos1" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_ADOS1 
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyAdos2" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_ADOS2 
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<!--  
	<delete id="deleteNeuropsyAdos3" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_ADOS3
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	-->
	
	<delete id="deleteNeuropsyPep" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_PEP 
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsySms" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_SMS 
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteNeuropsyCars" parameterType="map">
		
		DELETE
		FROM T_NEUROPSY_CARS
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
	
	<delete id="deleteS1IKLeiter" parameterType="map">
		
		DELETE
		FROM T_S1_IKLEITER
		WHERE 1=1
				AND TARGET_ID = #{targetId}
				AND PERFORM_CNT = #{performCnt}
				AND RND_ID = #{rndId}
				
	</delete>
</mapper>
		
